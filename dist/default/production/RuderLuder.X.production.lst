

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jun 29 10:30:34 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F1507
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1507 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  018E                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0197                     	;# 
   137  020C                     	;# 
   138  020D                     	;# 
   139  0391                     	;# 
   140  0392                     	;# 
   141  0393                     	;# 
   142  0394                     	;# 
   143  0395                     	;# 
   144  0396                     	;# 
   145  0498                     	;# 
   146  0498                     	;# 
   147  0499                     	;# 
   148  049A                     	;# 
   149  049B                     	;# 
   150  049B                     	;# 
   151  049C                     	;# 
   152  049D                     	;# 
   153  049E                     	;# 
   154  049F                     	;# 
   155  0611                     	;# 
   156  0612                     	;# 
   157  0613                     	;# 
   158  0613                     	;# 
   159  0614                     	;# 
   160  0615                     	;# 
   161  0616                     	;# 
   162  0616                     	;# 
   163  0617                     	;# 
   164  0618                     	;# 
   165  0619                     	;# 
   166  0619                     	;# 
   167  061A                     	;# 
   168  061B                     	;# 
   169  061C                     	;# 
   170  061C                     	;# 
   171  0691                     	;# 
   172  0692                     	;# 
   173  0693                     	;# 
   174  0694                     	;# 
   175  0695                     	;# 
   176  0F0F                     	;# 
   177  0F10                     	;# 
   178  0F11                     	;# 
   179  0F12                     	;# 
   180  0F13                     	;# 
   181  0F14                     	;# 
   182  0F15                     	;# 
   183  0F16                     	;# 
   184  0F17                     	;# 
   185  0F18                     	;# 
   186  0F19                     	;# 
   187  0F1A                     	;# 
   188  0F1B                     	;# 
   189  0F1C                     	;# 
   190  0F1D                     	;# 
   191  0F1E                     	;# 
   192  0F1F                     	;# 
   193  0FE3                     	;# 
   194  0FE4                     	;# 
   195  0FE5                     	;# 
   196  0FE6                     	;# 
   197  0FE7                     	;# 
   198  0FE8                     	;# 
   199  0FE9                     	;# 
   200  0FEA                     	;# 
   201  0FEB                     	;# 
   202  0FED                     	;# 
   203  0FEE                     	;# 
   204  0FEF                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  0116                     	;# 
   253  0117                     	;# 
   254  011D                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  018E                     	;# 
   258  0191                     	;# 
   259  0191                     	;# 
   260  0192                     	;# 
   261  0193                     	;# 
   262  0193                     	;# 
   263  0194                     	;# 
   264  0195                     	;# 
   265  0196                     	;# 
   266  0197                     	;# 
   267  020C                     	;# 
   268  020D                     	;# 
   269  0391                     	;# 
   270  0392                     	;# 
   271  0393                     	;# 
   272  0394                     	;# 
   273  0395                     	;# 
   274  0396                     	;# 
   275  0498                     	;# 
   276  0498                     	;# 
   277  0499                     	;# 
   278  049A                     	;# 
   279  049B                     	;# 
   280  049B                     	;# 
   281  049C                     	;# 
   282  049D                     	;# 
   283  049E                     	;# 
   284  049F                     	;# 
   285  0611                     	;# 
   286  0612                     	;# 
   287  0613                     	;# 
   288  0613                     	;# 
   289  0614                     	;# 
   290  0615                     	;# 
   291  0616                     	;# 
   292  0616                     	;# 
   293  0617                     	;# 
   294  0618                     	;# 
   295  0619                     	;# 
   296  0619                     	;# 
   297  061A                     	;# 
   298  061B                     	;# 
   299  061C                     	;# 
   300  061C                     	;# 
   301  0691                     	;# 
   302  0692                     	;# 
   303  0693                     	;# 
   304  0694                     	;# 
   305  0695                     	;# 
   306  0F0F                     	;# 
   307  0F10                     	;# 
   308  0F11                     	;# 
   309  0F12                     	;# 
   310  0F13                     	;# 
   311  0F14                     	;# 
   312  0F15                     	;# 
   313  0F16                     	;# 
   314  0F17                     	;# 
   315  0F18                     	;# 
   316  0F19                     	;# 
   317  0F1A                     	;# 
   318  0F1B                     	;# 
   319  0F1C                     	;# 
   320  0F1D                     	;# 
   321  0F1E                     	;# 
   322  0F1F                     	;# 
   323  0FE3                     	;# 
   324  0FE4                     	;# 
   325  0FE5                     	;# 
   326  0FE6                     	;# 
   327  0FE7                     	;# 
   328  0FE8                     	;# 
   329  0FE9                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000D                     	;# 
   349  000E                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0013                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  0116                     	;# 
   383  0117                     	;# 
   384  011D                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  018E                     	;# 
   388  0191                     	;# 
   389  0191                     	;# 
   390  0192                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0194                     	;# 
   394  0195                     	;# 
   395  0196                     	;# 
   396  0197                     	;# 
   397  020C                     	;# 
   398  020D                     	;# 
   399  0391                     	;# 
   400  0392                     	;# 
   401  0393                     	;# 
   402  0394                     	;# 
   403  0395                     	;# 
   404  0396                     	;# 
   405  0498                     	;# 
   406  0498                     	;# 
   407  0499                     	;# 
   408  049A                     	;# 
   409  049B                     	;# 
   410  049B                     	;# 
   411  049C                     	;# 
   412  049D                     	;# 
   413  049E                     	;# 
   414  049F                     	;# 
   415  0611                     	;# 
   416  0612                     	;# 
   417  0613                     	;# 
   418  0613                     	;# 
   419  0614                     	;# 
   420  0615                     	;# 
   421  0616                     	;# 
   422  0616                     	;# 
   423  0617                     	;# 
   424  0618                     	;# 
   425  0619                     	;# 
   426  0619                     	;# 
   427  061A                     	;# 
   428  061B                     	;# 
   429  061C                     	;# 
   430  061C                     	;# 
   431  0691                     	;# 
   432  0692                     	;# 
   433  0693                     	;# 
   434  0694                     	;# 
   435  0695                     	;# 
   436  0F0F                     	;# 
   437  0F10                     	;# 
   438  0F11                     	;# 
   439  0F12                     	;# 
   440  0F13                     	;# 
   441  0F14                     	;# 
   442  0F15                     	;# 
   443  0F16                     	;# 
   444  0F17                     	;# 
   445  0F18                     	;# 
   446  0F19                     	;# 
   447  0F1A                     	;# 
   448  0F1B                     	;# 
   449  0F1C                     	;# 
   450  0F1D                     	;# 
   451  0F1E                     	;# 
   452  0F1F                     	;# 
   453  0FE3                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEB                     	;# 
   462  0FED                     	;# 
   463  0FEE                     	;# 
   464  0FEF                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0093                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  009F                     	;# 
   509  010C                     	;# 
   510  010D                     	;# 
   511  010E                     	;# 
   512  0116                     	;# 
   513  0117                     	;# 
   514  011D                     	;# 
   515  018C                     	;# 
   516  018D                     	;# 
   517  018E                     	;# 
   518  0191                     	;# 
   519  0191                     	;# 
   520  0192                     	;# 
   521  0193                     	;# 
   522  0193                     	;# 
   523  0194                     	;# 
   524  0195                     	;# 
   525  0196                     	;# 
   526  0197                     	;# 
   527  020C                     	;# 
   528  020D                     	;# 
   529  0391                     	;# 
   530  0392                     	;# 
   531  0393                     	;# 
   532  0394                     	;# 
   533  0395                     	;# 
   534  0396                     	;# 
   535  0498                     	;# 
   536  0498                     	;# 
   537  0499                     	;# 
   538  049A                     	;# 
   539  049B                     	;# 
   540  049B                     	;# 
   541  049C                     	;# 
   542  049D                     	;# 
   543  049E                     	;# 
   544  049F                     	;# 
   545  0611                     	;# 
   546  0612                     	;# 
   547  0613                     	;# 
   548  0613                     	;# 
   549  0614                     	;# 
   550  0615                     	;# 
   551  0616                     	;# 
   552  0616                     	;# 
   553  0617                     	;# 
   554  0618                     	;# 
   555  0619                     	;# 
   556  0619                     	;# 
   557  061A                     	;# 
   558  061B                     	;# 
   559  061C                     	;# 
   560  061C                     	;# 
   561  0691                     	;# 
   562  0692                     	;# 
   563  0693                     	;# 
   564  0694                     	;# 
   565  0695                     	;# 
   566  0F0F                     	;# 
   567  0F10                     	;# 
   568  0F11                     	;# 
   569  0F12                     	;# 
   570  0F13                     	;# 
   571  0F14                     	;# 
   572  0F15                     	;# 
   573  0F16                     	;# 
   574  0F17                     	;# 
   575  0F18                     	;# 
   576  0F19                     	;# 
   577  0F1A                     	;# 
   578  0F1B                     	;# 
   579  0F1C                     	;# 
   580  0F1D                     	;# 
   581  0F1E                     	;# 
   582  0F1F                     	;# 
   583  0FE3                     	;# 
   584  0FE4                     	;# 
   585  0FE5                     	;# 
   586  0FE6                     	;# 
   587  0FE7                     	;# 
   588  0FE8                     	;# 
   589  0FE9                     	;# 
   590  0FEA                     	;# 
   591  0FEB                     	;# 
   592  0FED                     	;# 
   593  0FEE                     	;# 
   594  0FEF                     	;# 
   595  0000                     	;# 
   596  0001                     	;# 
   597  0002                     	;# 
   598  0003                     	;# 
   599  0004                     	;# 
   600  0005                     	;# 
   601  0006                     	;# 
   602  0007                     	;# 
   603  0008                     	;# 
   604  0009                     	;# 
   605  000A                     	;# 
   606  000B                     	;# 
   607  000C                     	;# 
   608  000D                     	;# 
   609  000E                     	;# 
   610  0011                     	;# 
   611  0012                     	;# 
   612  0013                     	;# 
   613  0015                     	;# 
   614  0016                     	;# 
   615  0016                     	;# 
   616  0017                     	;# 
   617  0018                     	;# 
   618  0019                     	;# 
   619  001A                     	;# 
   620  001B                     	;# 
   621  001C                     	;# 
   622  008C                     	;# 
   623  008D                     	;# 
   624  008E                     	;# 
   625  0091                     	;# 
   626  0092                     	;# 
   627  0093                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0099                     	;# 
   632  009A                     	;# 
   633  009B                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009E                     	;# 
   638  009F                     	;# 
   639  010C                     	;# 
   640  010D                     	;# 
   641  010E                     	;# 
   642  0116                     	;# 
   643  0117                     	;# 
   644  011D                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  018E                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0197                     	;# 
   657  020C                     	;# 
   658  020D                     	;# 
   659  0391                     	;# 
   660  0392                     	;# 
   661  0393                     	;# 
   662  0394                     	;# 
   663  0395                     	;# 
   664  0396                     	;# 
   665  0498                     	;# 
   666  0498                     	;# 
   667  0499                     	;# 
   668  049A                     	;# 
   669  049B                     	;# 
   670  049B                     	;# 
   671  049C                     	;# 
   672  049D                     	;# 
   673  049E                     	;# 
   674  049F                     	;# 
   675  0611                     	;# 
   676  0612                     	;# 
   677  0613                     	;# 
   678  0613                     	;# 
   679  0614                     	;# 
   680  0615                     	;# 
   681  0616                     	;# 
   682  0616                     	;# 
   683  0617                     	;# 
   684  0618                     	;# 
   685  0619                     	;# 
   686  0619                     	;# 
   687  061A                     	;# 
   688  061B                     	;# 
   689  061C                     	;# 
   690  061C                     	;# 
   691  0691                     	;# 
   692  0692                     	;# 
   693  0693                     	;# 
   694  0694                     	;# 
   695  0695                     	;# 
   696  0F0F                     	;# 
   697  0F10                     	;# 
   698  0F11                     	;# 
   699  0F12                     	;# 
   700  0F13                     	;# 
   701  0F14                     	;# 
   702  0F15                     	;# 
   703  0F16                     	;# 
   704  0F17                     	;# 
   705  0F18                     	;# 
   706  0F19                     	;# 
   707  0F1A                     	;# 
   708  0F1B                     	;# 
   709  0F1C                     	;# 
   710  0F1D                     	;# 
   711  0F1E                     	;# 
   712  0F1F                     	;# 
   713  0FE3                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  000E                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0015                     	;# 
   744  0016                     	;# 
   745  0016                     	;# 
   746  0017                     	;# 
   747  0018                     	;# 
   748  0019                     	;# 
   749  001A                     	;# 
   750  001B                     	;# 
   751  001C                     	;# 
   752  008C                     	;# 
   753  008D                     	;# 
   754  008E                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0095                     	;# 
   759  0096                     	;# 
   760  0097                     	;# 
   761  0099                     	;# 
   762  009A                     	;# 
   763  009B                     	;# 
   764  009B                     	;# 
   765  009C                     	;# 
   766  009D                     	;# 
   767  009E                     	;# 
   768  009F                     	;# 
   769  010C                     	;# 
   770  010D                     	;# 
   771  010E                     	;# 
   772  0116                     	;# 
   773  0117                     	;# 
   774  011D                     	;# 
   775  018C                     	;# 
   776  018D                     	;# 
   777  018E                     	;# 
   778  0191                     	;# 
   779  0191                     	;# 
   780  0192                     	;# 
   781  0193                     	;# 
   782  0193                     	;# 
   783  0194                     	;# 
   784  0195                     	;# 
   785  0196                     	;# 
   786  0197                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  0391                     	;# 
   790  0392                     	;# 
   791  0393                     	;# 
   792  0394                     	;# 
   793  0395                     	;# 
   794  0396                     	;# 
   795  0498                     	;# 
   796  0498                     	;# 
   797  0499                     	;# 
   798  049A                     	;# 
   799  049B                     	;# 
   800  049B                     	;# 
   801  049C                     	;# 
   802  049D                     	;# 
   803  049E                     	;# 
   804  049F                     	;# 
   805  0611                     	;# 
   806  0612                     	;# 
   807  0613                     	;# 
   808  0613                     	;# 
   809  0614                     	;# 
   810  0615                     	;# 
   811  0616                     	;# 
   812  0616                     	;# 
   813  0617                     	;# 
   814  0618                     	;# 
   815  0619                     	;# 
   816  0619                     	;# 
   817  061A                     	;# 
   818  061B                     	;# 
   819  061C                     	;# 
   820  061C                     	;# 
   821  0691                     	;# 
   822  0692                     	;# 
   823  0693                     	;# 
   824  0694                     	;# 
   825  0695                     	;# 
   826  0F0F                     	;# 
   827  0F10                     	;# 
   828  0F11                     	;# 
   829  0F12                     	;# 
   830  0F13                     	;# 
   831  0F14                     	;# 
   832  0F15                     	;# 
   833  0F16                     	;# 
   834  0F17                     	;# 
   835  0F18                     	;# 
   836  0F19                     	;# 
   837  0F1A                     	;# 
   838  0F1B                     	;# 
   839  0F1C                     	;# 
   840  0F1D                     	;# 
   841  0F1E                     	;# 
   842  0F1F                     	;# 
   843  0FE3                     	;# 
   844  0FE4                     	;# 
   845  0FE5                     	;# 
   846  0FE6                     	;# 
   847  0FE7                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEF                     	;# 
   855  0000                     	;# 
   856  0001                     	;# 
   857  0002                     	;# 
   858  0003                     	;# 
   859  0004                     	;# 
   860  0005                     	;# 
   861  0006                     	;# 
   862  0007                     	;# 
   863  0008                     	;# 
   864  0009                     	;# 
   865  000A                     	;# 
   866  000B                     	;# 
   867  000C                     	;# 
   868  000D                     	;# 
   869  000E                     	;# 
   870  0011                     	;# 
   871  0012                     	;# 
   872  0013                     	;# 
   873  0015                     	;# 
   874  0016                     	;# 
   875  0016                     	;# 
   876  0017                     	;# 
   877  0018                     	;# 
   878  0019                     	;# 
   879  001A                     	;# 
   880  001B                     	;# 
   881  001C                     	;# 
   882  008C                     	;# 
   883  008D                     	;# 
   884  008E                     	;# 
   885  0091                     	;# 
   886  0092                     	;# 
   887  0093                     	;# 
   888  0095                     	;# 
   889  0096                     	;# 
   890  0097                     	;# 
   891  0099                     	;# 
   892  009A                     	;# 
   893  009B                     	;# 
   894  009B                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  009F                     	;# 
   899  010C                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  0116                     	;# 
   903  0117                     	;# 
   904  011D                     	;# 
   905  018C                     	;# 
   906  018D                     	;# 
   907  018E                     	;# 
   908  0191                     	;# 
   909  0191                     	;# 
   910  0192                     	;# 
   911  0193                     	;# 
   912  0193                     	;# 
   913  0194                     	;# 
   914  0195                     	;# 
   915  0196                     	;# 
   916  0197                     	;# 
   917  020C                     	;# 
   918  020D                     	;# 
   919  0391                     	;# 
   920  0392                     	;# 
   921  0393                     	;# 
   922  0394                     	;# 
   923  0395                     	;# 
   924  0396                     	;# 
   925  0498                     	;# 
   926  0498                     	;# 
   927  0499                     	;# 
   928  049A                     	;# 
   929  049B                     	;# 
   930  049B                     	;# 
   931  049C                     	;# 
   932  049D                     	;# 
   933  049E                     	;# 
   934  049F                     	;# 
   935  0611                     	;# 
   936  0612                     	;# 
   937  0613                     	;# 
   938  0613                     	;# 
   939  0614                     	;# 
   940  0615                     	;# 
   941  0616                     	;# 
   942  0616                     	;# 
   943  0617                     	;# 
   944  0618                     	;# 
   945  0619                     	;# 
   946  0619                     	;# 
   947  061A                     	;# 
   948  061B                     	;# 
   949  061C                     	;# 
   950  061C                     	;# 
   951  0691                     	;# 
   952  0692                     	;# 
   953  0693                     	;# 
   954  0694                     	;# 
   955  0695                     	;# 
   956  0F0F                     	;# 
   957  0F10                     	;# 
   958  0F11                     	;# 
   959  0F12                     	;# 
   960  0F13                     	;# 
   961  0F14                     	;# 
   962  0F15                     	;# 
   963  0F16                     	;# 
   964  0F17                     	;# 
   965  0F18                     	;# 
   966  0F19                     	;# 
   967  0F1A                     	;# 
   968  0F1B                     	;# 
   969  0F1C                     	;# 
   970  0F1D                     	;# 
   971  0F1E                     	;# 
   972  0F1F                     	;# 
   973  0FE3                     	;# 
   974  0FE4                     	;# 
   975  0FE5                     	;# 
   976  0FE6                     	;# 
   977  0FE7                     	;# 
   978  0FE8                     	;# 
   979  0FE9                     	;# 
   980  0FEA                     	;# 
   981  0FEB                     	;# 
   982  0FED                     	;# 
   983  0FEE                     	;# 
   984  0FEF                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0008                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  0011                     	;# 
  1001  0012                     	;# 
  1002  0013                     	;# 
  1003  0015                     	;# 
  1004  0016                     	;# 
  1005  0016                     	;# 
  1006  0017                     	;# 
  1007  0018                     	;# 
  1008  0019                     	;# 
  1009  001A                     	;# 
  1010  001B                     	;# 
  1011  001C                     	;# 
  1012  008C                     	;# 
  1013  008D                     	;# 
  1014  008E                     	;# 
  1015  0091                     	;# 
  1016  0092                     	;# 
  1017  0093                     	;# 
  1018  0095                     	;# 
  1019  0096                     	;# 
  1020  0097                     	;# 
  1021  0099                     	;# 
  1022  009A                     	;# 
  1023  009B                     	;# 
  1024  009B                     	;# 
  1025  009C                     	;# 
  1026  009D                     	;# 
  1027  009E                     	;# 
  1028  009F                     	;# 
  1029  010C                     	;# 
  1030  010D                     	;# 
  1031  010E                     	;# 
  1032  0116                     	;# 
  1033  0117                     	;# 
  1034  011D                     	;# 
  1035  018C                     	;# 
  1036  018D                     	;# 
  1037  018E                     	;# 
  1038  0191                     	;# 
  1039  0191                     	;# 
  1040  0192                     	;# 
  1041  0193                     	;# 
  1042  0193                     	;# 
  1043  0194                     	;# 
  1044  0195                     	;# 
  1045  0196                     	;# 
  1046  0197                     	;# 
  1047  020C                     	;# 
  1048  020D                     	;# 
  1049  0391                     	;# 
  1050  0392                     	;# 
  1051  0393                     	;# 
  1052  0394                     	;# 
  1053  0395                     	;# 
  1054  0396                     	;# 
  1055  0498                     	;# 
  1056  0498                     	;# 
  1057  0499                     	;# 
  1058  049A                     	;# 
  1059  049B                     	;# 
  1060  049B                     	;# 
  1061  049C                     	;# 
  1062  049D                     	;# 
  1063  049E                     	;# 
  1064  049F                     	;# 
  1065  0611                     	;# 
  1066  0612                     	;# 
  1067  0613                     	;# 
  1068  0613                     	;# 
  1069  0614                     	;# 
  1070  0615                     	;# 
  1071  0616                     	;# 
  1072  0616                     	;# 
  1073  0617                     	;# 
  1074  0618                     	;# 
  1075  0619                     	;# 
  1076  0619                     	;# 
  1077  061A                     	;# 
  1078  061B                     	;# 
  1079  061C                     	;# 
  1080  061C                     	;# 
  1081  0691                     	;# 
  1082  0692                     	;# 
  1083  0693                     	;# 
  1084  0694                     	;# 
  1085  0695                     	;# 
  1086  0F0F                     	;# 
  1087  0F10                     	;# 
  1088  0F11                     	;# 
  1089  0F12                     	;# 
  1090  0F13                     	;# 
  1091  0F14                     	;# 
  1092  0F15                     	;# 
  1093  0F16                     	;# 
  1094  0F17                     	;# 
  1095  0F18                     	;# 
  1096  0F19                     	;# 
  1097  0F1A                     	;# 
  1098  0F1B                     	;# 
  1099  0F1C                     	;# 
  1100  0F1D                     	;# 
  1101  0F1E                     	;# 
  1102  0F1F                     	;# 
  1103  0FE3                     	;# 
  1104  0FE4                     	;# 
  1105  0FE5                     	;# 
  1106  0FE6                     	;# 
  1107  0FE7                     	;# 
  1108  0FE8                     	;# 
  1109  0FE9                     	;# 
  1110  0FEA                     	;# 
  1111  0FEB                     	;# 
  1112  0FED                     	;# 
  1113  0FEE                     	;# 
  1114  0FEF                     	;# 
  1115  0000                     	;# 
  1116  0001                     	;# 
  1117  0002                     	;# 
  1118  0003                     	;# 
  1119  0004                     	;# 
  1120  0005                     	;# 
  1121  0006                     	;# 
  1122  0007                     	;# 
  1123  0008                     	;# 
  1124  0009                     	;# 
  1125  000A                     	;# 
  1126  000B                     	;# 
  1127  000C                     	;# 
  1128  000D                     	;# 
  1129  000E                     	;# 
  1130  0011                     	;# 
  1131  0012                     	;# 
  1132  0013                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0016                     	;# 
  1136  0017                     	;# 
  1137  0018                     	;# 
  1138  0019                     	;# 
  1139  001A                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  008C                     	;# 
  1143  008D                     	;# 
  1144  008E                     	;# 
  1145  0091                     	;# 
  1146  0092                     	;# 
  1147  0093                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0099                     	;# 
  1152  009A                     	;# 
  1153  009B                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  010C                     	;# 
  1160  010D                     	;# 
  1161  010E                     	;# 
  1162  0116                     	;# 
  1163  0117                     	;# 
  1164  011D                     	;# 
  1165  018C                     	;# 
  1166  018D                     	;# 
  1167  018E                     	;# 
  1168  0191                     	;# 
  1169  0191                     	;# 
  1170  0192                     	;# 
  1171  0193                     	;# 
  1172  0193                     	;# 
  1173  0194                     	;# 
  1174  0195                     	;# 
  1175  0196                     	;# 
  1176  0197                     	;# 
  1177  020C                     	;# 
  1178  020D                     	;# 
  1179  0391                     	;# 
  1180  0392                     	;# 
  1181  0393                     	;# 
  1182  0394                     	;# 
  1183  0395                     	;# 
  1184  0396                     	;# 
  1185  0498                     	;# 
  1186  0498                     	;# 
  1187  0499                     	;# 
  1188  049A                     	;# 
  1189  049B                     	;# 
  1190  049B                     	;# 
  1191  049C                     	;# 
  1192  049D                     	;# 
  1193  049E                     	;# 
  1194  049F                     	;# 
  1195  0611                     	;# 
  1196  0612                     	;# 
  1197  0613                     	;# 
  1198  0613                     	;# 
  1199  0614                     	;# 
  1200  0615                     	;# 
  1201  0616                     	;# 
  1202  0616                     	;# 
  1203  0617                     	;# 
  1204  0618                     	;# 
  1205  0619                     	;# 
  1206  0619                     	;# 
  1207  061A                     	;# 
  1208  061B                     	;# 
  1209  061C                     	;# 
  1210  061C                     	;# 
  1211  0691                     	;# 
  1212  0692                     	;# 
  1213  0693                     	;# 
  1214  0694                     	;# 
  1215  0695                     	;# 
  1216  0F0F                     	;# 
  1217  0F10                     	;# 
  1218  0F11                     	;# 
  1219  0F12                     	;# 
  1220  0F13                     	;# 
  1221  0F14                     	;# 
  1222  0F15                     	;# 
  1223  0F16                     	;# 
  1224  0F17                     	;# 
  1225  0F18                     	;# 
  1226  0F19                     	;# 
  1227  0F1A                     	;# 
  1228  0F1B                     	;# 
  1229  0F1C                     	;# 
  1230  0F1D                     	;# 
  1231  0F1E                     	;# 
  1232  0F1F                     	;# 
  1233  0FE3                     	;# 
  1234  0FE4                     	;# 
  1235  0FE5                     	;# 
  1236  0FE6                     	;# 
  1237  0FE7                     	;# 
  1238  0FE8                     	;# 
  1239  0FE9                     	;# 
  1240  0FEA                     	;# 
  1241  0FEB                     	;# 
  1242  0FED                     	;# 
  1243  0FEE                     	;# 
  1244  0FEF                     	;# 
  1245                           
  1246                           	psect	idataBANK0
  1247  04AE                     __pidataBANK0:
  1248                           
  1249                           ;initializer for _m
  1250  04AE  34E8               	retlw	232
  1251  04AF  3403               	retlw	3
  1252  04B0  3400               	retlw	0
  1253  04B1  3400               	retlw	0
  1254                           
  1255                           ;initializer for main@channel
  1256  04B2  340A               	retlw	10
  1257                           
  1258                           ;initializer for _upperLimit
  1259  04B3  34FF               	retlw	255
  1260  04B4  3403               	retlw	3
  1261  04B5  3400               	retlw	0
  1262  04B6  3400               	retlw	0
  1263                           
  1264                           	psect	stringtext1
  1265  04F4                     __pstringtext1:
  1266  04F4                     _fixedPointFactor:
  1267  04F4  34E8               	retlw	232
  1268  04F5  3403               	retlw	3
  1269  04F6  3400               	retlw	0
  1270  04F7  3400               	retlw	0
  1271  04F8                     __end_of_fixedPointFactor:
  1272                           
  1273                           	psect	nvBANK0
  1274  0053                     __pnvBANK0:
  1275  0053                     _TMR0_InterruptHandler:
  1276  0053                     	ds	2
  1277  0055                     _timer0ReloadVal:
  1278  0055                     	ds	1
  1279  000C                     _PORTAbits	set	12
  1280  000B                     _INTCONbits	set	11
  1281  0015                     _TMR0	set	21
  1282  001C                     _T2CONbits	set	28
  1283  001C                     _T2CON	set	28
  1284  0011                     _PIR1bits	set	17
  1285  001A                     _TMR2	set	26
  1286  001B                     _PR2	set	27
  1287  0095                     _OPTION_REG	set	149
  1288  0095                     _OPTION_REGbits	set	149
  1289  008E                     _TRISC	set	142
  1290  008D                     _TRISB	set	141
  1291  008C                     _TRISA	set	140
  1292  0097                     _WDTCON	set	151
  1293  0099                     _OSCCON	set	153
  1294  009D                     _ADCON0bits	set	157
  1295  009C                     _ADRESH	set	156
  1296  009B                     _ADRESL	set	155
  1297  009F                     _ADCON2	set	159
  1298  009E                     _ADCON1	set	158
  1299  009D                     _ADCON0	set	157
  1300  010D                     _LATBbits	set	269
  1301  010E                     _LATCbits	set	270
  1302  011D                     _APFCON	set	285
  1303  010E                     _LATC	set	270
  1304  010D                     _LATB	set	269
  1305  010C                     _LATA	set	268
  1306  0116                     _BORCON	set	278
  1307  018C                     _ANSELA	set	396
  1308  018D                     _ANSELB	set	397
  1309  018E                     _ANSELC	set	398
  1310  020C                     _WPUA	set	524
  1311  020D                     _WPUB	set	525
  1312  0617                     _PWM3DCL	set	1559
  1313  0618                     _PWM3DCH	set	1560
  1314  0619                     _PWM3CON	set	1561
  1315                           
  1316                           	psect	cinit
  1317  000D                     start_initialization:	
  1318                           ; #config settings
  1319                           
  1320  000D                     __initialization:
  1321                           
  1322                           ; Initialize objects allocated to BANK0
  1323  000D  30AE               	movlw	low __pidataBANK0
  1324  000E  0084               	movwf	4
  1325  000F  3084               	movlw	(high __pidataBANK0)| (0+128)
  1326  0010  0085               	movwf	5
  1327  0011  304A               	movlw	low __pdataBANK0
  1328  0012  0086               	movwf	6
  1329  0013  3000               	movlw	high __pdataBANK0
  1330  0014  0087               	movwf	7
  1331  0015  3009               	movlw	9
  1332  0016  24D7               	fcall	init_ram
  1333                           
  1334                           ; Clear objects allocated to BANK0
  1335  0017  3036               	movlw	low __pbssBANK0
  1336  0018  0084               	movwf	4
  1337  0019  3000               	movlw	high __pbssBANK0
  1338  001A  0085               	movwf	5
  1339  001B  3014               	movlw	20
  1340  001C  24DD               	fcall	clear_ram0
  1341  001D                     end_of_initialization:	
  1342                           ;End of C runtime variable initialization code
  1343                           
  1344  001D                     __end_of__initialization:
  1345  001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1346  001E  0020               	movlb	0
  1347  001F  2820               	ljmp	_main	;jump to C main() function
  1348                           
  1349                           	psect	bssBANK0
  1350  0036                     __pbssBANK0:
  1351  0036                     _lowerLimit:
  1352  0036                     	ds	4
  1353  003A                     _adcValuePosition:
  1354  003A                     	ds	4
  1355  003E                     _b:
  1356  003E                     	ds	3
  1357  0041                     _msPressed:
  1358  0041                     	ds	2
  1359  0043                     _msTick:
  1360  0043                     	ds	2
  1361  0045                     _ADC_InterruptHandler:
  1362  0045                     	ds	2
  1363  0047                     _currentState:
  1364  0047                     	ds	1
  1365  0048                     _doToggle:
  1366  0048                     	ds	1
  1367  0049                     _doButtonAction:
  1368  0049                     	ds	1
  1369                           
  1370                           	psect	dataBANK0
  1371  004A                     __pdataBANK0:
  1372  004A                     _m:
  1373  004A                     	ds	4
  1374  004E                     main@channel:
  1375  004E                     	ds	1
  1376  004F                     _upperLimit:
  1377  004F                     	ds	4
  1378                           
  1379                           	psect	inittext
  1380  04D7                     init_ram:
  1381  04D7  00FE               	movwf	126
  1382  04D8                     initloop:
  1383  04D8  0012               	moviw fsr0++
  1384  04D9  001E               	movwi fsr1++
  1385  04DA  0BFE               	decfsz	126,f
  1386  04DB  2CD8               	goto	initloop
  1387  04DC  3400               	retlw	0
  1388                           
  1389                           	psect	clrtext
  1390  04DD                     clear_ram0:	
  1391                           ;	Called with FSR0 containing the base address, and
  1392                           ;	WREG with the size to clear
  1393                           
  1394  04DD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1395  04DE                     clrloop0:
  1396  04DE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1397  04DF  3101               	addfsr 0,1
  1398  04E0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1399  04E1  2CDE               	goto	clrloop0	;have we reached the end yet?
  1400  04E2  3400               	retlw	0	;all done for this memory range, return
  1401                           
  1402                           	psect	cstackCOMMON
  1403  0070                     __pcstackCOMMON:
  1404  0070                     ?_PIN_MANAGER_Initialize:
  1405  0070                     ??_PIN_MANAGER_Initialize:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_OSCILLATOR_Initialize:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ??_OSCILLATOR_Initialize:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_WDT_Initialize:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ??_WDT_Initialize:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?_PWM3_Initialize:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ??_PWM3_Initialize:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_TMR2_Initialize:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ??_TMR2_Initialize:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_TMR0_Initialize:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_TMR0_SetInterruptHandler:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_TMR0_DefaultInterruptHandler:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ??_TMR0_DefaultInterruptHandler:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_TMR0_CallBack:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ??_TMR0_CallBack:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_setLedsForPositioning:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_ADC_Initialize:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ??_ADC_Initialize:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?_SYSTEM_Initialize:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ?_TMR2_StartTimer:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ??_TMR2_StartTimer:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ?_TMR0_ISR:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ??_TMR0_ISR:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_INTERRUPT_InterruptManager:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ??_INTERRUPT_InterruptManager:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_timer0CallBack:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ??_timer0CallBack:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_setState:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ??_setState:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_main:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ?_ADC_GetConversion:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?___tmul:	
  1499                           ; 2 bytes @ 0x0
  1500                           
  1501  0070                     ?___lmul:	
  1502                           ; 3 bytes @ 0x0
  1503                           
  1504  0070                     ?___lldiv:	
  1505                           ; 4 bytes @ 0x0
  1506                           
  1507  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  1508                           ; 4 bytes @ 0x0
  1509                           
  1510  0070                     ___tmul@multiplier:	
  1511                           ; 2 bytes @ 0x0
  1512                           
  1513  0070                     setLedsForPositioning@adcValue:	
  1514                           ; 3 bytes @ 0x0
  1515                           
  1516  0070                     ___lmul@multiplier:	
  1517                           ; 4 bytes @ 0x0
  1518                           
  1519  0070                     ___lldiv@divisor:	
  1520                           ; 4 bytes @ 0x0
  1521                           
  1522                           
  1523                           ; 4 bytes @ 0x0
  1524  0070                     	ds	2
  1525  0072                     ??_TMR0_Initialize:
  1526  0072                     ??_TMR0_SetInterruptHandler:	
  1527                           ; 1 bytes @ 0x2
  1528                           
  1529  0072                     ??_ADC_GetConversion:	
  1530                           ; 1 bytes @ 0x2
  1531                           
  1532  0072                     setState@newState:	
  1533                           ; 1 bytes @ 0x2
  1534                           
  1535                           
  1536                           ; 1 bytes @ 0x2
  1537  0072                     	ds	1
  1538  0073                     ??_SYSTEM_Initialize:
  1539  0073                     ADC_GetConversion@channel:	
  1540                           ; 1 bytes @ 0x3
  1541                           
  1542  0073                     ___tmul@multiplicand:	
  1543                           ; 1 bytes @ 0x3
  1544                           
  1545                           
  1546                           ; 3 bytes @ 0x3
  1547  0073                     	ds	1
  1548  0074                     ??_setLedsForPositioning:
  1549  0074                     ?_PWM3_LoadDutyValue:	
  1550                           ; 1 bytes @ 0x4
  1551                           
  1552  0074                     PWM3_LoadDutyValue@dutyValue:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555  0074                     ___lmul@multiplicand:	
  1556                           ; 2 bytes @ 0x4
  1557                           
  1558  0074                     ___lldiv@dividend:	
  1559                           ; 4 bytes @ 0x4
  1560                           
  1561                           
  1562                           ; 4 bytes @ 0x4
  1563  0074                     	ds	2
  1564  0076                     ??_PWM3_LoadDutyValue:
  1565  0076                     ??___tmul:	
  1566                           ; 1 bytes @ 0x6
  1567                           
  1568  0076                     ___tmul@product:	
  1569                           ; 1 bytes @ 0x6
  1570                           
  1571                           
  1572                           ; 3 bytes @ 0x6
  1573  0076                     	ds	2
  1574  0078                     ??___lmul:
  1575  0078                     ??___lldiv:	
  1576                           ; 1 bytes @ 0x8
  1577                           
  1578  0078                     ___lmul@product:	
  1579                           ; 1 bytes @ 0x8
  1580                           
  1581                           
  1582                           ; 4 bytes @ 0x8
  1583  0078                     	ds	1
  1584  0079                     ___lldiv@quotient:
  1585                           
  1586                           ; 4 bytes @ 0x9
  1587  0079                     	ds	3
  1588  007C                     ??___aldiv:
  1589                           
  1590                           ; 1 bytes @ 0xC
  1591  007C                     	ds	1
  1592  007D                     ___lldiv@counter:
  1593                           
  1594                           ; 1 bytes @ 0xD
  1595  007D                     	ds	1
  1596                           
  1597                           	psect	cstackBANK0
  1598  0020                     __pcstackBANK0:
  1599  0020                     ?___aldiv:
  1600  0020                     ___aldiv@divisor:	
  1601                           ; 4 bytes @ 0x0
  1602                           
  1603                           
  1604                           ; 4 bytes @ 0x0
  1605  0020                     	ds	4
  1606  0024                     ___aldiv@dividend:
  1607                           
  1608                           ; 4 bytes @ 0x4
  1609  0024                     	ds	4
  1610  0028                     ___aldiv@counter:
  1611                           
  1612                           ; 1 bytes @ 0x8
  1613  0028                     	ds	1
  1614  0029                     ___aldiv@sign:
  1615                           
  1616                           ; 1 bytes @ 0x9
  1617  0029                     	ds	1
  1618  002A                     ___aldiv@quotient:
  1619                           
  1620                           ; 4 bytes @ 0xA
  1621  002A                     	ds	4
  1622  002E                     ??_main:
  1623                           
  1624                           ; 1 bytes @ 0xE
  1625  002E                     	ds	8
  1626                           
  1627                           	psect	maintext
  1628  0020                     __pmaintext:	
  1629 ;;
  1630 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1631 ;;
  1632 ;; *************** function _main *****************
  1633 ;; Defined at:
  1634 ;;		line 156 in file "main.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : B1F/0
  1645 ;;		On exit  : 1F/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1
  1648 ;;      Params:         0       0       0
  1649 ;;      Locals:         0       0       0
  1650 ;;      Temps:          0       8       0
  1651 ;;      Totals:         0       8       0
  1652 ;;Total ram usage:        8 bytes
  1653 ;; Hardware stack levels required when called:    7
  1654 ;; This function calls:
  1655 ;;		_ADC_GetConversion
  1656 ;;		_PWM3_LoadDutyValue
  1657 ;;		_SYSTEM_Initialize
  1658 ;;		_TMR0_SetInterruptHandler
  1659 ;;		_TMR2_StartTimer
  1660 ;;		___aldiv
  1661 ;;		___lldiv
  1662 ;;		___lmul
  1663 ;;		___tmul
  1664 ;;		_setLedsForPositioning
  1665 ;;		_setState
  1666 ;; This function is called by:
  1667 ;;		Startup code after reset
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _main
  1673  0020                     _main:
  1674                           
  1675                           ;main.c: 159:     SYSTEM_Initialize();
  1676                           
  1677                           ;incstack = 0
  1678                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1679  0020  24B7               	fcall	_SYSTEM_Initialize
  1680                           
  1681                           ;main.c: 165:     (INTCONbits.GIE = 1);
  1682  0021  178B               	bsf	11,7	;volatile
  1683                           
  1684                           ;main.c: 176:     setState(STATE_NORMAL);
  1685  0022  3000               	movlw	0
  1686  0023  23B4               	fcall	_setState
  1687                           
  1688                           ;main.c: 179:     TMR0_SetInterruptHandler(timer0CallBack);
  1689  0024  3094               	movlw	low _timer0CallBack
  1690  0025  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1691  0026  3004               	movlw	high _timer0CallBack
  1692  0027  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1693  0028  24EF               	fcall	_TMR0_SetInterruptHandler
  1694                           
  1695                           ;main.c: 180:     TMR2_StartTimer();
  1696  0029  24FC               	fcall	_TMR2_StartTimer
  1697  002A                     l1669:
  1698                           
  1699                           ;main.c: 183:     {;main.c: 184:         static adc_channel_t channel = channelBrightnes
      +                          s;;main.c: 187:         channel = (channel == channelRudder) ? channelBrightness : chann
      +                          elRudder;
  1700  002A  3003               	movlw	3
  1701  002B  0020               	movlb	0	; select bank0
  1702  002C  064E               	xorwf	main@channel,w
  1703  002D  1903               	btfsc	3,2
  1704  002E  2831               	goto	l1673
  1705  002F  3003               	movlw	3
  1706  0030  2832               	goto	L1
  1707  0031                     l1673:
  1708  0031  300A               	movlw	10
  1709  0032                     L1:
  1710  0032  00AE               	movwf	??_main
  1711  0033  082E               	movf	??_main,w
  1712  0034  00CE               	movwf	main@channel
  1713                           
  1714                           ;main.c: 192:         if(channel == channelRudder)
  1715  0035  3003               	movlw	3
  1716  0036  064E               	xorwf	main@channel,w
  1717  0037  1D03               	btfss	3,2
  1718  0038  2843               	goto	l1679
  1719                           
  1720                           ;main.c: 193:         {;main.c: 194:             adcValuePosition = ADC_GetConversion(ch
      +                          annel);
  1721  0039  084E               	movf	main@channel,w
  1722  003A  2452               	fcall	_ADC_GetConversion
  1723  003B  0870               	movf	?_ADC_GetConversion,w
  1724  003C  0020               	movlb	0	; select bank0
  1725  003D  00BA               	movwf	_adcValuePosition
  1726  003E  0871               	movf	?_ADC_GetConversion+1,w
  1727  003F  00BB               	movwf	_adcValuePosition+1
  1728  0040  01BC               	clrf	_adcValuePosition+2
  1729  0041  01BD               	clrf	_adcValuePosition+3
  1730                           
  1731                           ;main.c: 195:         }
  1732  0042  284A               	goto	l1681
  1733  0043                     l1679:
  1734                           
  1735                           ;main.c: 197:         {;main.c: 199:             PWM3_LoadDutyValue(ADC_GetConversion(ch
      +                          annel));
  1736  0043  084E               	movf	main@channel,w
  1737  0044  2452               	fcall	_ADC_GetConversion
  1738  0045  0871               	movf	?_ADC_GetConversion+1,w
  1739  0046  00F5               	movwf	PWM3_LoadDutyValue@dutyValue+1
  1740  0047  0870               	movf	?_ADC_GetConversion,w
  1741  0048  00F4               	movwf	PWM3_LoadDutyValue@dutyValue
  1742  0049  246A               	fcall	_PWM3_LoadDutyValue
  1743  004A                     l1681:
  1744                           
  1745                           ;main.c: 204:         if(!PORTAbits.RA5 && !doButtonAction)
  1746  004A  0020               	movlb	0	; select bank0
  1747  004B  1A8C               	btfsc	12,5	;volatile
  1748  004C  2862               	goto	l1691
  1749  004D  0849               	movf	_doButtonAction,w	;volatile
  1750  004E  1D03               	btfss	3,2
  1751  004F  2862               	goto	l1691
  1752                           
  1753                           ;main.c: 205:         {;main.c: 206:             msPressed++;
  1754  0050  3001               	movlw	1
  1755  0051  07C1               	addwf	_msPressed,f	;volatile
  1756  0052  3000               	movlw	0
  1757  0053  3DC2               	addwfc	_msPressed+1,f	;volatile
  1758                           
  1759                           ;main.c: 208:             if(msPressed > 3000)
  1760  0054  300B               	movlw	11
  1761  0055  0242               	subwf	_msPressed+1,w	;volatile
  1762  0056  30B9               	movlw	185
  1763  0057  1903               	skipnz
  1764  0058  0241               	subwf	_msPressed,w	;volatile
  1765  0059  1C03               	skipc
  1766  005A  285F               	goto	l1689
  1767                           
  1768                           ;main.c: 209:             {;main.c: 210:                 doButtonAction = 1;
  1769  005B  3001               	movlw	1
  1770  005C  00AE               	movwf	??_main
  1771  005D  082E               	movf	??_main,w
  1772  005E  00C9               	movwf	_doButtonAction	;volatile
  1773  005F                     l1689:
  1774  005F  0022               	movlb	2	; select bank2
  1775  0060  168E               	bsf	14,5	;volatile
  1776  0061  2866               	goto	l1695
  1777  0062                     l1691:
  1778                           
  1779                           ;main.c: 215:         {;main.c: 216:             msPressed = 0;
  1780  0062  01C1               	clrf	_msPressed	;volatile
  1781  0063  01C2               	clrf	_msPressed+1	;volatile
  1782  0064  0022               	movlb	2	; select bank2
  1783  0065  128E               	bcf	14,5	;volatile
  1784  0066                     l1695:
  1785                           
  1786                           ;main.c: 222:         if(doButtonAction)
  1787  0066  0020               	movlb	0	; select bank0
  1788  0067  0849               	movf	_doButtonAction,w	;volatile
  1789  0068  1903               	btfsc	3,2
  1790  0069  2995               	goto	l1737
  1791  006A                     l338:	
  1792                           ;main.c: 226:             {;main.c: 228:             }
  1793                           
  1794                           
  1795                           ;main.c: 225:             while(!PORTAbits.RA5)
  1796  006A  1A8C               	btfsc	12,5	;volatile
  1797  006B  28BE               	goto	l1715
  1798  006C  286A               	goto	l338
  1799  006D                     l1699:
  1800                           
  1801                           ;main.c: 233:                     setState(STATE_TEACH_LEFT);
  1802  006D  3001               	movlw	1
  1803  006E  23B4               	fcall	_setState
  1804                           
  1805                           ;main.c: 234:                     break;
  1806  006F  28D1               	goto	l1717
  1807  0070                     l1701:
  1808                           
  1809                           ;main.c: 237:                     lowerLimit = adcValuePosition;
  1810  0070  083D               	movf	_adcValuePosition+3,w
  1811  0071  00B9               	movwf	_lowerLimit+3
  1812  0072  083C               	movf	_adcValuePosition+2,w
  1813  0073  00B8               	movwf	_lowerLimit+2
  1814  0074  083B               	movf	_adcValuePosition+1,w
  1815  0075  00B7               	movwf	_lowerLimit+1
  1816  0076  083A               	movf	_adcValuePosition,w
  1817  0077  00B6               	movwf	_lowerLimit
  1818                           
  1819                           ;main.c: 238:                     setState(STATE_TEACH_RIGHT);
  1820  0078  3002               	movlw	2
  1821  0079  23B4               	fcall	_setState
  1822                           
  1823                           ;main.c: 239:                     break;
  1824  007A  28D1               	goto	l1717
  1825  007B                     l1705:
  1826                           
  1827                           ;main.c: 242:                     upperLimit = adcValuePosition;
  1828  007B  083D               	movf	_adcValuePosition+3,w
  1829  007C  00D2               	movwf	_upperLimit+3
  1830  007D  083C               	movf	_adcValuePosition+2,w
  1831  007E  00D1               	movwf	_upperLimit+2
  1832  007F  083B               	movf	_adcValuePosition+1,w
  1833  0080  00D0               	movwf	_upperLimit+1
  1834  0081  083A               	movf	_adcValuePosition,w
  1835  0082  00CF               	movwf	_upperLimit
  1836                           
  1837                           ;main.c: 244:                     m = (1023*fixedPointFactor)/(upperLimit - lowerLimit);
  1838  0083  0836               	movf	_lowerLimit,w
  1839  0084  024F               	subwf	_upperLimit,w
  1840  0085  00AE               	movwf	??_main
  1841  0086  0837               	movf	_lowerLimit+1,w
  1842  0087  3B50               	subwfb	_upperLimit+1,w
  1843  0088  00AF               	movwf	??_main+1
  1844  0089  0838               	movf	_lowerLimit+2,w
  1845  008A  3B51               	subwfb	_upperLimit+2,w
  1846  008B  00B0               	movwf	??_main+2
  1847  008C  0839               	movf	_lowerLimit+3,w
  1848  008D  3B52               	subwfb	_upperLimit+3,w
  1849  008E  00B1               	movwf	??_main+3
  1850  008F  0831               	movf	??_main+3,w
  1851  0090  00F3               	movwf	___lldiv@divisor+3
  1852  0091  0830               	movf	??_main+2,w
  1853  0092  00F2               	movwf	___lldiv@divisor+2
  1854  0093  082F               	movf	??_main+1,w
  1855  0094  00F1               	movwf	___lldiv@divisor+1
  1856  0095  082E               	movf	??_main,w
  1857  0096  00F0               	movwf	___lldiv@divisor
  1858  0097  3000               	movlw	0
  1859  0098  00F7               	movwf	___lldiv@dividend+3
  1860  0099  300F               	movlw	15
  1861  009A  00F6               	movwf	___lldiv@dividend+2
  1862  009B  309C               	movlw	156
  1863  009C  00F5               	movwf	___lldiv@dividend+1
  1864  009D  3018               	movlw	24
  1865  009E  00F4               	movwf	___lldiv@dividend
  1866  009F  2362               	fcall	___lldiv
  1867  00A0  0873               	movf	?___lldiv+3,w
  1868  00A1  00CD               	movwf	_m+3
  1869  00A2  0872               	movf	?___lldiv+2,w
  1870  00A3  00CC               	movwf	_m+2
  1871  00A4  0871               	movf	?___lldiv+1,w
  1872  00A5  00CB               	movwf	_m+1
  1873  00A6  0870               	movf	?___lldiv,w
  1874  00A7  00CA               	movwf	_m
  1875                           
  1876                           ;main.c: 245:                     b = lowerLimit*m;
  1877  00A8  084A               	movf	_m,w
  1878  00A9  00F0               	movwf	___tmul@multiplier
  1879  00AA  084B               	movf	_m+1,w
  1880  00AB  00F1               	movwf	___tmul@multiplier+1
  1881  00AC  084C               	movf	_m+2,w
  1882  00AD  00F2               	movwf	___tmul@multiplier+2
  1883  00AE  0836               	movf	_lowerLimit,w
  1884  00AF  00F3               	movwf	___tmul@multiplicand
  1885  00B0  0837               	movf	_lowerLimit+1,w
  1886  00B1  00F4               	movwf	___tmul@multiplicand+1
  1887  00B2  0838               	movf	_lowerLimit+2,w
  1888  00B3  00F5               	movwf	___tmul@multiplicand+2
  1889  00B4  2414               	fcall	___tmul
  1890  00B5  0870               	movf	?___tmul,w
  1891  00B6  00BE               	movwf	_b
  1892  00B7  0871               	movf	?___tmul+1,w
  1893  00B8  00BF               	movwf	_b+1
  1894  00B9  0872               	movf	?___tmul+2,w
  1895  00BA  00C0               	movwf	_b+2
  1896                           
  1897                           ;main.c: 247:                     setState(STATE_NORMAL);
  1898  00BB  3000               	movlw	0
  1899  00BC  23B4               	fcall	_setState
  1900                           
  1901                           ;main.c: 248:                     break;
  1902  00BD  28D1               	goto	l1717
  1903  00BE                     l1715:
  1904  00BE  0847               	movf	_currentState,w
  1905  00BF  00AE               	movwf	??_main
  1906  00C0  01AF               	clrf	??_main+1
  1907                           
  1908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1909                           ; Switch size 1, requested type "simple"
  1910                           ; Number of cases is 1, Range of values is 0 to 0
  1911                           ; switch strategies available:
  1912                           ; Name         Instructions Cycles
  1913                           ; simple_byte            4     3 (average)
  1914                           ; direct_byte            8     6 (fixed)
  1915                           ; jumptable            260     6 (fixed)
  1916                           ;	Chosen strategy is simple_byte
  1917  00C1  082F               	movf	??_main+1,w
  1918  00C2  3A00               	xorlw	0	; case 0
  1919  00C3  1903               	skipnz
  1920  00C4  28C6               	goto	l1831
  1921  00C5  28D1               	goto	l1717
  1922  00C6                     l1831:
  1923                           
  1924                           ; Switch size 1, requested type "simple"
  1925                           ; Number of cases is 3, Range of values is 0 to 2
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte           10     6 (average)
  1929                           ; direct_byte           12     6 (fixed)
  1930                           ; jumptable            260     6 (fixed)
  1931                           ;	Chosen strategy is simple_byte
  1932  00C6  082E               	movf	??_main,w
  1933  00C7  3A00               	xorlw	0	; case 0
  1934  00C8  1903               	skipnz
  1935  00C9  286D               	goto	l1699
  1936  00CA  3A01               	xorlw	1	; case 1
  1937  00CB  1903               	skipnz
  1938  00CC  2870               	goto	l1701
  1939  00CD  3A03               	xorlw	3	; case 2
  1940  00CE  1903               	skipnz
  1941  00CF  287B               	goto	l1705
  1942  00D0  28D1               	goto	l1717
  1943  00D1                     l1717:
  1944                           
  1945                           ;main.c: 251:             doButtonAction = 0;
  1946  00D1  01C9               	clrf	_doButtonAction	;volatile
  1947  00D2  2995               	goto	l1737
  1948  00D3                     l1719:
  1949                           
  1950                           ;main.c: 259:                 if(channel == channelBrightness)
  1951  00D3  300A               	movlw	10
  1952  00D4  064E               	xorwf	main@channel,w
  1953  00D5  1D03               	btfss	3,2
  1954  00D6  282A               	goto	l1669
  1955                           
  1956                           ;main.c: 260:                 {;main.c: 261:                     adcValuePosition = (adc
      +                          ValuePosition*m-b)/fixedPointFactor;
  1957  00D7  3000               	movlw	0
  1958  00D8  00A3               	movwf	___aldiv@divisor+3
  1959  00D9  3000               	movlw	0
  1960  00DA  00A2               	movwf	___aldiv@divisor+2
  1961  00DB  3003               	movlw	3
  1962  00DC  00A1               	movwf	___aldiv@divisor+1
  1963  00DD  30E8               	movlw	232
  1964  00DE  00A0               	movwf	___aldiv@divisor
  1965  00DF  083E               	movf	_b,w
  1966  00E0  00AE               	movwf	??_main
  1967  00E1  083F               	movf	_b+1,w
  1968  00E2  00AF               	movwf	??_main+1
  1969  00E3  0840               	movf	_b+2,w
  1970  00E4  00B0               	movwf	??_main+2
  1971  00E5  3000               	movlw	0
  1972  00E6  1BB0               	btfsc	??_main+2,7
  1973  00E7  30FF               	movlw	255
  1974  00E8  00B1               	movwf	??_main+3
  1975  00E9  083D               	movf	_adcValuePosition+3,w
  1976  00EA  00F3               	movwf	___lmul@multiplier+3
  1977  00EB  083C               	movf	_adcValuePosition+2,w
  1978  00EC  00F2               	movwf	___lmul@multiplier+2
  1979  00ED  083B               	movf	_adcValuePosition+1,w
  1980  00EE  00F1               	movwf	___lmul@multiplier+1
  1981  00EF  083A               	movf	_adcValuePosition,w
  1982  00F0  00F0               	movwf	___lmul@multiplier
  1983  00F1  084D               	movf	_m+3,w
  1984  00F2  00F7               	movwf	___lmul@multiplicand+3
  1985  00F3  084C               	movf	_m+2,w
  1986  00F4  00F6               	movwf	___lmul@multiplicand+2
  1987  00F5  084B               	movf	_m+1,w
  1988  00F6  00F5               	movwf	___lmul@multiplicand+1
  1989  00F7  084A               	movf	_m,w
  1990  00F8  00F4               	movwf	___lmul@multiplicand
  1991  00F9  23E5               	fcall	___lmul
  1992  00FA  0870               	movf	?___lmul,w
  1993  00FB  00B2               	movwf	??_main+4
  1994  00FC  0871               	movf	?___lmul+1,w
  1995  00FD  00B3               	movwf	??_main+5
  1996  00FE  0872               	movf	?___lmul+2,w
  1997  00FF  00B4               	movwf	??_main+6
  1998  0100  0873               	movf	?___lmul+3,w
  1999  0101  00B5               	movwf	??_main+7
  2000  0102  082E               	movf	??_main,w
  2001  0103  02B2               	subwf	??_main+4,f
  2002  0104  082F               	movf	??_main+1,w
  2003  0105  3BB3               	subwfb	??_main+5,f
  2004  0106  0830               	movf	??_main+2,w
  2005  0107  3BB4               	subwfb	??_main+6,f
  2006  0108  0831               	movf	??_main+3,w
  2007  0109  3BB5               	subwfb	??_main+7,f
  2008  010A  0835               	movf	??_main+7,w
  2009  010B  00A7               	movwf	___aldiv@dividend+3
  2010  010C  0834               	movf	??_main+6,w
  2011  010D  00A6               	movwf	___aldiv@dividend+2
  2012  010E  0833               	movf	??_main+5,w
  2013  010F  00A5               	movwf	___aldiv@dividend+1
  2014  0110  0832               	movf	??_main+4,w
  2015  0111  00A4               	movwf	___aldiv@dividend
  2016  0112  22E1               	fcall	___aldiv
  2017  0113  0823               	movf	?___aldiv+3,w
  2018  0114  00BD               	movwf	_adcValuePosition+3
  2019  0115  0822               	movf	?___aldiv+2,w
  2020  0116  00BC               	movwf	_adcValuePosition+2
  2021  0117  0821               	movf	?___aldiv+1,w
  2022  0118  00BB               	movwf	_adcValuePosition+1
  2023  0119  0820               	movf	?___aldiv,w
  2024  011A  00BA               	movwf	_adcValuePosition
  2025                           
  2026                           ;main.c: 262:                     setLedsForPositioning(adcValuePosition);
  2027  011B  083D               	movf	_adcValuePosition+3,w
  2028  011C  00F3               	movwf	setLedsForPositioning@adcValue+3
  2029  011D  083C               	movf	_adcValuePosition+2,w
  2030  011E  00F2               	movwf	setLedsForPositioning@adcValue+2
  2031  011F  083B               	movf	_adcValuePosition+1,w
  2032  0120  00F1               	movwf	setLedsForPositioning@adcValue+1
  2033  0121  083A               	movf	_adcValuePosition,w
  2034  0122  00F0               	movwf	setLedsForPositioning@adcValue
  2035  0123  21A9               	fcall	_setLedsForPositioning
  2036  0124  282A               	goto	l1669
  2037  0125                     l1723:
  2038                           
  2039                           ;main.c: 267:                 if(doToggle)
  2040  0125  0848               	movf	_doToggle,w
  2041  0126  1903               	btfsc	3,2
  2042  0127  282A               	goto	l1669
  2043  0128  1003               	clrc
  2044  0129  0022               	movlb	2	; select bank2
  2045  012A  1C0E               	btfss	14,0	;volatile
  2046  012B  1403               	setc
  2047  012C  1C03               	btfss	3,0
  2048  012D  2931               	goto	u1400
  2049  012E  0022               	movlb	2	; select bank2
  2050  012F  140E               	bsf	14,0	;volatile
  2051  0130  2933               	goto	l354
  2052  0131                     u1400:
  2053  0131  0022               	movlb	2	; select bank2
  2054  0132  100E               	bcf	14,0	;volatile
  2055  0133                     l354:	
  2056                           ;main.c: 270:                     do { LATCbits.LATC1 = ~LATCbits.LATC1; } while(0);
  2057                           
  2058  0133  1003               	clrc
  2059  0134  1C8E               	btfss	14,1	;volatile
  2060  0135  1403               	setc
  2061  0136  1C03               	btfss	3,0
  2062  0137  293B               	goto	u1420
  2063  0138  0022               	movlb	2	; select bank2
  2064  0139  148E               	bsf	14,1	;volatile
  2065  013A  293D               	goto	l356
  2066  013B                     u1420:
  2067  013B  0022               	movlb	2	; select bank2
  2068  013C  108E               	bcf	14,1	;volatile
  2069  013D                     l356:	
  2070                           ;main.c: 271:                     do { LATCbits.LATC2 = ~LATCbits.LATC2; } while(0);
  2071                           
  2072  013D  1003               	clrc
  2073  013E  1D0E               	btfss	14,2	;volatile
  2074  013F  1403               	setc
  2075  0140  1C03               	btfss	3,0
  2076  0141  2945               	goto	u1440
  2077  0142  0022               	movlb	2	; select bank2
  2078  0143  150E               	bsf	14,2	;volatile
  2079  0144  2947               	goto	l358
  2080  0145                     u1440:
  2081  0145  0022               	movlb	2	; select bank2
  2082  0146  110E               	bcf	14,2	;volatile
  2083  0147                     l358:	
  2084                           ;main.c: 272:                     do { LATCbits.LATC3 = ~LATCbits.LATC3; } while(0);
  2085                           
  2086  0147  1003               	clrc
  2087  0148  1D8E               	btfss	14,3	;volatile
  2088  0149  1403               	setc
  2089  014A  1C03               	btfss	3,0
  2090  014B  294F               	goto	u1460
  2091  014C  0022               	movlb	2	; select bank2
  2092  014D  158E               	bsf	14,3	;volatile
  2093  014E  2951               	goto	l360
  2094  014F                     u1460:
  2095  014F  0022               	movlb	2	; select bank2
  2096  0150  118E               	bcf	14,3	;volatile
  2097  0151                     l360:	
  2098                           ;main.c: 273:                     do { LATCbits.LATC4 = ~LATCbits.LATC4; } while(0);
  2099                           
  2100  0151  1003               	clrc
  2101  0152  1E0E               	btfss	14,4	;volatile
  2102  0153  1403               	setc
  2103  0154  1C03               	btfss	3,0
  2104  0155  2959               	goto	u1480
  2105  0156  0022               	movlb	2	; select bank2
  2106  0157  160E               	bsf	14,4	;volatile
  2107  0158  295B               	goto	l1727
  2108  0159                     u1480:
  2109  0159  0022               	movlb	2	; select bank2
  2110  015A  120E               	bcf	14,4	;volatile
  2111  015B                     l1727:
  2112                           
  2113                           ;main.c: 274:                     doToggle = 0;
  2114  015B  0020               	movlb	0	; select bank0
  2115  015C  01C8               	clrf	_doToggle
  2116  015D  282A               	goto	l1669
  2117  015E                     l1729:
  2118                           
  2119                           ;main.c: 281:                 if(doToggle)
  2120  015E  0848               	movf	_doToggle,w
  2121  015F  1903               	btfsc	3,2
  2122  0160  282A               	goto	l1669
  2123  0161  1003               	clrc
  2124  0162  0022               	movlb	2	; select bank2
  2125  0163  1F0E               	btfss	14,6	;volatile
  2126  0164  1403               	setc
  2127  0165  1C03               	btfss	3,0
  2128  0166  296A               	goto	u1510
  2129  0167  0022               	movlb	2	; select bank2
  2130  0168  170E               	bsf	14,6	;volatile
  2131  0169  296C               	goto	l366
  2132  016A                     u1510:
  2133  016A  0022               	movlb	2	; select bank2
  2134  016B  130E               	bcf	14,6	;volatile
  2135  016C                     l366:	
  2136                           ;main.c: 284:                     do { LATCbits.LATC7 = ~LATCbits.LATC7; } while(0);
  2137                           
  2138  016C  1003               	clrc
  2139  016D  1F8E               	btfss	14,7	;volatile
  2140  016E  1403               	setc
  2141  016F  1C03               	btfss	3,0
  2142  0170  2974               	goto	u1530
  2143  0171  0022               	movlb	2	; select bank2
  2144  0172  178E               	bsf	14,7	;volatile
  2145  0173  2976               	goto	l368
  2146  0174                     u1530:
  2147  0174  0022               	movlb	2	; select bank2
  2148  0175  138E               	bcf	14,7	;volatile
  2149  0176                     l368:	
  2150                           ;main.c: 285:                     do { LATBbits.LATB5 = ~LATBbits.LATB5; } while(0);
  2151                           
  2152  0176  1003               	clrc
  2153  0177  1E8D               	btfss	13,5	;volatile
  2154  0178  1403               	setc
  2155  0179  1C03               	btfss	3,0
  2156  017A  297E               	goto	u1550
  2157  017B  0022               	movlb	2	; select bank2
  2158  017C  168D               	bsf	13,5	;volatile
  2159  017D  2980               	goto	l370
  2160  017E                     u1550:
  2161  017E  0022               	movlb	2	; select bank2
  2162  017F  128D               	bcf	13,5	;volatile
  2163  0180                     l370:	
  2164                           ;main.c: 286:                     do { LATBbits.LATB6 = ~LATBbits.LATB6; } while(0);
  2165                           
  2166  0180  1003               	clrc
  2167  0181  1F0D               	btfss	13,6	;volatile
  2168  0182  1403               	setc
  2169  0183  1C03               	btfss	3,0
  2170  0184  2988               	goto	u1570
  2171  0185  0022               	movlb	2	; select bank2
  2172  0186  170D               	bsf	13,6	;volatile
  2173  0187  298A               	goto	l372
  2174  0188                     u1570:
  2175  0188  0022               	movlb	2	; select bank2
  2176  0189  130D               	bcf	13,6	;volatile
  2177  018A                     l372:	
  2178                           ;main.c: 287:                     do { LATBbits.LATB7 = ~LATBbits.LATB7; } while(0);
  2179                           
  2180  018A  1003               	clrc
  2181  018B  1F8D               	btfss	13,7	;volatile
  2182  018C  1403               	setc
  2183  018D  1C03               	btfss	3,0
  2184  018E  2992               	goto	u1590
  2185  018F  0022               	movlb	2	; select bank2
  2186  0190  178D               	bsf	13,7	;volatile
  2187  0191  295B               	goto	l1727
  2188  0192                     u1590:
  2189  0192  0022               	movlb	2	; select bank2
  2190  0193  138D               	bcf	13,7	;volatile
  2191  0194  295B               	goto	l1727
  2192  0195                     l1737:
  2193  0195  0847               	movf	_currentState,w
  2194  0196  00AE               	movwf	??_main
  2195  0197  01AF               	clrf	??_main+1
  2196                           
  2197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 1, Range of values is 0 to 0
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ; direct_byte            8     6 (fixed)
  2204                           ; jumptable            260     6 (fixed)
  2205                           ;	Chosen strategy is simple_byte
  2206  0198  082F               	movf	??_main+1,w
  2207  0199  3A00               	xorlw	0	; case 0
  2208  019A  1903               	skipnz
  2209  019B  299D               	goto	l1833
  2210  019C  282A               	goto	l1669
  2211  019D                     l1833:
  2212                           
  2213                           ; Switch size 1, requested type "simple"
  2214                           ; Number of cases is 3, Range of values is 0 to 2
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte           10     6 (average)
  2218                           ; direct_byte           12     6 (fixed)
  2219                           ; jumptable            260     6 (fixed)
  2220                           ;	Chosen strategy is simple_byte
  2221  019D  082E               	movf	??_main,w
  2222  019E  3A00               	xorlw	0	; case 0
  2223  019F  1903               	skipnz
  2224  01A0  28D3               	goto	l1719
  2225  01A1  3A01               	xorlw	1	; case 1
  2226  01A2  1903               	skipnz
  2227  01A3  2925               	goto	l1723
  2228  01A4  3A03               	xorlw	3	; case 2
  2229  01A5  1903               	skipnz
  2230  01A6  295E               	goto	l1729
  2231  01A7  282A               	goto	l1669
  2232  01A8  280C               	ljmp	start
  2233  01A9                     __end_of_main:
  2234                           
  2235                           	psect	text1
  2236  03B4                     __ptext1:	
  2237 ;; *************** function _setState *****************
  2238 ;; Defined at:
  2239 ;;		line 91 in file "main.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  newState        1    wreg     enum E2406
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  newState        1    2[COMMON] enum E2406
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2248 ;; Tracked objects:
  2249 ;;		On entry : 1F/0
  2250 ;;		On exit  : 1F/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1
  2253 ;;      Params:         0       0       0
  2254 ;;      Locals:         1       0       0
  2255 ;;      Temps:          2       0       0
  2256 ;;      Totals:         3       0       0
  2257 ;;Total ram usage:        3 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    4
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _setState
  2269  03B4                     _setState:
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  2273                           ;setState@newState stored from wreg
  2274  03B4  00F2               	movwf	setState@newState
  2275                           
  2276                           ;main.c: 91: void setState(state_t newState);main.c: 92: {;main.c: 93:     if(newState =
      +                          = currentState)
  2277  03B5  0872               	movf	setState@newState,w
  2278  03B6  0647               	xorwf	_currentState,w
  2279  03B7  1903               	btfsc	3,2
  2280  03B8  0008               	return
  2281                           
  2282                           ;main.c: 99:     do { LATCbits.LATC0 = 0; } while(0);
  2283  03B9  0022               	movlb	2	; select bank2
  2284  03BA  100E               	bcf	14,0	;volatile
  2285                           
  2286                           ;main.c: 100:     do { LATCbits.LATC1 = 0; } while(0);
  2287  03BB  108E               	bcf	14,1	;volatile
  2288                           
  2289                           ;main.c: 101:     do { LATCbits.LATC2 = 0; } while(0);
  2290  03BC  110E               	bcf	14,2	;volatile
  2291                           
  2292                           ;main.c: 102:     do { LATCbits.LATC3 = 0; } while(0);
  2293  03BD  118E               	bcf	14,3	;volatile
  2294                           
  2295                           ;main.c: 103:     do { LATCbits.LATC4 = 0; } while(0);
  2296  03BE  120E               	bcf	14,4	;volatile
  2297                           
  2298                           ;main.c: 104:     do { LATCbits.LATC5 = 0; } while(0);
  2299  03BF  128E               	bcf	14,5	;volatile
  2300                           
  2301                           ;main.c: 105:     do { LATCbits.LATC6 = 0; } while(0);
  2302  03C0  130E               	bcf	14,6	;volatile
  2303                           
  2304                           ;main.c: 106:     do { LATCbits.LATC7 = 0; } while(0);
  2305  03C1  138E               	bcf	14,7	;volatile
  2306                           
  2307                           ;main.c: 107:     do { LATBbits.LATB5 = 0; } while(0);
  2308  03C2  128D               	bcf	13,5	;volatile
  2309                           
  2310                           ;main.c: 108:     do { LATBbits.LATB6 = 0; } while(0);
  2311  03C3  130D               	bcf	13,6	;volatile
  2312                           
  2313                           ;main.c: 109:     do { LATBbits.LATB7 = 0; } while(0);
  2314  03C4  138D               	bcf	13,7	;volatile
  2315  03C5  2BCA               	goto	l1513
  2316  03C6                     l312:	
  2317                           ;main.c: 142:             do { LATCbits.LATC0 = 1; } while(0);
  2318                           
  2319  03C6  140E               	bsf	14,0	;volatile
  2320  03C7  2BDD               	goto	l1515
  2321  03C8                     l315:	
  2322                           ;main.c: 146:             do { LATBbits.LATB7 = 1; } while(0);
  2323                           
  2324  03C8  178D               	bsf	13,7	;volatile
  2325  03C9  2BDD               	goto	l1515
  2326  03CA                     l1513:
  2327  03CA  0872               	movf	setState@newState,w
  2328  03CB  00F0               	movwf	??_setState
  2329  03CC  01F1               	clrf	??_setState+1
  2330                           
  2331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 1, Range of values is 0 to 0
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte            4     3 (average)
  2337                           ; direct_byte            8     6 (fixed)
  2338                           ; jumptable            260     6 (fixed)
  2339                           ;	Chosen strategy is simple_byte
  2340  03CD  0871               	movf	??_setState+1,w
  2341  03CE  3A00               	xorlw	0	; case 0
  2342  03CF  1903               	skipnz
  2343  03D0  2BD2               	goto	l1835
  2344  03D1  2BDD               	goto	l1515
  2345  03D2                     l1835:
  2346                           
  2347                           ; Switch size 1, requested type "simple"
  2348                           ; Number of cases is 3, Range of values is 0 to 2
  2349                           ; switch strategies available:
  2350                           ; Name         Instructions Cycles
  2351                           ; simple_byte           10     6 (average)
  2352                           ; direct_byte           12     6 (fixed)
  2353                           ; jumptable            260     6 (fixed)
  2354                           ;	Chosen strategy is simple_byte
  2355  03D2  0870               	movf	??_setState,w
  2356  03D3  3A00               	xorlw	0	; case 0
  2357  03D4  1903               	skipnz
  2358  03D5  2BDD               	goto	l1515
  2359  03D6  3A01               	xorlw	1	; case 1
  2360  03D7  1903               	skipnz
  2361  03D8  2BC6               	goto	l312
  2362  03D9  3A03               	xorlw	3	; case 2
  2363  03DA  1903               	skipnz
  2364  03DB  2BC8               	goto	l315
  2365  03DC  2BDD               	goto	l1515
  2366  03DD                     l1515:
  2367                           
  2368                           ;main.c: 150:     msTick = 0;
  2369  03DD  0020               	movlb	0	; select bank0
  2370  03DE  01C3               	clrf	_msTick	;volatile
  2371  03DF  01C4               	clrf	_msTick+1	;volatile
  2372                           
  2373                           ;main.c: 152:     currentState = newState;
  2374  03E0  0872               	movf	setState@newState,w
  2375  03E1  00F0               	movwf	??_setState
  2376  03E2  0870               	movf	??_setState,w
  2377  03E3  00C7               	movwf	_currentState
  2378  03E4  0008               	return
  2379  03E5                     __end_of_setState:
  2380                           
  2381                           	psect	text2
  2382  01A9                     __ptext2:	
  2383 ;; *************** function _setLedsForPositioning *****************
  2384 ;; Defined at:
  2385 ;;		line 299 in file "main.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  adcValue        4    0[COMMON] long 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 1F/0
  2396 ;;		On exit  : 1F/2
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1
  2399 ;;      Params:         4       0       0
  2400 ;;      Locals:         0       0       0
  2401 ;;      Temps:          0       0       0
  2402 ;;      Totals:         4       0       0
  2403 ;;Total ram usage:        4 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    4
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function _setLedsForPositioning
  2415  01A9                     _setLedsForPositioning:
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _setLedsForPositioning: [wreg+status,2+status,0]
  2419                           ;main.c: 299: void setLedsForPositioning(int32_t adcValue);main.c: 300: {;main.c: 301:  
      +                             do { LATCbits.LATC0 = 0; } while(0);
  2420  01A9  0022               	movlb	2	; select bank2
  2421  01AA  100E               	bcf	14,0	;volatile
  2422                           
  2423                           ;main.c: 302:     do { LATCbits.LATC1 = 0; } while(0);
  2424  01AB  108E               	bcf	14,1	;volatile
  2425                           
  2426                           ;main.c: 303:     do { LATCbits.LATC2 = 0; } while(0);
  2427  01AC  110E               	bcf	14,2	;volatile
  2428                           
  2429                           ;main.c: 304:     do { LATCbits.LATC3 = 0; } while(0);
  2430  01AD  118E               	bcf	14,3	;volatile
  2431                           
  2432                           ;main.c: 305:     do { LATCbits.LATC4 = 0; } while(0);
  2433  01AE  120E               	bcf	14,4	;volatile
  2434                           
  2435                           ;main.c: 306:     do { LATCbits.LATC5 = 1; } while(0);
  2436  01AF  168E               	bsf	14,5	;volatile
  2437                           
  2438                           ;main.c: 307:     do { LATCbits.LATC6 = 0; } while(0);
  2439  01B0  130E               	bcf	14,6	;volatile
  2440                           
  2441                           ;main.c: 308:     do { LATCbits.LATC7 = 0; } while(0);
  2442  01B1  138E               	bcf	14,7	;volatile
  2443                           
  2444                           ;main.c: 309:     do { LATBbits.LATB5 = 0; } while(0);
  2445  01B2  128D               	bcf	13,5	;volatile
  2446                           
  2447                           ;main.c: 310:     do { LATBbits.LATB6 = 0; } while(0);
  2448  01B3  130D               	bcf	13,6	;volatile
  2449                           
  2450                           ;main.c: 311:     do { LATBbits.LATB7 = 0; } while(0);
  2451  01B4  138D               	bcf	13,7	;volatile
  2452                           
  2453                           ;main.c: 315:     if(adcValue < 54)
  2454  01B5  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2455  01B6  29C4               	goto	l402
  2456  01B7  0873               	movf	setLedsForPositioning@adcValue+3,w
  2457  01B8  1D03               	btfss	3,2
  2458  01B9  29C6               	goto	l1525
  2459  01BA  0872               	movf	setLedsForPositioning@adcValue+2,w
  2460  01BB  1D03               	btfss	3,2
  2461  01BC  29C6               	goto	l1525
  2462  01BD  0871               	movf	setLedsForPositioning@adcValue+1,w
  2463  01BE  1D03               	btfss	3,2
  2464  01BF  29C6               	goto	l1525
  2465  01C0  3036               	movlw	54
  2466  01C1  0270               	subwf	setLedsForPositioning@adcValue,w
  2467  01C2  1803               	btfsc	3,0
  2468  01C3  29C6               	goto	l1525
  2469  01C4                     l402:	
  2470                           ;main.c: 316:     {;main.c: 317:         do { LATCbits.LATC0 = 1; } while(0);
  2471                           
  2472  01C4  140E               	bsf	14,0	;volatile
  2473  01C5  0008               	return
  2474  01C6                     l1525:
  2475  01C6  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2476  01C7  29D5               	goto	l406
  2477  01C8  0873               	movf	setLedsForPositioning@adcValue+3,w
  2478  01C9  1D03               	btfss	3,2
  2479  01CA  29D8               	goto	l1527
  2480  01CB  0872               	movf	setLedsForPositioning@adcValue+2,w
  2481  01CC  1D03               	btfss	3,2
  2482  01CD  29D8               	goto	l1527
  2483  01CE  0871               	movf	setLedsForPositioning@adcValue+1,w
  2484  01CF  1D03               	btfss	3,2
  2485  01D0  29D8               	goto	l1527
  2486  01D1  306C               	movlw	108
  2487  01D2  0270               	subwf	setLedsForPositioning@adcValue,w
  2488  01D3  1803               	btfsc	3,0
  2489  01D4  29D8               	goto	l1527
  2490  01D5                     l406:	
  2491                           ;main.c: 320:     {;main.c: 321:         do { LATCbits.LATC0 = 1; } while(0);
  2492                           
  2493  01D5  140E               	bsf	14,0	;volatile
  2494                           
  2495                           ;main.c: 322:         do { LATCbits.LATC1 = 1; } while(0);
  2496  01D6  148E               	bsf	14,1	;volatile
  2497  01D7  0008               	return
  2498  01D8                     l1527:
  2499  01D8  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2500  01D9  29E7               	goto	l412
  2501  01DA  0873               	movf	setLedsForPositioning@adcValue+3,w
  2502  01DB  1D03               	btfss	3,2
  2503  01DC  29E9               	goto	l1529
  2504  01DD  0872               	movf	setLedsForPositioning@adcValue+2,w
  2505  01DE  1D03               	btfss	3,2
  2506  01DF  29E9               	goto	l1529
  2507  01E0  0871               	movf	setLedsForPositioning@adcValue+1,w
  2508  01E1  1D03               	btfss	3,2
  2509  01E2  29E9               	goto	l1529
  2510  01E3  30A2               	movlw	162
  2511  01E4  0270               	subwf	setLedsForPositioning@adcValue,w
  2512  01E5  1803               	btfsc	3,0
  2513  01E6  29E9               	goto	l1529
  2514  01E7                     l412:	
  2515                           ;main.c: 325:     {;main.c: 326:         do { LATCbits.LATC1 = 1; } while(0);
  2516                           
  2517  01E7  148E               	bsf	14,1	;volatile
  2518  01E8  0008               	return
  2519  01E9                     l1529:
  2520  01E9  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2521  01EA  29F8               	goto	l416
  2522  01EB  0873               	movf	setLedsForPositioning@adcValue+3,w
  2523  01EC  1D03               	btfss	3,2
  2524  01ED  29FB               	goto	l1531
  2525  01EE  0872               	movf	setLedsForPositioning@adcValue+2,w
  2526  01EF  1D03               	btfss	3,2
  2527  01F0  29FB               	goto	l1531
  2528  01F1  0871               	movf	setLedsForPositioning@adcValue+1,w
  2529  01F2  1D03               	btfss	3,2
  2530  01F3  29FB               	goto	l1531
  2531  01F4  30D7               	movlw	215
  2532  01F5  0270               	subwf	setLedsForPositioning@adcValue,w
  2533  01F6  1803               	btfsc	3,0
  2534  01F7  29FB               	goto	l1531
  2535  01F8                     l416:	
  2536                           ;main.c: 329:     {;main.c: 330:         do { LATCbits.LATC1 = 1; } while(0);
  2537                           
  2538  01F8  148E               	bsf	14,1	;volatile
  2539                           
  2540                           ;main.c: 331:         do { LATCbits.LATC2 = 1; } while(0);
  2541  01F9  150E               	bsf	14,2	;volatile
  2542  01FA  0008               	return
  2543  01FB                     l1531:
  2544  01FB  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2545  01FC  2A09               	goto	l422
  2546  01FD  0873               	movf	setLedsForPositioning@adcValue+3,w
  2547  01FE  1D03               	btfss	3,2
  2548  01FF  2A0B               	goto	l1533
  2549  0200  0872               	movf	setLedsForPositioning@adcValue+2,w
  2550  0201  1D03               	btfss	3,2
  2551  0202  2A0B               	goto	l1533
  2552  0203  300D               	movlw	13
  2553  0204  0270               	subwf	setLedsForPositioning@adcValue,w
  2554  0205  3001               	movlw	1
  2555  0206  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2556  0207  1803               	btfsc	3,0
  2557  0208  2A0B               	goto	l1533
  2558  0209                     l422:	
  2559                           ;main.c: 334:     {;main.c: 335:         do { LATCbits.LATC2 = 1; } while(0);
  2560                           
  2561  0209  150E               	bsf	14,2	;volatile
  2562  020A  0008               	return
  2563  020B                     l1533:
  2564  020B  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2565  020C  2A19               	goto	l426
  2566  020D  0873               	movf	setLedsForPositioning@adcValue+3,w
  2567  020E  1D03               	btfss	3,2
  2568  020F  2A1C               	goto	l1535
  2569  0210  0872               	movf	setLedsForPositioning@adcValue+2,w
  2570  0211  1D03               	btfss	3,2
  2571  0212  2A1C               	goto	l1535
  2572  0213  3043               	movlw	67
  2573  0214  0270               	subwf	setLedsForPositioning@adcValue,w
  2574  0215  3001               	movlw	1
  2575  0216  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2576  0217  1803               	btfsc	3,0
  2577  0218  2A1C               	goto	l1535
  2578  0219                     l426:	
  2579                           ;main.c: 338:     {;main.c: 339:         do { LATCbits.LATC2 = 1; } while(0);
  2580                           
  2581  0219  150E               	bsf	14,2	;volatile
  2582                           
  2583                           ;main.c: 340:         do { LATCbits.LATC3 = 1; } while(0);
  2584  021A  158E               	bsf	14,3	;volatile
  2585  021B  0008               	return
  2586  021C                     l1535:
  2587  021C  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2588  021D  2A2A               	goto	l432
  2589  021E  0873               	movf	setLedsForPositioning@adcValue+3,w
  2590  021F  1D03               	btfss	3,2
  2591  0220  2A2C               	goto	l1537
  2592  0221  0872               	movf	setLedsForPositioning@adcValue+2,w
  2593  0222  1D03               	btfss	3,2
  2594  0223  2A2C               	goto	l1537
  2595  0224  3079               	movlw	121
  2596  0225  0270               	subwf	setLedsForPositioning@adcValue,w
  2597  0226  3001               	movlw	1
  2598  0227  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2599  0228  1803               	btfsc	3,0
  2600  0229  2A2C               	goto	l1537
  2601  022A                     l432:	
  2602                           ;main.c: 343:     {;main.c: 344:         do { LATCbits.LATC3 = 1; } while(0);
  2603                           
  2604  022A  158E               	bsf	14,3	;volatile
  2605  022B  0008               	return
  2606  022C                     l1537:
  2607  022C  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2608  022D  2A3A               	goto	l436
  2609  022E  0873               	movf	setLedsForPositioning@adcValue+3,w
  2610  022F  1D03               	btfss	3,2
  2611  0230  2A3D               	goto	l1539
  2612  0231  0872               	movf	setLedsForPositioning@adcValue+2,w
  2613  0232  1D03               	btfss	3,2
  2614  0233  2A3D               	goto	l1539
  2615  0234  30AF               	movlw	175
  2616  0235  0270               	subwf	setLedsForPositioning@adcValue,w
  2617  0236  3001               	movlw	1
  2618  0237  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2619  0238  1803               	btfsc	3,0
  2620  0239  2A3D               	goto	l1539
  2621  023A                     l436:	
  2622                           ;main.c: 347:     {;main.c: 348:         do { LATCbits.LATC3 = 1; } while(0);
  2623                           
  2624  023A  158E               	bsf	14,3	;volatile
  2625                           
  2626                           ;main.c: 349:         do { LATCbits.LATC4 = 1; } while(0);
  2627  023B  160E               	bsf	14,4	;volatile
  2628  023C  0008               	return
  2629  023D                     l1539:
  2630  023D  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2631  023E  2A4B               	goto	l442
  2632  023F  0873               	movf	setLedsForPositioning@adcValue+3,w
  2633  0240  1D03               	btfss	3,2
  2634  0241  2A4D               	goto	l1541
  2635  0242  0872               	movf	setLedsForPositioning@adcValue+2,w
  2636  0243  1D03               	btfss	3,2
  2637  0244  2A4D               	goto	l1541
  2638  0245  30E5               	movlw	229
  2639  0246  0270               	subwf	setLedsForPositioning@adcValue,w
  2640  0247  3001               	movlw	1
  2641  0248  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2642  0249  1803               	btfsc	3,0
  2643  024A  2A4D               	goto	l1541
  2644  024B                     l442:	
  2645                           ;main.c: 352:     {;main.c: 353:         do { LATCbits.LATC4 = 1; } while(0);
  2646                           
  2647  024B  160E               	bsf	14,4	;volatile
  2648  024C  0008               	return
  2649  024D                     l1541:
  2650  024D  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2651  024E  0008               	return
  2652  024F  0873               	movf	setLedsForPositioning@adcValue+3,w
  2653  0250  1D03               	btfss	3,2
  2654  0251  2A5B               	goto	l1545
  2655  0252  0872               	movf	setLedsForPositioning@adcValue+2,w
  2656  0253  1D03               	btfss	3,2
  2657  0254  2A5B               	goto	l1545
  2658  0255  301A               	movlw	26
  2659  0256  0270               	subwf	setLedsForPositioning@adcValue,w
  2660  0257  3002               	movlw	2
  2661  0258  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2662  0259  1C03               	btfss	3,0
  2663  025A  0008               	return
  2664  025B                     l1545:
  2665  025B  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2666  025C  2A69               	goto	l448
  2667  025D  0873               	movf	setLedsForPositioning@adcValue+3,w
  2668  025E  1D03               	btfss	3,2
  2669  025F  2A6B               	goto	l1547
  2670  0260  0872               	movf	setLedsForPositioning@adcValue+2,w
  2671  0261  1D03               	btfss	3,2
  2672  0262  2A6B               	goto	l1547
  2673  0263  3050               	movlw	80
  2674  0264  0270               	subwf	setLedsForPositioning@adcValue,w
  2675  0265  3002               	movlw	2
  2676  0266  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2677  0267  1803               	btfsc	3,0
  2678  0268  2A6B               	goto	l1547
  2679  0269                     l448:	
  2680                           ;main.c: 360:     {;main.c: 361:         do { LATCbits.LATC6 = 1; } while(0);
  2681                           
  2682  0269  170E               	bsf	14,6	;volatile
  2683  026A  0008               	return
  2684  026B                     l1547:
  2685  026B  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2686  026C  2A79               	goto	l452
  2687  026D  0873               	movf	setLedsForPositioning@adcValue+3,w
  2688  026E  1D03               	btfss	3,2
  2689  026F  2A7C               	goto	l1549
  2690  0270  0872               	movf	setLedsForPositioning@adcValue+2,w
  2691  0271  1D03               	btfss	3,2
  2692  0272  2A7C               	goto	l1549
  2693  0273  3086               	movlw	134
  2694  0274  0270               	subwf	setLedsForPositioning@adcValue,w
  2695  0275  3002               	movlw	2
  2696  0276  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2697  0277  1803               	btfsc	3,0
  2698  0278  2A7C               	goto	l1549
  2699  0279                     l452:	
  2700                           ;main.c: 364:     {;main.c: 365:         do { LATCbits.LATC6 = 1; } while(0);
  2701                           
  2702  0279  170E               	bsf	14,6	;volatile
  2703                           
  2704                           ;main.c: 366:         do { LATCbits.LATC7 = 1; } while(0);
  2705  027A  178E               	bsf	14,7	;volatile
  2706  027B  0008               	return
  2707  027C                     l1549:
  2708  027C  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2709  027D  2A8A               	goto	l458
  2710  027E  0873               	movf	setLedsForPositioning@adcValue+3,w
  2711  027F  1D03               	btfss	3,2
  2712  0280  2A8C               	goto	l1551
  2713  0281  0872               	movf	setLedsForPositioning@adcValue+2,w
  2714  0282  1D03               	btfss	3,2
  2715  0283  2A8C               	goto	l1551
  2716  0284  30BC               	movlw	188
  2717  0285  0270               	subwf	setLedsForPositioning@adcValue,w
  2718  0286  3002               	movlw	2
  2719  0287  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2720  0288  1803               	btfsc	3,0
  2721  0289  2A8C               	goto	l1551
  2722  028A                     l458:	
  2723                           ;main.c: 369:     {;main.c: 370:         do { LATCbits.LATC7 = 1; } while(0);
  2724                           
  2725  028A  178E               	bsf	14,7	;volatile
  2726  028B  0008               	return
  2727  028C                     l1551:
  2728  028C  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2729  028D  2A9A               	goto	l462
  2730  028E  0873               	movf	setLedsForPositioning@adcValue+3,w
  2731  028F  1D03               	btfss	3,2
  2732  0290  2A9D               	goto	l1553
  2733  0291  0872               	movf	setLedsForPositioning@adcValue+2,w
  2734  0292  1D03               	btfss	3,2
  2735  0293  2A9D               	goto	l1553
  2736  0294  30F2               	movlw	242
  2737  0295  0270               	subwf	setLedsForPositioning@adcValue,w
  2738  0296  3002               	movlw	2
  2739  0297  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2740  0298  1803               	btfsc	3,0
  2741  0299  2A9D               	goto	l1553
  2742  029A                     l462:	
  2743                           ;main.c: 373:     {;main.c: 374:         do { LATCbits.LATC7 = 1; } while(0);
  2744                           
  2745  029A  178E               	bsf	14,7	;volatile
  2746                           
  2747                           ;main.c: 375:         do { LATBbits.LATB5 = 1; } while(0);
  2748  029B  168D               	bsf	13,5	;volatile
  2749  029C  0008               	return
  2750  029D                     l1553:
  2751  029D  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2752  029E  2AAB               	goto	l468
  2753  029F  0873               	movf	setLedsForPositioning@adcValue+3,w
  2754  02A0  1D03               	btfss	3,2
  2755  02A1  2AAD               	goto	l1555
  2756  02A2  0872               	movf	setLedsForPositioning@adcValue+2,w
  2757  02A3  1D03               	btfss	3,2
  2758  02A4  2AAD               	goto	l1555
  2759  02A5  3028               	movlw	40
  2760  02A6  0270               	subwf	setLedsForPositioning@adcValue,w
  2761  02A7  3003               	movlw	3
  2762  02A8  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2763  02A9  1803               	btfsc	3,0
  2764  02AA  2AAD               	goto	l1555
  2765  02AB                     l468:	
  2766                           ;main.c: 378:     {;main.c: 379:         do { LATBbits.LATB5 = 1; } while(0);
  2767                           
  2768  02AB  168D               	bsf	13,5	;volatile
  2769  02AC  0008               	return
  2770  02AD                     l1555:
  2771  02AD  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2772  02AE  2ABB               	goto	l472
  2773  02AF  0873               	movf	setLedsForPositioning@adcValue+3,w
  2774  02B0  1D03               	btfss	3,2
  2775  02B1  2ABE               	goto	l1557
  2776  02B2  0872               	movf	setLedsForPositioning@adcValue+2,w
  2777  02B3  1D03               	btfss	3,2
  2778  02B4  2ABE               	goto	l1557
  2779  02B5  305D               	movlw	93
  2780  02B6  0270               	subwf	setLedsForPositioning@adcValue,w
  2781  02B7  3003               	movlw	3
  2782  02B8  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2783  02B9  1803               	btfsc	3,0
  2784  02BA  2ABE               	goto	l1557
  2785  02BB                     l472:	
  2786                           ;main.c: 382:     {;main.c: 383:         do { LATBbits.LATB5 = 1; } while(0);
  2787                           
  2788  02BB  168D               	bsf	13,5	;volatile
  2789                           
  2790                           ;main.c: 384:         do { LATBbits.LATB6 = 1; } while(0);
  2791  02BC  170D               	bsf	13,6	;volatile
  2792  02BD  0008               	return
  2793  02BE                     l1557:
  2794  02BE  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2795  02BF  2ACC               	goto	l478
  2796  02C0  0873               	movf	setLedsForPositioning@adcValue+3,w
  2797  02C1  1D03               	btfss	3,2
  2798  02C2  2ACE               	goto	l1559
  2799  02C3  0872               	movf	setLedsForPositioning@adcValue+2,w
  2800  02C4  1D03               	btfss	3,2
  2801  02C5  2ACE               	goto	l1559
  2802  02C6  3093               	movlw	147
  2803  02C7  0270               	subwf	setLedsForPositioning@adcValue,w
  2804  02C8  3003               	movlw	3
  2805  02C9  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2806  02CA  1803               	btfsc	3,0
  2807  02CB  2ACE               	goto	l1559
  2808  02CC                     l478:	
  2809                           ;main.c: 387:     {;main.c: 388:         do { LATBbits.LATB6 = 1; } while(0);
  2810                           
  2811  02CC  170D               	bsf	13,6	;volatile
  2812  02CD  0008               	return
  2813  02CE                     l1559:
  2814  02CE  1BF3               	btfsc	setLedsForPositioning@adcValue+3,7
  2815  02CF  2ADC               	goto	l482
  2816  02D0  0873               	movf	setLedsForPositioning@adcValue+3,w
  2817  02D1  1D03               	btfss	3,2
  2818  02D2  2ADF               	goto	l487
  2819  02D3  0872               	movf	setLedsForPositioning@adcValue+2,w
  2820  02D4  1D03               	btfss	3,2
  2821  02D5  2ADF               	goto	l487
  2822  02D6  30C9               	movlw	201
  2823  02D7  0270               	subwf	setLedsForPositioning@adcValue,w
  2824  02D8  3003               	movlw	3
  2825  02D9  3B71               	subwfb	setLedsForPositioning@adcValue+1,w
  2826  02DA  1803               	btfsc	3,0
  2827  02DB  2ADF               	goto	l487
  2828  02DC                     l482:	
  2829                           ;main.c: 391:     {;main.c: 392:         do { LATBbits.LATB6 = 1; } while(0);
  2830                           
  2831  02DC  170D               	bsf	13,6	;volatile
  2832                           
  2833                           ;main.c: 393:         do { LATBbits.LATB7 = 1; } while(0);
  2834  02DD  178D               	bsf	13,7	;volatile
  2835  02DE  0008               	return
  2836  02DF                     l487:	
  2837                           ;main.c: 396:     {;main.c: 397:         do { LATBbits.LATB7 = 1; } while(0);
  2838                           
  2839  02DF  178D               	bsf	13,7	;volatile
  2840  02E0  0008               	return
  2841  02E1                     __end_of_setLedsForPositioning:
  2842                           
  2843                           	psect	text3
  2844  0414                     __ptext3:	
  2845 ;; *************** function ___tmul *****************
  2846 ;; Defined at:
  2847 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul24.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  multiplier      3    0[COMMON] unsigned um
  2850 ;;  multiplicand    3    3[COMMON] unsigned um
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  product         3    6[COMMON] unsigned um
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  3    0[COMMON] unsigned um
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 1F/0
  2859 ;;		On exit  : 1F/0
  2860 ;;		Unchanged: 1F/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1
  2862 ;;      Params:         6       0       0
  2863 ;;      Locals:         3       0       0
  2864 ;;      Temps:          0       0       0
  2865 ;;      Totals:         9       0       0
  2866 ;;Total ram usage:        9 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    4
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           
  2877                           ;psect for function ___tmul
  2878  0414                     ___tmul:
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  2882  0414  3000               	movlw	0
  2883  0415  00F6               	movwf	___tmul@product
  2884  0416  3000               	movlw	0
  2885  0417  00F7               	movwf	___tmul@product+1
  2886  0418  3000               	movlw	0
  2887  0419  00F8               	movwf	___tmul@product+2
  2888  041A                     l1563:
  2889  041A  1C70               	btfss	___tmul@multiplier,0
  2890  041B  2C22               	goto	l1567
  2891  041C  0873               	movf	___tmul@multiplicand,w
  2892  041D  07F6               	addwf	___tmul@product,f
  2893  041E  0874               	movf	___tmul@multiplicand+1,w
  2894  041F  3DF7               	addwfc	___tmul@product+1,f
  2895  0420  0875               	movf	___tmul@multiplicand+2,w
  2896  0421  3DF8               	addwfc	___tmul@product+2,f
  2897  0422                     l1567:
  2898  0422  3001               	movlw	1
  2899  0423                     u1055:
  2900  0423  35F3               	lslf	___tmul@multiplicand,f
  2901  0424  0DF4               	rlf	___tmul@multiplicand+1,f
  2902  0425  0DF5               	rlf	___tmul@multiplicand+2,f
  2903  0426  0B89               	decfsz	9,f
  2904  0427  2C23               	goto	u1055
  2905  0428  3001               	movlw	1
  2906  0429                     u1065:
  2907  0429  36F2               	lsrf	___tmul@multiplier+2,f
  2908  042A  0CF1               	rrf	___tmul@multiplier+1,f
  2909  042B  0CF0               	rrf	___tmul@multiplier,f
  2910  042C  0B89               	decfsz	9,f
  2911  042D  2C29               	goto	u1065
  2912  042E  0872               	movf	___tmul@multiplier+2,w
  2913  042F  0471               	iorwf	___tmul@multiplier+1,w
  2914  0430  0470               	iorwf	___tmul@multiplier,w
  2915  0431  1D03               	skipz
  2916  0432  2C1A               	goto	l1563
  2917  0433  0876               	movf	___tmul@product,w
  2918  0434  00F0               	movwf	?___tmul
  2919  0435  0877               	movf	___tmul@product+1,w
  2920  0436  00F1               	movwf	?___tmul+1
  2921  0437  0878               	movf	___tmul@product+2,w
  2922  0438  00F2               	movwf	?___tmul+2
  2923  0439  0008               	return
  2924  043A                     __end_of___tmul:
  2925                           
  2926                           	psect	text4
  2927  03E5                     __ptext4:	
  2928 ;; *************** function ___lmul *****************
  2929 ;; Defined at:
  2930 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  multiplier      4    0[COMMON] unsigned long 
  2933 ;;  multiplicand    4    4[COMMON] unsigned long 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  product         4    8[COMMON] unsigned long 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  4    0[COMMON] unsigned long 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 1F/0
  2942 ;;		On exit  : 1F/0
  2943 ;;		Unchanged: 1F/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1
  2945 ;;      Params:         8       0       0
  2946 ;;      Locals:         4       0       0
  2947 ;;      Temps:          0       0       0
  2948 ;;      Totals:        12       0       0
  2949 ;;Total ram usage:       12 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    4
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function ___lmul
  2961  03E5                     ___lmul:
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2965  03E5  3000               	movlw	0
  2966  03E6  00FB               	movwf	___lmul@product+3
  2967  03E7  3000               	movlw	0
  2968  03E8  00FA               	movwf	___lmul@product+2
  2969  03E9  3000               	movlw	0
  2970  03EA  00F9               	movwf	___lmul@product+1
  2971  03EB  3000               	movlw	0
  2972  03EC  00F8               	movwf	___lmul@product
  2973  03ED                     l1577:
  2974  03ED  1C70               	btfss	___lmul@multiplier,0
  2975  03EE  2BF7               	goto	l1581
  2976  03EF  0874               	movf	___lmul@multiplicand,w
  2977  03F0  07F8               	addwf	___lmul@product,f
  2978  03F1  0875               	movf	___lmul@multiplicand+1,w
  2979  03F2  3DF9               	addwfc	___lmul@product+1,f
  2980  03F3  0876               	movf	___lmul@multiplicand+2,w
  2981  03F4  3DFA               	addwfc	___lmul@product+2,f
  2982  03F5  0877               	movf	___lmul@multiplicand+3,w
  2983  03F6  3DFB               	addwfc	___lmul@product+3,f
  2984  03F7                     l1581:
  2985  03F7  3001               	movlw	1
  2986  03F8                     u1095:
  2987  03F8  35F4               	lslf	___lmul@multiplicand,f
  2988  03F9  0DF5               	rlf	___lmul@multiplicand+1,f
  2989  03FA  0DF6               	rlf	___lmul@multiplicand+2,f
  2990  03FB  0DF7               	rlf	___lmul@multiplicand+3,f
  2991  03FC  0B89               	decfsz	9,f
  2992  03FD  2BF8               	goto	u1095
  2993  03FE  3001               	movlw	1
  2994  03FF                     u1105:
  2995  03FF  36F3               	lsrf	___lmul@multiplier+3,f
  2996  0400  0CF2               	rrf	___lmul@multiplier+2,f
  2997  0401  0CF1               	rrf	___lmul@multiplier+1,f
  2998  0402  0CF0               	rrf	___lmul@multiplier,f
  2999  0403  0B89               	decfsz	9,f
  3000  0404  2BFF               	goto	u1105
  3001  0405  0873               	movf	___lmul@multiplier+3,w
  3002  0406  0472               	iorwf	___lmul@multiplier+2,w
  3003  0407  0471               	iorwf	___lmul@multiplier+1,w
  3004  0408  0470               	iorwf	___lmul@multiplier,w
  3005  0409  1D03               	skipz
  3006  040A  2BED               	goto	l1577
  3007  040B  087B               	movf	___lmul@product+3,w
  3008  040C  00F3               	movwf	?___lmul+3
  3009  040D  087A               	movf	___lmul@product+2,w
  3010  040E  00F2               	movwf	?___lmul+2
  3011  040F  0879               	movf	___lmul@product+1,w
  3012  0410  00F1               	movwf	?___lmul+1
  3013  0411  0878               	movf	___lmul@product,w
  3014  0412  00F0               	movwf	?___lmul
  3015  0413  0008               	return
  3016  0414                     __end_of___lmul:
  3017                           
  3018                           	psect	text5
  3019  0362                     __ptext5:	
  3020 ;; *************** function ___lldiv *****************
  3021 ;; Defined at:
  3022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  divisor         4    0[COMMON] unsigned long 
  3025 ;;  dividend        4    4[COMMON] unsigned long 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  quotient        4    9[COMMON] unsigned long 
  3028 ;;  counter         1   13[COMMON] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  4    0[COMMON] unsigned long 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 1F/0
  3035 ;;		On exit  : 1F/0
  3036 ;;		Unchanged: 1F/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1
  3038 ;;      Params:         8       0       0
  3039 ;;      Locals:         5       0       0
  3040 ;;      Temps:          1       0       0
  3041 ;;      Totals:        14       0       0
  3042 ;;Total ram usage:       14 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    4
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function ___lldiv
  3054  0362                     ___lldiv:
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3058  0362  3000               	movlw	0
  3059  0363  00FC               	movwf	___lldiv@quotient+3
  3060  0364  3000               	movlw	0
  3061  0365  00FB               	movwf	___lldiv@quotient+2
  3062  0366  3000               	movlw	0
  3063  0367  00FA               	movwf	___lldiv@quotient+1
  3064  0368  3000               	movlw	0
  3065  0369  00F9               	movwf	___lldiv@quotient
  3066  036A  0873               	movf	___lldiv@divisor+3,w
  3067  036B  0472               	iorwf	___lldiv@divisor+2,w
  3068  036C  0471               	iorwf	___lldiv@divisor+1,w
  3069  036D  0470               	iorwf	___lldiv@divisor,w
  3070  036E  1903               	skipnz
  3071  036F  2BAB               	goto	l1609
  3072  0370  01FD               	clrf	___lldiv@counter
  3073  0371  0AFD               	incf	___lldiv@counter,f
  3074  0372                     l1595:
  3075  0372  1BF3               	btfsc	___lldiv@divisor+3,7
  3076  0373  2B80               	goto	l1597
  3077  0374  3001               	movlw	1
  3078  0375                     u1135:
  3079  0375  35F0               	lslf	___lldiv@divisor,f
  3080  0376  0DF1               	rlf	___lldiv@divisor+1,f
  3081  0377  0DF2               	rlf	___lldiv@divisor+2,f
  3082  0378  0DF3               	rlf	___lldiv@divisor+3,f
  3083  0379  0B89               	decfsz	9,f
  3084  037A  2B75               	goto	u1135
  3085  037B  3001               	movlw	1
  3086  037C  00F8               	movwf	??___lldiv
  3087  037D  0878               	movf	??___lldiv,w
  3088  037E  07FD               	addwf	___lldiv@counter,f
  3089  037F  2B72               	goto	l1595
  3090  0380                     l1597:
  3091  0380  3001               	movlw	1
  3092  0381                     u1155:
  3093  0381  35F9               	lslf	___lldiv@quotient,f
  3094  0382  0DFA               	rlf	___lldiv@quotient+1,f
  3095  0383  0DFB               	rlf	___lldiv@quotient+2,f
  3096  0384  0DFC               	rlf	___lldiv@quotient+3,f
  3097  0385  0B89               	decfsz	9,f
  3098  0386  2B81               	goto	u1155
  3099  0387  0873               	movf	___lldiv@divisor+3,w
  3100  0388  0277               	subwf	___lldiv@dividend+3,w
  3101  0389  1D03               	skipz
  3102  038A  2B95               	goto	u1165
  3103  038B  0872               	movf	___lldiv@divisor+2,w
  3104  038C  0276               	subwf	___lldiv@dividend+2,w
  3105  038D  1D03               	skipz
  3106  038E  2B95               	goto	u1165
  3107  038F  0871               	movf	___lldiv@divisor+1,w
  3108  0390  0275               	subwf	___lldiv@dividend+1,w
  3109  0391  1D03               	skipz
  3110  0392  2B95               	goto	u1165
  3111  0393  0870               	movf	___lldiv@divisor,w
  3112  0394  0274               	subwf	___lldiv@dividend,w
  3113  0395                     u1165:
  3114  0395  1C03               	skipc
  3115  0396  2BA0               	goto	l1605
  3116  0397  0870               	movf	___lldiv@divisor,w
  3117  0398  02F4               	subwf	___lldiv@dividend,f
  3118  0399  0871               	movf	___lldiv@divisor+1,w
  3119  039A  3BF5               	subwfb	___lldiv@dividend+1,f
  3120  039B  0872               	movf	___lldiv@divisor+2,w
  3121  039C  3BF6               	subwfb	___lldiv@dividend+2,f
  3122  039D  0873               	movf	___lldiv@divisor+3,w
  3123  039E  3BF7               	subwfb	___lldiv@dividend+3,f
  3124  039F  1479               	bsf	___lldiv@quotient,0
  3125  03A0                     l1605:
  3126  03A0  3001               	movlw	1
  3127  03A1                     u1175:
  3128  03A1  36F3               	lsrf	___lldiv@divisor+3,f
  3129  03A2  0CF2               	rrf	___lldiv@divisor+2,f
  3130  03A3  0CF1               	rrf	___lldiv@divisor+1,f
  3131  03A4  0CF0               	rrf	___lldiv@divisor,f
  3132  03A5  0B89               	decfsz	9,f
  3133  03A6  2BA1               	goto	u1175
  3134  03A7  3001               	movlw	1
  3135  03A8  02FD               	subwf	___lldiv@counter,f
  3136  03A9  1D03               	btfss	3,2
  3137  03AA  2B80               	goto	l1597
  3138  03AB                     l1609:
  3139  03AB  087C               	movf	___lldiv@quotient+3,w
  3140  03AC  00F3               	movwf	?___lldiv+3
  3141  03AD  087B               	movf	___lldiv@quotient+2,w
  3142  03AE  00F2               	movwf	?___lldiv+2
  3143  03AF  087A               	movf	___lldiv@quotient+1,w
  3144  03B0  00F1               	movwf	?___lldiv+1
  3145  03B1  0879               	movf	___lldiv@quotient,w
  3146  03B2  00F0               	movwf	?___lldiv
  3147  03B3  0008               	return
  3148  03B4                     __end_of___lldiv:
  3149                           
  3150                           	psect	text6
  3151  02E1                     __ptext6:	
  3152 ;; *************** function ___aldiv *****************
  3153 ;; Defined at:
  3154 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aldiv.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  divisor         4    0[BANK0 ] long 
  3157 ;;  dividend        4    4[BANK0 ] long 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  quotient        4   10[BANK0 ] long 
  3160 ;;  sign            1    9[BANK0 ] unsigned char 
  3161 ;;  counter         1    8[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  4    0[BANK0 ] long 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 1F/0
  3168 ;;		On exit  : 1F/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1
  3171 ;;      Params:         0       8       0
  3172 ;;      Locals:         0       6       0
  3173 ;;      Temps:          1       0       0
  3174 ;;      Totals:         1      14       0
  3175 ;;Total ram usage:       15 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    4
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_main
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function ___aldiv
  3187  02E1                     ___aldiv:
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3191  02E1  01A9               	clrf	___aldiv@sign
  3192  02E2  1FA3               	btfss	___aldiv@divisor+3,7
  3193  02E3  2AF1               	goto	l622
  3194  02E4  09A0               	comf	___aldiv@divisor,f
  3195  02E5  09A1               	comf	___aldiv@divisor+1,f
  3196  02E6  09A2               	comf	___aldiv@divisor+2,f
  3197  02E7  09A3               	comf	___aldiv@divisor+3,f
  3198  02E8  0AA0               	incf	___aldiv@divisor,f
  3199  02E9  1903               	skipnz
  3200  02EA  0AA1               	incf	___aldiv@divisor+1,f
  3201  02EB  1903               	skipnz
  3202  02EC  0AA2               	incf	___aldiv@divisor+2,f
  3203  02ED  1903               	skipnz
  3204  02EE  0AA3               	incf	___aldiv@divisor+3,f
  3205  02EF  01A9               	clrf	___aldiv@sign
  3206  02F0  0AA9               	incf	___aldiv@sign,f
  3207  02F1                     l622:
  3208  02F1  1FA7               	btfss	___aldiv@dividend+3,7
  3209  02F2  2B02               	goto	l1623
  3210  02F3  09A4               	comf	___aldiv@dividend,f
  3211  02F4  09A5               	comf	___aldiv@dividend+1,f
  3212  02F5  09A6               	comf	___aldiv@dividend+2,f
  3213  02F6  09A7               	comf	___aldiv@dividend+3,f
  3214  02F7  0AA4               	incf	___aldiv@dividend,f
  3215  02F8  1903               	skipnz
  3216  02F9  0AA5               	incf	___aldiv@dividend+1,f
  3217  02FA  1903               	skipnz
  3218  02FB  0AA6               	incf	___aldiv@dividend+2,f
  3219  02FC  1903               	skipnz
  3220  02FD  0AA7               	incf	___aldiv@dividend+3,f
  3221  02FE  3001               	movlw	1
  3222  02FF  00FC               	movwf	??___aldiv
  3223  0300  087C               	movf	??___aldiv,w
  3224  0301  06A9               	xorwf	___aldiv@sign,f
  3225  0302                     l1623:
  3226  0302  3000               	movlw	0
  3227  0303  00AD               	movwf	___aldiv@quotient+3
  3228  0304  3000               	movlw	0
  3229  0305  00AC               	movwf	___aldiv@quotient+2
  3230  0306  3000               	movlw	0
  3231  0307  00AB               	movwf	___aldiv@quotient+1
  3232  0308  3000               	movlw	0
  3233  0309  00AA               	movwf	___aldiv@quotient
  3234  030A  0823               	movf	___aldiv@divisor+3,w
  3235  030B  0422               	iorwf	___aldiv@divisor+2,w
  3236  030C  0421               	iorwf	___aldiv@divisor+1,w
  3237  030D  0420               	iorwf	___aldiv@divisor,w
  3238  030E  1903               	skipnz
  3239  030F  2B4B               	goto	l1645
  3240  0310  01A8               	clrf	___aldiv@counter
  3241  0311  0AA8               	incf	___aldiv@counter,f
  3242  0312                     l1631:
  3243  0312  1BA3               	btfsc	___aldiv@divisor+3,7
  3244  0313  2B20               	goto	l1633
  3245  0314  3001               	movlw	1
  3246  0315                     u1225:
  3247  0315  35A0               	lslf	___aldiv@divisor,f
  3248  0316  0DA1               	rlf	___aldiv@divisor+1,f
  3249  0317  0DA2               	rlf	___aldiv@divisor+2,f
  3250  0318  0DA3               	rlf	___aldiv@divisor+3,f
  3251  0319  0B89               	decfsz	9,f
  3252  031A  2B15               	goto	u1225
  3253  031B  3001               	movlw	1
  3254  031C  00FC               	movwf	??___aldiv
  3255  031D  087C               	movf	??___aldiv,w
  3256  031E  07A8               	addwf	___aldiv@counter,f
  3257  031F  2B12               	goto	l1631
  3258  0320                     l1633:
  3259  0320  3001               	movlw	1
  3260  0321                     u1245:
  3261  0321  35AA               	lslf	___aldiv@quotient,f
  3262  0322  0DAB               	rlf	___aldiv@quotient+1,f
  3263  0323  0DAC               	rlf	___aldiv@quotient+2,f
  3264  0324  0DAD               	rlf	___aldiv@quotient+3,f
  3265  0325  0B89               	decfsz	9,f
  3266  0326  2B21               	goto	u1245
  3267  0327  0823               	movf	___aldiv@divisor+3,w
  3268  0328  0227               	subwf	___aldiv@dividend+3,w
  3269  0329  1D03               	skipz
  3270  032A  2B35               	goto	u1255
  3271  032B  0822               	movf	___aldiv@divisor+2,w
  3272  032C  0226               	subwf	___aldiv@dividend+2,w
  3273  032D  1D03               	skipz
  3274  032E  2B35               	goto	u1255
  3275  032F  0821               	movf	___aldiv@divisor+1,w
  3276  0330  0225               	subwf	___aldiv@dividend+1,w
  3277  0331  1D03               	skipz
  3278  0332  2B35               	goto	u1255
  3279  0333  0820               	movf	___aldiv@divisor,w
  3280  0334  0224               	subwf	___aldiv@dividend,w
  3281  0335                     u1255:
  3282  0335  1C03               	skipc
  3283  0336  2B40               	goto	l1641
  3284  0337  0820               	movf	___aldiv@divisor,w
  3285  0338  02A4               	subwf	___aldiv@dividend,f
  3286  0339  0821               	movf	___aldiv@divisor+1,w
  3287  033A  3BA5               	subwfb	___aldiv@dividend+1,f
  3288  033B  0822               	movf	___aldiv@divisor+2,w
  3289  033C  3BA6               	subwfb	___aldiv@dividend+2,f
  3290  033D  0823               	movf	___aldiv@divisor+3,w
  3291  033E  3BA7               	subwfb	___aldiv@dividend+3,f
  3292  033F  142A               	bsf	___aldiv@quotient,0
  3293  0340                     l1641:
  3294  0340  3001               	movlw	1
  3295  0341                     u1265:
  3296  0341  36A3               	lsrf	___aldiv@divisor+3,f
  3297  0342  0CA2               	rrf	___aldiv@divisor+2,f
  3298  0343  0CA1               	rrf	___aldiv@divisor+1,f
  3299  0344  0CA0               	rrf	___aldiv@divisor,f
  3300  0345  0B89               	decfsz	9,f
  3301  0346  2B41               	goto	u1265
  3302  0347  3001               	movlw	1
  3303  0348  02A8               	subwf	___aldiv@counter,f
  3304  0349  1D03               	btfss	3,2
  3305  034A  2B20               	goto	l1633
  3306  034B                     l1645:
  3307  034B  0829               	movf	___aldiv@sign,w
  3308  034C  1903               	btfsc	3,2
  3309  034D  2B59               	goto	l1649
  3310  034E  09AA               	comf	___aldiv@quotient,f
  3311  034F  09AB               	comf	___aldiv@quotient+1,f
  3312  0350  09AC               	comf	___aldiv@quotient+2,f
  3313  0351  09AD               	comf	___aldiv@quotient+3,f
  3314  0352  0AAA               	incf	___aldiv@quotient,f
  3315  0353  1903               	skipnz
  3316  0354  0AAB               	incf	___aldiv@quotient+1,f
  3317  0355  1903               	skipnz
  3318  0356  0AAC               	incf	___aldiv@quotient+2,f
  3319  0357  1903               	skipnz
  3320  0358  0AAD               	incf	___aldiv@quotient+3,f
  3321  0359                     l1649:
  3322  0359  082D               	movf	___aldiv@quotient+3,w
  3323  035A  00A3               	movwf	?___aldiv+3
  3324  035B  082C               	movf	___aldiv@quotient+2,w
  3325  035C  00A2               	movwf	?___aldiv+2
  3326  035D  082B               	movf	___aldiv@quotient+1,w
  3327  035E  00A1               	movwf	?___aldiv+1
  3328  035F  082A               	movf	___aldiv@quotient,w
  3329  0360  00A0               	movwf	?___aldiv
  3330  0361  0008               	return
  3331  0362                     __end_of___aldiv:
  3332                           
  3333                           	psect	text7
  3334  04FC                     __ptext7:	
  3335 ;; *************** function _TMR2_StartTimer *****************
  3336 ;; Defined at:
  3337 ;;		line 79 in file "mcc_generated_files/tmr2.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		None
  3346 ;; Tracked objects:
  3347 ;;		On entry : 1F/0
  3348 ;;		On exit  : 1F/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1
  3351 ;;      Params:         0       0       0
  3352 ;;      Locals:         0       0       0
  3353 ;;      Temps:          0       0       0
  3354 ;;      Totals:         0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    4
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _TMR2_StartTimer
  3367  04FC                     _TMR2_StartTimer:
  3368                           
  3369                           ;mcc_generated_files/tmr2.c: 82:     T2CONbits.TMR2ON = 1;
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _TMR2_StartTimer: []
  3373  04FC  151C               	bsf	28,2	;volatile
  3374  04FD  0008               	return
  3375  04FE                     __end_of_TMR2_StartTimer:
  3376                           
  3377                           	psect	text8
  3378  04B7                     __ptext8:	
  3379 ;; *************** function _SYSTEM_Initialize *****************
  3380 ;; Defined at:
  3381 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0, pclath, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : B1F/0
  3392 ;;		On exit  : 1F/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1
  3395 ;;      Params:         0       0       0
  3396 ;;      Locals:         0       0       0
  3397 ;;      Temps:          0       0       0
  3398 ;;      Totals:         0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    6
  3402 ;; This function calls:
  3403 ;;		_ADC_Initialize
  3404 ;;		_OSCILLATOR_Initialize
  3405 ;;		_PIN_MANAGER_Initialize
  3406 ;;		_PWM3_Initialize
  3407 ;;		_TMR0_Initialize
  3408 ;;		_TMR2_Initialize
  3409 ;;		_WDT_Initialize
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _SYSTEM_Initialize
  3417  04B7                     _SYSTEM_Initialize:
  3418                           
  3419                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3423  04B7  243A               	fcall	_PIN_MANAGER_Initialize
  3424                           
  3425                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3426  04B8  24E3               	fcall	_OSCILLATOR_Initialize
  3427                           
  3428                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3429  04B9  24F8               	fcall	_WDT_Initialize
  3430                           
  3431                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3432  04BA  24CF               	fcall	_ADC_Initialize
  3433                           
  3434                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  3435  04BB  24C7               	fcall	_PWM3_Initialize
  3436                           
  3437                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3438  04BC  24BF               	fcall	_TMR2_Initialize
  3439                           
  3440                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  3441  04BD  2480               	fcall	_TMR0_Initialize
  3442  04BE  0008               	return
  3443  04BF                     __end_of_SYSTEM_Initialize:
  3444                           
  3445                           	psect	text9
  3446  04F8                     __ptext9:	
  3447 ;; *************** function _WDT_Initialize *****************
  3448 ;; Defined at:
  3449 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg
  3458 ;; Tracked objects:
  3459 ;;		On entry : B1F/2
  3460 ;;		On exit  : B1F/1
  3461 ;;		Unchanged: B00/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1
  3463 ;;      Params:         0       0       0
  3464 ;;      Locals:         0       0       0
  3465 ;;      Temps:          0       0       0
  3466 ;;      Totals:         0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    4
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_SYSTEM_Initialize
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _WDT_Initialize
  3479  04F8                     _WDT_Initialize:
  3480                           
  3481                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _WDT_Initialize: [wreg]
  3485  04F8  3016               	movlw	22
  3486  04F9  0021               	movlb	1	; select bank1
  3487  04FA  0097               	movwf	23	;volatile
  3488  04FB  0008               	return
  3489  04FC                     __end_of_WDT_Initialize:
  3490                           
  3491                           	psect	text10
  3492  04BF                     __ptext10:	
  3493 ;; *************** function _TMR2_Initialize *****************
  3494 ;; Defined at:
  3495 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2
  3504 ;; Tracked objects:
  3505 ;;		On entry : B1F/C
  3506 ;;		On exit  : B1F/0
  3507 ;;		Unchanged: B00/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1
  3509 ;;      Params:         0       0       0
  3510 ;;      Locals:         0       0       0
  3511 ;;      Temps:          0       0       0
  3512 ;;      Totals:         0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    4
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_SYSTEM_Initialize
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _TMR2_Initialize
  3525  04BF                     _TMR2_Initialize:
  3526                           
  3527                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3531  04BF  30FF               	movlw	255
  3532  04C0  0020               	movlb	0	; select bank0
  3533  04C1  009B               	movwf	27	;volatile
  3534                           
  3535                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3536  04C2  019A               	clrf	26	;volatile
  3537                           
  3538                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3539  04C3  1091               	bcf	17,1	;volatile
  3540                           
  3541                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x1C;
  3542  04C4  301C               	movlw	28
  3543  04C5  009C               	movwf	28	;volatile
  3544  04C6  0008               	return
  3545  04C7                     __end_of_TMR2_Initialize:
  3546                           
  3547                           	psect	text11
  3548  0480                     __ptext11:	
  3549 ;; *************** function _TMR0_Initialize *****************
  3550 ;; Defined at:
  3551 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0, pclath, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : B1F/0
  3562 ;;		On exit  : 1F/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1
  3565 ;;      Params:         0       0       0
  3566 ;;      Locals:         0       0       0
  3567 ;;      Temps:          1       0       0
  3568 ;;      Totals:         1       0       0
  3569 ;;Total ram usage:        1 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    5
  3572 ;; This function calls:
  3573 ;;		_TMR0_SetInterruptHandler
  3574 ;; This function is called by:
  3575 ;;		_SYSTEM_Initialize
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           
  3580                           ;psect for function _TMR0_Initialize
  3581  0480                     _TMR0_Initialize:
  3582                           
  3583                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  3584                           
  3585                           ;incstack = 0
  3586                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3587  0480  0021               	movlb	1	; select bank1
  3588  0481  0815               	movf	21,w	;volatile
  3589  0482  39C0               	andlw	192
  3590  0483  3811               	iorlw	17
  3591  0484  0095               	movwf	21	;volatile
  3592                           
  3593                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  3594  0485  3006               	movlw	6
  3595  0486  0020               	movlb	0	; select bank0
  3596  0487  0095               	movwf	21	;volatile
  3597                           
  3598                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  3599  0488  3006               	movlw	6
  3600  0489  00F2               	movwf	??_TMR0_Initialize
  3601  048A  0872               	movf	??_TMR0_Initialize,w
  3602  048B  00D5               	movwf	_timer0ReloadVal	;volatile
  3603                           
  3604                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3605  048C  110B               	bcf	11,2	;volatile
  3606                           
  3607                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  3608  048D  168B               	bsf	11,5	;volatile
  3609                           
  3610                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3611  048E  30FE               	movlw	low _TMR0_DefaultInterruptHandler
  3612  048F  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3613  0490  3004               	movlw	high _TMR0_DefaultInterruptHandler
  3614  0491  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3615  0492  24EF               	fcall	_TMR0_SetInterruptHandler
  3616  0493  0008               	return
  3617  0494                     __end_of_TMR0_Initialize:
  3618                           
  3619                           	psect	text12
  3620  04EF                     __ptext12:	
  3621 ;; *************** function _TMR0_SetInterruptHandler *****************
  3622 ;; Defined at:
  3623 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  3626 ;;		 -> timer0CallBack(1), TMR0_DefaultInterruptHandler(1), 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg
  3633 ;; Tracked objects:
  3634 ;;		On entry : 1F/0
  3635 ;;		On exit  : 1F/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1
  3638 ;;      Params:         2       0       0
  3639 ;;      Locals:         0       0       0
  3640 ;;      Temps:          0       0       0
  3641 ;;      Totals:         2       0       0
  3642 ;;Total ram usage:        2 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    4
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_TMR0_Initialize
  3649 ;;		_main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _TMR0_SetInterruptHandler
  3655  04EF                     _TMR0_SetInterruptHandler:
  3656                           
  3657                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3661  04EF  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3662  04F0  00D4               	movwf	_TMR0_InterruptHandler+1
  3663  04F1  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3664  04F2  00D3               	movwf	_TMR0_InterruptHandler
  3665  04F3  0008               	return
  3666  04F4                     __end_of_TMR0_SetInterruptHandler:
  3667                           
  3668                           	psect	text13
  3669  04C7                     __ptext13:	
  3670 ;; *************** function _PWM3_Initialize *****************
  3671 ;; Defined at:
  3672 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg
  3681 ;; Tracked objects:
  3682 ;;		On entry : B1F/1
  3683 ;;		On exit  : B1F/C
  3684 ;;		Unchanged: B00/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1
  3686 ;;      Params:         0       0       0
  3687 ;;      Locals:         0       0       0
  3688 ;;      Temps:          0       0       0
  3689 ;;      Totals:         0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    4
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_SYSTEM_Initialize
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function _PWM3_Initialize
  3702  04C7                     _PWM3_Initialize:
  3703                           
  3704                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0xD0;
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _PWM3_Initialize: [wreg]
  3708  04C7  30D0               	movlw	208
  3709  04C8  002C               	movlb	12	; select bank12
  3710  04C9  0099               	movwf	25	;volatile
  3711                           
  3712                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0xFF;
  3713  04CA  30FF               	movlw	255
  3714  04CB  0098               	movwf	24	;volatile
  3715                           
  3716                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  3717  04CC  30C0               	movlw	192
  3718  04CD  0097               	movwf	23	;volatile
  3719  04CE  0008               	return
  3720  04CF                     __end_of_PWM3_Initialize:
  3721                           
  3722                           	psect	text14
  3723  043A                     __ptext14:	
  3724 ;; *************** function _PIN_MANAGER_Initialize *****************
  3725 ;; Defined at:
  3726 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2
  3735 ;; Tracked objects:
  3736 ;;		On entry : B1F/0
  3737 ;;		On exit  : B1F/2
  3738 ;;		Unchanged: B00/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1
  3740 ;;      Params:         0       0       0
  3741 ;;      Locals:         0       0       0
  3742 ;;      Temps:          0       0       0
  3743 ;;      Totals:         0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    4
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_SYSTEM_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _PIN_MANAGER_Initialize
  3756  043A                     _PIN_MANAGER_Initialize:
  3757                           
  3758                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3762  043A  0022               	movlb	2	; select bank2
  3763  043B  018C               	clrf	12	;volatile
  3764                           
  3765                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3766  043C  018D               	clrf	13	;volatile
  3767                           
  3768                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3769  043D  018E               	clrf	14	;volatile
  3770                           
  3771                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3B;
  3772  043E  303B               	movlw	59
  3773  043F  0021               	movlb	1	; select bank1
  3774  0440  008C               	movwf	12	;volatile
  3775                           
  3776                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x10;
  3777  0441  3010               	movlw	16
  3778  0442  008D               	movwf	13	;volatile
  3779                           
  3780                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  3781  0443  018E               	clrf	14	;volatile
  3782                           
  3783                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  3784  0444  0023               	movlb	3	; select bank3
  3785  0445  018E               	clrf	14	;volatile
  3786                           
  3787                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
  3788  0446  3030               	movlw	48
  3789  0447  008D               	movwf	13	;volatile
  3790                           
  3791                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x13;
  3792  0448  3013               	movlw	19
  3793  0449  008C               	movwf	12	;volatile
  3794                           
  3795                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3796  044A  0024               	movlb	4	; select bank4
  3797  044B  018D               	clrf	13	;volatile
  3798                           
  3799                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3800  044C  018C               	clrf	12	;volatile
  3801                           
  3802                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3803  044D  0021               	movlb	1	; select bank1
  3804  044E  1795               	bsf	21,7	;volatile
  3805                           
  3806                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3807  044F  0022               	movlb	2	; select bank2
  3808  0450  019D               	clrf	29	;volatile
  3809  0451  0008               	return
  3810  0452                     __end_of_PIN_MANAGER_Initialize:
  3811                           
  3812                           	psect	text15
  3813  04E3                     __ptext15:	
  3814 ;; *************** function _OSCILLATOR_Initialize *****************
  3815 ;; Defined at:
  3816 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2
  3825 ;; Tracked objects:
  3826 ;;		On entry : B1F/2
  3827 ;;		On exit  : B1F/2
  3828 ;;		Unchanged: B00/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1
  3830 ;;      Params:         0       0       0
  3831 ;;      Locals:         0       0       0
  3832 ;;      Temps:          0       0       0
  3833 ;;      Totals:         0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    4
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_SYSTEM_Initialize
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function _OSCILLATOR_Initialize
  3846  04E3                     _OSCILLATOR_Initialize:
  3847                           
  3848                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x6A;
  3849                           
  3850                           ;incstack = 0
  3851                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3852  04E3  306A               	movlw	106
  3853  04E4  0021               	movlb	1	; select bank1
  3854  04E5  0099               	movwf	25	;volatile
  3855                           
  3856                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3857  04E6  0022               	movlb	2	; select bank2
  3858  04E7  0196               	clrf	22	;volatile
  3859  04E8  0008               	return
  3860  04E9                     __end_of_OSCILLATOR_Initialize:
  3861                           
  3862                           	psect	text16
  3863  04CF                     __ptext16:	
  3864 ;; *************** function _ADC_Initialize *****************
  3865 ;; Defined at:
  3866 ;;		line 67 in file "mcc_generated_files/adc.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2
  3875 ;; Tracked objects:
  3876 ;;		On entry : B1F/1
  3877 ;;		On exit  : B1F/1
  3878 ;;		Unchanged: B00/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1
  3880 ;;      Params:         0       0       0
  3881 ;;      Locals:         0       0       0
  3882 ;;      Temps:          0       0       0
  3883 ;;      Totals:         0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    4
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_SYSTEM_Initialize
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _ADC_Initialize
  3896  04CF                     _ADC_Initialize:
  3897                           
  3898                           ;mcc_generated_files/adc.c: 72:     ADCON0 = 0x01;
  3899                           
  3900                           ;incstack = 0
  3901                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3902  04CF  3001               	movlw	1
  3903  04D0  009D               	movwf	29	;volatile
  3904                           
  3905                           ;mcc_generated_files/adc.c: 75:     ADCON1 = 0xC0;
  3906  04D1  30C0               	movlw	192
  3907  04D2  009E               	movwf	30	;volatile
  3908                           
  3909                           ;mcc_generated_files/adc.c: 78:     ADCON2 = 0x00;
  3910  04D3  019F               	clrf	31	;volatile
  3911                           
  3912                           ;mcc_generated_files/adc.c: 81:     ADRESL = 0x00;
  3913  04D4  019B               	clrf	27	;volatile
  3914                           
  3915                           ;mcc_generated_files/adc.c: 84:     ADRESH = 0x00;
  3916  04D5  019C               	clrf	28	;volatile
  3917  04D6  0008               	return
  3918  04D7                     __end_of_ADC_Initialize:
  3919                           
  3920                           	psect	text17
  3921  046A                     __ptext17:	
  3922 ;; *************** function _PWM3_LoadDutyValue *****************
  3923 ;; Defined at:
  3924 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  dutyValue       2    4[COMMON] unsigned short 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 1F/1
  3935 ;;		On exit  : 1F/C
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1
  3938 ;;      Params:         2       0       0
  3939 ;;      Locals:         0       0       0
  3940 ;;      Temps:          2       0       0
  3941 ;;      Totals:         4       0       0
  3942 ;;Total ram usage:        4 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    4
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_main
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function _PWM3_LoadDutyValue
  3954  046A                     _PWM3_LoadDutyValue:
  3955                           
  3956                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  3960  046A  0875               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  3961  046B  00F7               	movwf	??_PWM3_LoadDutyValue+1
  3962  046C  0874               	movf	PWM3_LoadDutyValue@dutyValue,w
  3963  046D  00F6               	movwf	??_PWM3_LoadDutyValue
  3964  046E  36F7               	lsrf	??_PWM3_LoadDutyValue+1,f
  3965  046F  0CF6               	rrf	??_PWM3_LoadDutyValue,f
  3966  0470  36F7               	lsrf	??_PWM3_LoadDutyValue+1,f
  3967  0471  0CF6               	rrf	??_PWM3_LoadDutyValue,f
  3968  0472  0876               	movf	??_PWM3_LoadDutyValue,w
  3969  0473  002C               	movlb	12	; select bank12
  3970  0474  0098               	movwf	24	;volatile
  3971                           
  3972                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  3973  0475  0874               	movf	PWM3_LoadDutyValue@dutyValue,w
  3974  0476  3903               	andlw	3
  3975  0477  00F6               	movwf	??_PWM3_LoadDutyValue
  3976  0478  3005               	movlw	5
  3977  0479                     u845:
  3978  0479  35F6               	lslf	??_PWM3_LoadDutyValue,f
  3979  047A  3EFF               	addlw	-1
  3980  047B  1D03               	skipz
  3981  047C  2C79               	goto	u845
  3982  047D  3576               	lslf	??_PWM3_LoadDutyValue,w
  3983  047E  0097               	movwf	23	;volatile
  3984  047F  0008               	return
  3985  0480                     __end_of_PWM3_LoadDutyValue:
  3986                           
  3987                           	psect	text18
  3988  0452                     __ptext18:	
  3989 ;; *************** function _ADC_GetConversion *****************
  3990 ;; Defined at:
  3991 ;;		line 115 in file "mcc_generated_files/adc.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  channel         1    wreg     enum E2336
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  channel         1    3[COMMON] enum E2336
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  2    0[COMMON] unsigned short 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 1F/0
  4002 ;;		On exit  : 1F/1
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1
  4005 ;;      Params:         2       0       0
  4006 ;;      Locals:         1       0       0
  4007 ;;      Temps:          1       0       0
  4008 ;;      Totals:         4       0       0
  4009 ;;Total ram usage:        4 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    4
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _ADC_GetConversion
  4021  0452                     _ADC_GetConversion:
  4022                           
  4023                           ;incstack = 0
  4024                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4025                           ;ADC_GetConversion@channel stored from wreg
  4026  0452  00F3               	movwf	ADC_GetConversion@channel
  4027                           
  4028                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  4029  0453  0873               	movf	ADC_GetConversion@channel,w
  4030  0454  00F2               	movwf	??_ADC_GetConversion
  4031  0455  0DF2               	rlf	??_ADC_GetConversion,f
  4032  0456  0DF2               	rlf	??_ADC_GetConversion,f
  4033  0457  0021               	movlb	1	; select bank1
  4034  0458  081D               	movf	29,w	;volatile
  4035  0459  0672               	xorwf	??_ADC_GetConversion,w
  4036  045A  3983               	andlw	-125
  4037  045B  0672               	xorwf	??_ADC_GetConversion,w
  4038  045C  009D               	movwf	29	;volatile
  4039                           
  4040                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  4041  045D  141D               	bsf	29,0	;volatile
  4042                           
  4043                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  4044  045E  3200               	nop2	;2 cycle nop
  4045  045F  3200               	nop2	;2 cycle nop
  4046  0460  0000               	nop
  4047                           
  4048                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  4049  0461  0021               	movlb	1	; select bank1
  4050  0462  149D               	bsf	29,1	;volatile
  4051  0463                     l34:	
  4052                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  4053                           
  4054                           
  4055                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  4056  0463  189D               	btfsc	29,1	;volatile
  4057  0464  2C63               	goto	l34
  4058                           
  4059                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4060  0465  081C               	movf	28,w	;volatile
  4061  0466  00F1               	movwf	?_ADC_GetConversion+1
  4062  0467  081B               	movf	27,w	;volatile
  4063  0468  00F0               	movwf	?_ADC_GetConversion
  4064  0469  0008               	return
  4065  046A                     __end_of_ADC_GetConversion:
  4066                           
  4067                           	psect	intentry
  4068  0004                     __pintentry:	
  4069 ;; *************** function _INTERRUPT_InterruptManager *****************
  4070 ;; Defined at:
  4071 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0, pclath, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1
  4085 ;;      Params:         0       0       0
  4086 ;;      Locals:         0       0       0
  4087 ;;      Temps:          0       0       0
  4088 ;;      Totals:         0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    3
  4092 ;; This function calls:
  4093 ;;		_TMR0_ISR
  4094 ;; This function is called by:
  4095 ;;		Interrupt level 1
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099  0004                     _INTERRUPT_InterruptManager:
  4100                           
  4101                           ;incstack = 0
  4102  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4103                           
  4104                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4105  0005  3180               	pagesel	$
  4106                           
  4107                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4108  0006  1A8B               	btfsc	11,5	;volatile
  4109  0007  1D0B               	btfss	11,2	;volatile
  4110  0008  280A               	goto	i1l197
  4111                           
  4112                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4113  0009  24E9               	fcall	_TMR0_ISR
  4114  000A                     i1l197:	
  4115                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4116                           
  4117  000A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4118  000B  0009               	retfie
  4119  000C                     __end_of_INTERRUPT_InterruptManager:
  4120                           
  4121                           	psect	text20
  4122  04E9                     __ptext20:	
  4123 ;; *************** function _TMR0_ISR *****************
  4124 ;; Defined at:
  4125 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, pclath, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1
  4139 ;;      Params:         0       0       0
  4140 ;;      Locals:         0       0       0
  4141 ;;      Temps:          0       0       0
  4142 ;;      Totals:         0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    2
  4146 ;; This function calls:
  4147 ;;		_TMR0_CallBack
  4148 ;; This function is called by:
  4149 ;;		_INTERRUPT_InterruptManager
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _TMR0_ISR
  4155  04E9                     _TMR0_ISR:
  4156                           
  4157                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4161  04E9  110B               	bcf	11,2	;volatile
  4162                           
  4163                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  4164  04EA  0020               	movlb	0	; select bank0
  4165  04EB  0855               	movf	_timer0ReloadVal,w	;volatile
  4166  04EC  0095               	movwf	21	;volatile
  4167                           
  4168                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
  4169  04ED  24A4               	fcall	_TMR0_CallBack
  4170  04EE  0008               	return
  4171  04EF                     __end_of_TMR0_ISR:
  4172                           
  4173                           	psect	text21
  4174  04A4                     __ptext21:	
  4175 ;; *************** function _TMR0_CallBack *****************
  4176 ;; Defined at:
  4177 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 1F/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1
  4191 ;;      Params:         0       0       0
  4192 ;;      Locals:         0       0       0
  4193 ;;      Temps:          0       0       0
  4194 ;;      Totals:         0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    1
  4198 ;; This function calls:
  4199 ;;		Absolute function
  4200 ;;		_TMR0_DefaultInterruptHandler
  4201 ;;		_timer0CallBack
  4202 ;; This function is called by:
  4203 ;;		_TMR0_ISR
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           
  4208                           ;psect for function _TMR0_CallBack
  4209  04A4                     _TMR0_CallBack:
  4210                           
  4211                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4215  04A4  0853               	movf	_TMR0_InterruptHandler,w
  4216  04A5  0454               	iorwf	_TMR0_InterruptHandler+1,w
  4217  04A6  1903               	btfsc	3,2
  4218  04A7  0008               	return
  4219                           
  4220                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
  4221  04A8  0854               	movf	_TMR0_InterruptHandler+1,w
  4222  04A9  008A               	movwf	10
  4223  04AA  0853               	movf	_TMR0_InterruptHandler,w
  4224  04AB  000A               	callw
  4225  04AC  3184               	pagesel	$
  4226  04AD  0008               	return
  4227  04AE                     __end_of_TMR0_CallBack:
  4228                           
  4229                           	psect	text22
  4230  04FE                     __ptext22:	
  4231 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4232 ;; Defined at:
  4233 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		None
  4242 ;; Tracked objects:
  4243 ;;		On entry : 1F/0
  4244 ;;		On exit  : 1F/0
  4245 ;;		Unchanged: 1F/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1
  4247 ;;      Params:         0       0       0
  4248 ;;      Locals:         0       0       0
  4249 ;;      Temps:          0       0       0
  4250 ;;      Totals:         0       0       0
  4251 ;;Total ram usage:        0 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_TMR0_Initialize
  4257 ;;		_TMR0_CallBack
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           
  4262                           ;psect for function _TMR0_DefaultInterruptHandler
  4263  04FE                     _TMR0_DefaultInterruptHandler:
  4264                           
  4265                           ;incstack = 0
  4266                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4267  04FE  0008               	return
  4268  04FF                     __end_of_TMR0_DefaultInterruptHandler:
  4269                           
  4270                           	psect	text23
  4271  0494                     __ptext23:	
  4272 ;; *************** function _timer0CallBack *****************
  4273 ;; Defined at:
  4274 ;;		line 75 in file "main.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2
  4283 ;; Tracked objects:
  4284 ;;		On entry : 1F/0
  4285 ;;		On exit  : 1F/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1
  4288 ;;      Params:         0       0       0
  4289 ;;      Locals:         0       0       0
  4290 ;;      Temps:          0       0       0
  4291 ;;      Totals:         0       0       0
  4292 ;;Total ram usage:        0 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;;		_TMR0_CallBack
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function _timer0CallBack
  4304  0494                     _timer0CallBack:
  4305                           
  4306                           ;main.c: 78:     msTick++;
  4307                           
  4308                           ;incstack = 0
  4309                           ; Regs used in _timer0CallBack: [wreg+status,2]
  4310  0494  3001               	movlw	1
  4311  0495  07C3               	addwf	_msTick,f	;volatile
  4312  0496  3000               	movlw	0
  4313  0497  3DC4               	addwfc	_msTick+1,f	;volatile
  4314                           
  4315                           ;main.c: 80:     if(msTick > 200)
  4316  0498  3000               	movlw	0
  4317  0499  0244               	subwf	_msTick+1,w	;volatile
  4318  049A  30C9               	movlw	201
  4319  049B  1903               	skipnz
  4320  049C  0243               	subwf	_msTick,w	;volatile
  4321  049D  1C03               	skipc
  4322  049E  0008               	return
  4323                           
  4324                           ;main.c: 81:     {;main.c: 82:         doToggle = 1;
  4325  049F  01C8               	clrf	_doToggle
  4326  04A0  0AC8               	incf	_doToggle,f
  4327                           
  4328                           ;main.c: 83:         msTick = 0;
  4329  04A1  01C3               	clrf	_msTick	;volatile
  4330  04A2  01C4               	clrf	_msTick+1	;volatile
  4331  04A3  0008               	return
  4332  04A4                     __end_of_timer0CallBack:
  4333  007E                     btemp	set	126	;btemp
  4334  007E                     int$flags	set	126
  4335  007E                     wtemp0	set	126
  4336                           
  4337                           	psect	config
  4338                           
  4339                           ;Config register CONFIG1 @ 0x8007
  4340                           ;	Oscillator Selection bits
  4341                           ;	FOSC = INTOSC, Internal Oscillator, I/O Function on OSC1
  4342                           ;	Watchdog Timer Enable
  4343                           ;	WDTE = OFF, WDT disabled
  4344                           ;	Power-up Timer Enable
  4345                           ;	PWRTE = OFF, PWRT disabled
  4346                           ;	MCLR Pin Function Select
  4347                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4348                           ;	Flash Program Memory Code Protection
  4349                           ;	CP = OFF, Program memory code protection is disabled
  4350                           ;	Brown-out Reset Enable
  4351                           ;	BOREN = ON, Brown-out Reset enabled
  4352                           ;	Clock Out Enable
  4353                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4354  8007                     	org	32775
  4355  8007  3FE4               	dw	16356
  4356                           
  4357                           ;Config register CONFIG2 @ 0x8008
  4358                           ;	Flash Memory Self-Write Protection
  4359                           ;	WRT = OFF, Write protection off
  4360                           ;	Stack Overflow/Underflow Reset Enable
  4361                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4362                           ;	Brown-out Reset Voltage Selection
  4363                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4364                           ;	Low-Power Brown Out Reset
  4365                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4366                           ;	Low-Voltage Programming Enable
  4367                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4368  8008                     	org	32776
  4369  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    4
    Data        9
    BSS         20
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      54
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0CallBack(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0CallBack(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->___lldiv
    ___aldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PWM3_LoadDutyValue->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2282
                                             14 BANK0      8     8      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR2_StartTimer
                            ___aldiv
                            ___lldiv
                             ___lmul
                             ___tmul
              _setLedsForPositioning
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      66
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setLedsForPositioning                                4     0      4     472
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___tmul                                               9     3      6     244
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     452
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                              4 COMMON     4     2      2
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _timer0CallBack *
 ---------------------------------------------------------------------------------
 (7) _timer0CallBack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _PWM3_LoadDutyValue
     _ADC_GetConversion (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR2_StartTimer
   ___aldiv
     ___lmul (ARG)
   ___lldiv
   ___lmul
   ___tmul
   _setLedsForPositioning
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _timer0CallBack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      36       6       67.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      44       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jun 29 10:30:34 2020

                                       _b 003E                                         _m 004A  
                                      l34 0463                           _timer0ReloadVal 0055  
          __size_of_setLedsForPositioning 0138             __end_of_setLedsForPositioning 02E1  
                                     l312 03C6                                       l402 01C4  
                                     l315 03C8                                       l412 01E7  
                                     l422 0209                                       l406 01D5  
                                     l432 022A                                       l416 01F8  
                                     l360 0151                                       l442 024B  
                                     l426 0219                                       l370 0180  
                                     l354 0133                                       l338 006A  
                                     l452 0279                                       l436 023A  
                                     l372 018A                                       l356 013D  
                                     l622 02F1                                       l462 029A  
                                     l366 016C                                       l358 0147  
                                     l472 02BB                                       l448 0269  
                                     l368 0176                                       l482 02DC  
                                     l458 028A                                       l468 02AB  
                                     l478 02CC                                       l487 02DF  
                                     _PR2 001B                                       u845 0479  
                         _TMR2_Initialize 04BF                                       wreg 0009  
                             main@channel 004E                                      l1513 03CA  
                                    l1531 01FB                                      l1515 03DD  
                                    l1605 03A0                                      l1541 024D  
                                    l1533 020B                                      l1525 01C6  
                                    l1701 0070                                      l1631 0312  
                                    l1623 0302                                      l1551 028C  
                                    l1535 021C                                      l1527 01D8  
                                    l1641 0340                                      l1633 0320  
                                    l1609 03AB                                      l1553 029D  
                                    l1545 025B                                      l1537 022C  
                                    l1529 01E9                                      l1705 007B  
                                    l1563 041A                                      l1555 02AD  
                                    l1547 026B                                      l1539 023D  
                                    l1723 0125                                      l1715 00BE  
                                    l1645 034B                                      l1581 03F7  
                                    l1557 02BE                                      l1549 027C  
                                    l1717 00D1                                      l1567 0422  
                                    l1559 02CE                                      l1727 015B  
                                    l1719 00D3                                      l1831 00C6  
                                    l1649 0359                                      l1577 03ED  
                                    l1833 019D                                      l1729 015E  
                                    l1737 0195                                      l1681 004A  
                                    l1673 0031                                      l1595 0372  
                                    l1835 03D2                                      l1691 0062  
                                    l1597 0380                                      l1669 002A  
                                    l1695 0066                                      l1679 0043  
                                    l1689 005F                                      l1699 006D  
                                    u1105 03FF                                      u1135 0375  
                                    u1055 0423                                      u1400 0131  
                                    u1225 0315                                      u1065 0429  
                                    u1155 0381                                      u1420 013B  
                                    u1245 0321                                      u1165 0395  
                                    _LATA 010C                                      u1510 016A  
                                    _LATB 010D                                      u1255 0335  
                                    u1175 03A1                                      u1095 03F8  
                                    _LATC 010E                                      u1440 0145  
                                    u1265 0341                                      u1530 0174  
                                    u1460 014F                                      u1550 017E  
                                    u1480 0159                                      u1570 0188  
                                    u1590 0192                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUB 020D                                      _main 0020  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    fsr1l 0006                                      btemp 007E  
                                    start 000C                   __end_of_TMR0_Initialize 0494  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0006  
           __end_of_OSCILLATOR_Initialize 04E9                           __end_of___aldiv 0362  
                                   ?_main 0070                           __end_of___lldiv 03B4  
                                   _T2CON 001C                                     i1l197 000A  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E         __size_of_TMR0_SetInterruptHandler 0005  
                     ___lmul@multiplicand 0074                 ?_TMR0_SetInterruptHandler 0070  
                        __end_of_TMR0_ISR 04EF                            _WDT_Initialize 04F8  
                 __end_of_PWM3_Initialize 04CF                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 04FC                           __initialization 000D  
                            __end_of_main 01A9                   __end_of_TMR2_Initialize 04C7  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 002E  
                  __end_of_WDT_Initialize 04FC                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _BORCON 0116                                    _OSCCON 0099  
                                  _WDTCON 0097                                    ___lmul 03E5  
             __size_of_PWM3_LoadDutyValue 0016                                 ??___aldiv 007C  
                                  ___tmul 0414                                 ??___lldiv 0078  
                                  _msTick 0043                          ?_TMR0_Initialize 0070  
                        __end_of_setState 03E5                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 0073                     __end_of_TMR0_CallBack 04AE  
                 __end_of_TMR2_StartTimer 04FE  TMR0_SetInterruptHandler@InterruptHandler 0070  
                        ?_PWM3_Initialize 0070                         _SYSTEM_Initialize 04B7  
                 __end_of__initialization 001D                        ?_SYSTEM_Initialize 0070  
                        _fixedPointFactor 04F4                            __pcstackCOMMON 0070  
                 __size_of_timer0CallBack 0010                              __pidataBANK0 04AE  
                     ??_SYSTEM_Initialize 0073                                 ?_TMR0_ISR 0070  
                        ?_TMR2_Initialize 0070                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 04BF                                __pbssBANK0 0036  
                              __pmaintext 0020          __end_of_TMR0_SetInterruptHandler 04F4  
                                 ?___lmul 0070                                   ?___tmul 0070  
                              ??_TMR0_ISR 0070                                __pintentry 0004  
                          ___lmul@product 0078                   __size_of_ADC_Initialize 0008  
                   _setLedsForPositioning 01A9                                   _PWM3DCH 0618  
                                 _PWM3DCL 0617                                   _PWM3CON 0619  
                        ?_TMR2_StartTimer 0070                      _ADC_InterruptHandler 0045  
                               ?_setState 0070                                   ___aldiv 02E1  
                         __size_of___lmul 002F                           __size_of___tmul 0026  
                                 ___lldiv 0362                                   __ptext1 03B4  
                                 __ptext2 01A9                                   __ptext3 0414  
                                 __ptext4 03E5                                   __ptext5 0362  
                                 __ptext6 02E1                                   __ptext7 04FC  
                                 __ptext8 04B7                                   __ptext9 04F8  
                   _OSCILLATOR_Initialize 04E3                                 _T2CONbits 001C  
                        ___aldiv@dividend 0024                  ??_PIN_MANAGER_Initialize 0070  
              __size_of_SYSTEM_Initialize 0008                                   clrloop0 04DE  
                    end_of_initialization 001D                                   init_ram 04D7  
                                 initloop 04D8                                _lowerLimit 0036  
                         ___lldiv@divisor 0070                           ___lldiv@counter 007D  
                              ??_setState 0070                            _timer0CallBack 0494  
                        ___aldiv@quotient 002A                          ??_WDT_Initialize 0070  
                _TMR0_SetInterruptHandler 04EF                                 _PORTAbits 000C  
                  ?_setLedsForPositioning 0070                  __end_of_fixedPointFactor 04F8  
                              _upperLimit 004F                    __end_of_timer0CallBack 04A4  
              __end_of_PWM3_LoadDutyValue 0480                            __end_of___lmul 0414  
                          __end_of___tmul 043A                         __size_of_TMR0_ISR 0006  
                          _ADC_Initialize 04CF                    ?_OSCILLATOR_Initialize 0070  
                     start_initialization 000D                  __size_of_TMR0_Initialize 0014  
         __size_of_PIN_MANAGER_Initialize 0018                           ?_timer0CallBack 0070  
                __size_of_PWM3_Initialize 0008                                  ??___lmul 0078  
                                ??___tmul 0076                    __size_of_TMR0_CallBack 000A  
                  __end_of_ADC_Initialize 04D7                               __pdataBANK0 004A  
                          ___tmul@product 0076                                 ___latbits 0000  
                           __pcstackBANK0 0020                  __size_of_TMR2_Initialize 0008  
                        setState@newState 0072                              _currentState 0047  
                   _TMR0_InterruptHandler 0053                                 __pnvBANK0 0053  
                  _PIN_MANAGER_Initialize 043A                                  ?___aldiv 0020  
                       __size_of_setState 0031                                  ?___lldiv 0070  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0070  
                           _TMR0_CallBack 04A4                                 _msPressed 0041  
                        _adcValuePosition 003A                           ___aldiv@divisor 0020  
                       ??_TMR0_Initialize 0072                           ___aldiv@counter 0028  
                                _LATBbits 010D                                  _LATCbits 010E  
                               clear_ram0 04DD                  __size_of_TMR2_StartTimer 0002  
     __size_of_INTERRUPT_InterruptManager 0008                ??_TMR0_SetInterruptHandler 0072  
                                _PIR1bits 0011                                  _TMR0_ISR 04E9  
                 ??_setLedsForPositioning 0074                         ??_PWM3_Initialize 0070  
                              _ADCON0bits 009D                       ___tmul@multiplicand 0073  
                          ?_TMR0_CallBack 0070                         ___lmul@multiplier 0070  
                       ??_TMR2_Initialize 0070             setLedsForPositioning@adcValue 0070  
                       _ADC_GetConversion 0452                   ??_OSCILLATOR_Initialize 0070  
                      ?_ADC_GetConversion 0070                          __size_of___aldiv 0081  
                        __size_of___lldiv 0052                        _PWM3_LoadDutyValue 046A  
                     ??_ADC_GetConversion 0072                                  _doToggle 0048  
                                __ptext10 04BF                                  __ptext11 0480  
                                __ptext20 04E9                                  __ptext12 04EF  
                                __ptext21 04A4                                  __ptext13 04C7  
                                __ptext22 04FE                                  __ptext14 043A  
                                __ptext23 0494                                  __ptext15 04E3  
                                __ptext16 04CF                                  __ptext17 046A  
                                __ptext18 0452                       ?_PWM3_LoadDutyValue 0074  
                        ??_timer0CallBack 0070                             __size_of_main 0189  
    __end_of_TMR0_DefaultInterruptHandler 04FF     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 04FE                 __end_of_ADC_GetConversion 046A  
                                _setState 03B4                      ??_PWM3_LoadDutyValue 0076  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 000C                _INTERRUPT_InterruptManager 0004  
                              _INTCONbits 000B                           ??_TMR0_CallBack 0070  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                          _doButtonAction 0049                          ___lldiv@dividend 0074  
                 ?_PIN_MANAGER_Initialize 0070                          ??_ADC_Initialize 0070  
           ?_TMR0_DefaultInterruptHandler 0070                         ___tmul@multiplier 0070  
             PWM3_LoadDutyValue@dutyValue 0074                             __pstringtext1 04F4  
                              _OPTION_REG 0095                          ___lldiv@quotient 0079  
                         _TMR0_Initialize 0480                              ___aldiv@sign 0029  
          __end_of_PIN_MANAGER_Initialize 0452                __size_of_ADC_GetConversion 0018  
                         _PWM3_Initialize 04C7  
