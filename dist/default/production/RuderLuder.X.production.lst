

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 13 22:17:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1507
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1507 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  018E                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0197                     	;# 
   131  020C                     	;# 
   132  020D                     	;# 
   133  0391                     	;# 
   134  0392                     	;# 
   135  0393                     	;# 
   136  0394                     	;# 
   137  0395                     	;# 
   138  0396                     	;# 
   139  0498                     	;# 
   140  0498                     	;# 
   141  0499                     	;# 
   142  049A                     	;# 
   143  049B                     	;# 
   144  049B                     	;# 
   145  049C                     	;# 
   146  049D                     	;# 
   147  049E                     	;# 
   148  049F                     	;# 
   149  0611                     	;# 
   150  0612                     	;# 
   151  0613                     	;# 
   152  0613                     	;# 
   153  0614                     	;# 
   154  0615                     	;# 
   155  0616                     	;# 
   156  0616                     	;# 
   157  0617                     	;# 
   158  0618                     	;# 
   159  0619                     	;# 
   160  0619                     	;# 
   161  061A                     	;# 
   162  061B                     	;# 
   163  061C                     	;# 
   164  061C                     	;# 
   165  0691                     	;# 
   166  0692                     	;# 
   167  0693                     	;# 
   168  0694                     	;# 
   169  0695                     	;# 
   170  0F0F                     	;# 
   171  0F10                     	;# 
   172  0F11                     	;# 
   173  0F12                     	;# 
   174  0F13                     	;# 
   175  0F14                     	;# 
   176  0F15                     	;# 
   177  0F16                     	;# 
   178  0F17                     	;# 
   179  0F18                     	;# 
   180  0F19                     	;# 
   181  0F1A                     	;# 
   182  0F1B                     	;# 
   183  0F1C                     	;# 
   184  0F1D                     	;# 
   185  0F1E                     	;# 
   186  0F1F                     	;# 
   187  0FE3                     	;# 
   188  0FE4                     	;# 
   189  0FE5                     	;# 
   190  0FE6                     	;# 
   191  0FE7                     	;# 
   192  0FE8                     	;# 
   193  0FE9                     	;# 
   194  0FEA                     	;# 
   195  0FEB                     	;# 
   196  0FED                     	;# 
   197  0FEE                     	;# 
   198  0FEF                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  0011                     	;# 
   215  0012                     	;# 
   216  0013                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0095                     	;# 
   233  0096                     	;# 
   234  0097                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  0116                     	;# 
   247  0117                     	;# 
   248  011D                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  018E                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0194                     	;# 
   258  0195                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  020C                     	;# 
   262  020D                     	;# 
   263  0391                     	;# 
   264  0392                     	;# 
   265  0393                     	;# 
   266  0394                     	;# 
   267  0395                     	;# 
   268  0396                     	;# 
   269  0498                     	;# 
   270  0498                     	;# 
   271  0499                     	;# 
   272  049A                     	;# 
   273  049B                     	;# 
   274  049B                     	;# 
   275  049C                     	;# 
   276  049D                     	;# 
   277  049E                     	;# 
   278  049F                     	;# 
   279  0611                     	;# 
   280  0612                     	;# 
   281  0613                     	;# 
   282  0613                     	;# 
   283  0614                     	;# 
   284  0615                     	;# 
   285  0616                     	;# 
   286  0616                     	;# 
   287  0617                     	;# 
   288  0618                     	;# 
   289  0619                     	;# 
   290  0619                     	;# 
   291  061A                     	;# 
   292  061B                     	;# 
   293  061C                     	;# 
   294  061C                     	;# 
   295  0691                     	;# 
   296  0692                     	;# 
   297  0693                     	;# 
   298  0694                     	;# 
   299  0695                     	;# 
   300  0F0F                     	;# 
   301  0F10                     	;# 
   302  0F11                     	;# 
   303  0F12                     	;# 
   304  0F13                     	;# 
   305  0F14                     	;# 
   306  0F15                     	;# 
   307  0F16                     	;# 
   308  0F17                     	;# 
   309  0F18                     	;# 
   310  0F19                     	;# 
   311  0F1A                     	;# 
   312  0F1B                     	;# 
   313  0F1C                     	;# 
   314  0F1D                     	;# 
   315  0F1E                     	;# 
   316  0F1F                     	;# 
   317  0FE3                     	;# 
   318  0FE4                     	;# 
   319  0FE5                     	;# 
   320  0FE6                     	;# 
   321  0FE7                     	;# 
   322  0FE8                     	;# 
   323  0FE9                     	;# 
   324  0FEA                     	;# 
   325  0FEB                     	;# 
   326  0FED                     	;# 
   327  0FEE                     	;# 
   328  0FEF                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  0116                     	;# 
   377  0117                     	;# 
   378  011D                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  018E                     	;# 
   382  0191                     	;# 
   383  0191                     	;# 
   384  0192                     	;# 
   385  0193                     	;# 
   386  0193                     	;# 
   387  0194                     	;# 
   388  0195                     	;# 
   389  0196                     	;# 
   390  0197                     	;# 
   391  020C                     	;# 
   392  020D                     	;# 
   393  0391                     	;# 
   394  0392                     	;# 
   395  0393                     	;# 
   396  0394                     	;# 
   397  0395                     	;# 
   398  0396                     	;# 
   399  0498                     	;# 
   400  0498                     	;# 
   401  0499                     	;# 
   402  049A                     	;# 
   403  049B                     	;# 
   404  049B                     	;# 
   405  049C                     	;# 
   406  049D                     	;# 
   407  049E                     	;# 
   408  049F                     	;# 
   409  0611                     	;# 
   410  0612                     	;# 
   411  0613                     	;# 
   412  0613                     	;# 
   413  0614                     	;# 
   414  0615                     	;# 
   415  0616                     	;# 
   416  0616                     	;# 
   417  0617                     	;# 
   418  0618                     	;# 
   419  0619                     	;# 
   420  0619                     	;# 
   421  061A                     	;# 
   422  061B                     	;# 
   423  061C                     	;# 
   424  061C                     	;# 
   425  0691                     	;# 
   426  0692                     	;# 
   427  0693                     	;# 
   428  0694                     	;# 
   429  0695                     	;# 
   430  0F0F                     	;# 
   431  0F10                     	;# 
   432  0F11                     	;# 
   433  0F12                     	;# 
   434  0F13                     	;# 
   435  0F14                     	;# 
   436  0F15                     	;# 
   437  0F16                     	;# 
   438  0F17                     	;# 
   439  0F18                     	;# 
   440  0F19                     	;# 
   441  0F1A                     	;# 
   442  0F1B                     	;# 
   443  0F1C                     	;# 
   444  0F1D                     	;# 
   445  0F1E                     	;# 
   446  0F1F                     	;# 
   447  0FE3                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0095                     	;# 
   493  0096                     	;# 
   494  0097                     	;# 
   495  0099                     	;# 
   496  009A                     	;# 
   497  009B                     	;# 
   498  009B                     	;# 
   499  009C                     	;# 
   500  009D                     	;# 
   501  009E                     	;# 
   502  009F                     	;# 
   503  010C                     	;# 
   504  010D                     	;# 
   505  010E                     	;# 
   506  0116                     	;# 
   507  0117                     	;# 
   508  011D                     	;# 
   509  018C                     	;# 
   510  018D                     	;# 
   511  018E                     	;# 
   512  0191                     	;# 
   513  0191                     	;# 
   514  0192                     	;# 
   515  0193                     	;# 
   516  0193                     	;# 
   517  0194                     	;# 
   518  0195                     	;# 
   519  0196                     	;# 
   520  0197                     	;# 
   521  020C                     	;# 
   522  020D                     	;# 
   523  0391                     	;# 
   524  0392                     	;# 
   525  0393                     	;# 
   526  0394                     	;# 
   527  0395                     	;# 
   528  0396                     	;# 
   529  0498                     	;# 
   530  0498                     	;# 
   531  0499                     	;# 
   532  049A                     	;# 
   533  049B                     	;# 
   534  049B                     	;# 
   535  049C                     	;# 
   536  049D                     	;# 
   537  049E                     	;# 
   538  049F                     	;# 
   539  0611                     	;# 
   540  0612                     	;# 
   541  0613                     	;# 
   542  0613                     	;# 
   543  0614                     	;# 
   544  0615                     	;# 
   545  0616                     	;# 
   546  0616                     	;# 
   547  0617                     	;# 
   548  0618                     	;# 
   549  0619                     	;# 
   550  0619                     	;# 
   551  061A                     	;# 
   552  061B                     	;# 
   553  061C                     	;# 
   554  061C                     	;# 
   555  0691                     	;# 
   556  0692                     	;# 
   557  0693                     	;# 
   558  0694                     	;# 
   559  0695                     	;# 
   560  0F0F                     	;# 
   561  0F10                     	;# 
   562  0F11                     	;# 
   563  0F12                     	;# 
   564  0F13                     	;# 
   565  0F14                     	;# 
   566  0F15                     	;# 
   567  0F16                     	;# 
   568  0F17                     	;# 
   569  0F18                     	;# 
   570  0F19                     	;# 
   571  0F1A                     	;# 
   572  0F1B                     	;# 
   573  0F1C                     	;# 
   574  0F1D                     	;# 
   575  0F1E                     	;# 
   576  0F1F                     	;# 
   577  0FE3                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  0011                     	;# 
   605  0012                     	;# 
   606  0013                     	;# 
   607  0015                     	;# 
   608  0016                     	;# 
   609  0016                     	;# 
   610  0017                     	;# 
   611  0018                     	;# 
   612  0019                     	;# 
   613  001A                     	;# 
   614  001B                     	;# 
   615  001C                     	;# 
   616  008C                     	;# 
   617  008D                     	;# 
   618  008E                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0093                     	;# 
   622  0095                     	;# 
   623  0096                     	;# 
   624  0097                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009B                     	;# 
   629  009C                     	;# 
   630  009D                     	;# 
   631  009E                     	;# 
   632  009F                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  011D                     	;# 
   639  018C                     	;# 
   640  018D                     	;# 
   641  018E                     	;# 
   642  0191                     	;# 
   643  0191                     	;# 
   644  0192                     	;# 
   645  0193                     	;# 
   646  0193                     	;# 
   647  0194                     	;# 
   648  0195                     	;# 
   649  0196                     	;# 
   650  0197                     	;# 
   651  020C                     	;# 
   652  020D                     	;# 
   653  0391                     	;# 
   654  0392                     	;# 
   655  0393                     	;# 
   656  0394                     	;# 
   657  0395                     	;# 
   658  0396                     	;# 
   659  0498                     	;# 
   660  0498                     	;# 
   661  0499                     	;# 
   662  049A                     	;# 
   663  049B                     	;# 
   664  049B                     	;# 
   665  049C                     	;# 
   666  049D                     	;# 
   667  049E                     	;# 
   668  049F                     	;# 
   669  0611                     	;# 
   670  0612                     	;# 
   671  0613                     	;# 
   672  0613                     	;# 
   673  0614                     	;# 
   674  0615                     	;# 
   675  0616                     	;# 
   676  0616                     	;# 
   677  0617                     	;# 
   678  0618                     	;# 
   679  0619                     	;# 
   680  0619                     	;# 
   681  061A                     	;# 
   682  061B                     	;# 
   683  061C                     	;# 
   684  061C                     	;# 
   685  0691                     	;# 
   686  0692                     	;# 
   687  0693                     	;# 
   688  0694                     	;# 
   689  0695                     	;# 
   690  0F0F                     	;# 
   691  0F10                     	;# 
   692  0F11                     	;# 
   693  0F12                     	;# 
   694  0F13                     	;# 
   695  0F14                     	;# 
   696  0F15                     	;# 
   697  0F16                     	;# 
   698  0F17                     	;# 
   699  0F18                     	;# 
   700  0F19                     	;# 
   701  0F1A                     	;# 
   702  0F1B                     	;# 
   703  0F1C                     	;# 
   704  0F1D                     	;# 
   705  0F1E                     	;# 
   706  0F1F                     	;# 
   707  0FE3                     	;# 
   708  0FE4                     	;# 
   709  0FE5                     	;# 
   710  0FE6                     	;# 
   711  0FE7                     	;# 
   712  0FE8                     	;# 
   713  0FE9                     	;# 
   714  0FEA                     	;# 
   715  0FEB                     	;# 
   716  0FED                     	;# 
   717  0FEE                     	;# 
   718  0FEF                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0008                     	;# 
   728  0009                     	;# 
   729  000A                     	;# 
   730  000B                     	;# 
   731  000C                     	;# 
   732  000D                     	;# 
   733  000E                     	;# 
   734  0011                     	;# 
   735  0012                     	;# 
   736  0013                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0016                     	;# 
   740  0017                     	;# 
   741  0018                     	;# 
   742  0019                     	;# 
   743  001A                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  008C                     	;# 
   747  008D                     	;# 
   748  008E                     	;# 
   749  0091                     	;# 
   750  0092                     	;# 
   751  0093                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0097                     	;# 
   755  0099                     	;# 
   756  009A                     	;# 
   757  009B                     	;# 
   758  009B                     	;# 
   759  009C                     	;# 
   760  009D                     	;# 
   761  009E                     	;# 
   762  009F                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  010E                     	;# 
   766  0116                     	;# 
   767  0117                     	;# 
   768  011D                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0197                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  0391                     	;# 
   784  0392                     	;# 
   785  0393                     	;# 
   786  0394                     	;# 
   787  0395                     	;# 
   788  0396                     	;# 
   789  0498                     	;# 
   790  0498                     	;# 
   791  0499                     	;# 
   792  049A                     	;# 
   793  049B                     	;# 
   794  049B                     	;# 
   795  049C                     	;# 
   796  049D                     	;# 
   797  049E                     	;# 
   798  049F                     	;# 
   799  0611                     	;# 
   800  0612                     	;# 
   801  0613                     	;# 
   802  0613                     	;# 
   803  0614                     	;# 
   804  0615                     	;# 
   805  0616                     	;# 
   806  0616                     	;# 
   807  0617                     	;# 
   808  0618                     	;# 
   809  0619                     	;# 
   810  0619                     	;# 
   811  061A                     	;# 
   812  061B                     	;# 
   813  061C                     	;# 
   814  061C                     	;# 
   815  0691                     	;# 
   816  0692                     	;# 
   817  0693                     	;# 
   818  0694                     	;# 
   819  0695                     	;# 
   820  0F0F                     	;# 
   821  0F10                     	;# 
   822  0F11                     	;# 
   823  0F12                     	;# 
   824  0F13                     	;# 
   825  0F14                     	;# 
   826  0F15                     	;# 
   827  0F16                     	;# 
   828  0F17                     	;# 
   829  0F18                     	;# 
   830  0F19                     	;# 
   831  0F1A                     	;# 
   832  0F1B                     	;# 
   833  0F1C                     	;# 
   834  0F1D                     	;# 
   835  0F1E                     	;# 
   836  0F1F                     	;# 
   837  0FE3                     	;# 
   838  0FE4                     	;# 
   839  0FE5                     	;# 
   840  0FE6                     	;# 
   841  0FE7                     	;# 
   842  0FE8                     	;# 
   843  0FE9                     	;# 
   844  0FEA                     	;# 
   845  0FEB                     	;# 
   846  0FED                     	;# 
   847  0FEE                     	;# 
   848  0FEF                     	;# 
   849  0000                     	;# 
   850  0001                     	;# 
   851  0002                     	;# 
   852  0003                     	;# 
   853  0004                     	;# 
   854  0005                     	;# 
   855  0006                     	;# 
   856  0007                     	;# 
   857  0008                     	;# 
   858  0009                     	;# 
   859  000A                     	;# 
   860  000B                     	;# 
   861  000C                     	;# 
   862  000D                     	;# 
   863  000E                     	;# 
   864  0011                     	;# 
   865  0012                     	;# 
   866  0013                     	;# 
   867  0015                     	;# 
   868  0016                     	;# 
   869  0016                     	;# 
   870  0017                     	;# 
   871  0018                     	;# 
   872  0019                     	;# 
   873  001A                     	;# 
   874  001B                     	;# 
   875  001C                     	;# 
   876  008C                     	;# 
   877  008D                     	;# 
   878  008E                     	;# 
   879  0091                     	;# 
   880  0092                     	;# 
   881  0093                     	;# 
   882  0095                     	;# 
   883  0096                     	;# 
   884  0097                     	;# 
   885  0099                     	;# 
   886  009A                     	;# 
   887  009B                     	;# 
   888  009B                     	;# 
   889  009C                     	;# 
   890  009D                     	;# 
   891  009E                     	;# 
   892  009F                     	;# 
   893  010C                     	;# 
   894  010D                     	;# 
   895  010E                     	;# 
   896  0116                     	;# 
   897  0117                     	;# 
   898  011D                     	;# 
   899  018C                     	;# 
   900  018D                     	;# 
   901  018E                     	;# 
   902  0191                     	;# 
   903  0191                     	;# 
   904  0192                     	;# 
   905  0193                     	;# 
   906  0193                     	;# 
   907  0194                     	;# 
   908  0195                     	;# 
   909  0196                     	;# 
   910  0197                     	;# 
   911  020C                     	;# 
   912  020D                     	;# 
   913  0391                     	;# 
   914  0392                     	;# 
   915  0393                     	;# 
   916  0394                     	;# 
   917  0395                     	;# 
   918  0396                     	;# 
   919  0498                     	;# 
   920  0498                     	;# 
   921  0499                     	;# 
   922  049A                     	;# 
   923  049B                     	;# 
   924  049B                     	;# 
   925  049C                     	;# 
   926  049D                     	;# 
   927  049E                     	;# 
   928  049F                     	;# 
   929  0611                     	;# 
   930  0612                     	;# 
   931  0613                     	;# 
   932  0613                     	;# 
   933  0614                     	;# 
   934  0615                     	;# 
   935  0616                     	;# 
   936  0616                     	;# 
   937  0617                     	;# 
   938  0618                     	;# 
   939  0619                     	;# 
   940  0619                     	;# 
   941  061A                     	;# 
   942  061B                     	;# 
   943  061C                     	;# 
   944  061C                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  0695                     	;# 
   950  0F0F                     	;# 
   951  0F10                     	;# 
   952  0F11                     	;# 
   953  0F12                     	;# 
   954  0F13                     	;# 
   955  0F14                     	;# 
   956  0F15                     	;# 
   957  0F16                     	;# 
   958  0F17                     	;# 
   959  0F18                     	;# 
   960  0F19                     	;# 
   961  0F1A                     	;# 
   962  0F1B                     	;# 
   963  0F1C                     	;# 
   964  0F1D                     	;# 
   965  0F1E                     	;# 
   966  0F1F                     	;# 
   967  0FE3                     	;# 
   968  0FE4                     	;# 
   969  0FE5                     	;# 
   970  0FE6                     	;# 
   971  0FE7                     	;# 
   972  0FE8                     	;# 
   973  0FE9                     	;# 
   974  0FEA                     	;# 
   975  0FEB                     	;# 
   976  0FED                     	;# 
   977  0FEE                     	;# 
   978  0FEF                     	;# 
   979  0000                     	;# 
   980  0001                     	;# 
   981  0002                     	;# 
   982  0003                     	;# 
   983  0004                     	;# 
   984  0005                     	;# 
   985  0006                     	;# 
   986  0007                     	;# 
   987  0008                     	;# 
   988  0009                     	;# 
   989  000A                     	;# 
   990  000B                     	;# 
   991  000C                     	;# 
   992  000D                     	;# 
   993  000E                     	;# 
   994  0011                     	;# 
   995  0012                     	;# 
   996  0013                     	;# 
   997  0015                     	;# 
   998  0016                     	;# 
   999  0016                     	;# 
  1000  0017                     	;# 
  1001  0018                     	;# 
  1002  0019                     	;# 
  1003  001A                     	;# 
  1004  001B                     	;# 
  1005  001C                     	;# 
  1006  008C                     	;# 
  1007  008D                     	;# 
  1008  008E                     	;# 
  1009  0091                     	;# 
  1010  0092                     	;# 
  1011  0093                     	;# 
  1012  0095                     	;# 
  1013  0096                     	;# 
  1014  0097                     	;# 
  1015  0099                     	;# 
  1016  009A                     	;# 
  1017  009B                     	;# 
  1018  009B                     	;# 
  1019  009C                     	;# 
  1020  009D                     	;# 
  1021  009E                     	;# 
  1022  009F                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010E                     	;# 
  1026  0116                     	;# 
  1027  0117                     	;# 
  1028  011D                     	;# 
  1029  018C                     	;# 
  1030  018D                     	;# 
  1031  018E                     	;# 
  1032  0191                     	;# 
  1033  0191                     	;# 
  1034  0192                     	;# 
  1035  0193                     	;# 
  1036  0193                     	;# 
  1037  0194                     	;# 
  1038  0195                     	;# 
  1039  0196                     	;# 
  1040  0197                     	;# 
  1041  020C                     	;# 
  1042  020D                     	;# 
  1043  0391                     	;# 
  1044  0392                     	;# 
  1045  0393                     	;# 
  1046  0394                     	;# 
  1047  0395                     	;# 
  1048  0396                     	;# 
  1049  0498                     	;# 
  1050  0498                     	;# 
  1051  0499                     	;# 
  1052  049A                     	;# 
  1053  049B                     	;# 
  1054  049B                     	;# 
  1055  049C                     	;# 
  1056  049D                     	;# 
  1057  049E                     	;# 
  1058  049F                     	;# 
  1059  0611                     	;# 
  1060  0612                     	;# 
  1061  0613                     	;# 
  1062  0613                     	;# 
  1063  0614                     	;# 
  1064  0615                     	;# 
  1065  0616                     	;# 
  1066  0616                     	;# 
  1067  0617                     	;# 
  1068  0618                     	;# 
  1069  0619                     	;# 
  1070  0619                     	;# 
  1071  061A                     	;# 
  1072  061B                     	;# 
  1073  061C                     	;# 
  1074  061C                     	;# 
  1075  0691                     	;# 
  1076  0692                     	;# 
  1077  0693                     	;# 
  1078  0694                     	;# 
  1079  0695                     	;# 
  1080  0F0F                     	;# 
  1081  0F10                     	;# 
  1082  0F11                     	;# 
  1083  0F12                     	;# 
  1084  0F13                     	;# 
  1085  0F14                     	;# 
  1086  0F15                     	;# 
  1087  0F16                     	;# 
  1088  0F17                     	;# 
  1089  0F18                     	;# 
  1090  0F19                     	;# 
  1091  0F1A                     	;# 
  1092  0F1B                     	;# 
  1093  0F1C                     	;# 
  1094  0F1D                     	;# 
  1095  0F1E                     	;# 
  1096  0F1F                     	;# 
  1097  0FE3                     	;# 
  1098  0FE4                     	;# 
  1099  0FE5                     	;# 
  1100  0FE6                     	;# 
  1101  0FE7                     	;# 
  1102  0FE8                     	;# 
  1103  0FE9                     	;# 
  1104  0FEA                     	;# 
  1105  0FEB                     	;# 
  1106  0FED                     	;# 
  1107  0FEE                     	;# 
  1108  0FEF                     	;# 
  1109  0000                     	;# 
  1110  0001                     	;# 
  1111  0002                     	;# 
  1112  0003                     	;# 
  1113  0004                     	;# 
  1114  0005                     	;# 
  1115  0006                     	;# 
  1116  0007                     	;# 
  1117  0008                     	;# 
  1118  0009                     	;# 
  1119  000A                     	;# 
  1120  000B                     	;# 
  1121  000C                     	;# 
  1122  000D                     	;# 
  1123  000E                     	;# 
  1124  0011                     	;# 
  1125  0012                     	;# 
  1126  0013                     	;# 
  1127  0015                     	;# 
  1128  0016                     	;# 
  1129  0016                     	;# 
  1130  0017                     	;# 
  1131  0018                     	;# 
  1132  0019                     	;# 
  1133  001A                     	;# 
  1134  001B                     	;# 
  1135  001C                     	;# 
  1136  008C                     	;# 
  1137  008D                     	;# 
  1138  008E                     	;# 
  1139  0091                     	;# 
  1140  0092                     	;# 
  1141  0093                     	;# 
  1142  0095                     	;# 
  1143  0096                     	;# 
  1144  0097                     	;# 
  1145  0099                     	;# 
  1146  009A                     	;# 
  1147  009B                     	;# 
  1148  009B                     	;# 
  1149  009C                     	;# 
  1150  009D                     	;# 
  1151  009E                     	;# 
  1152  009F                     	;# 
  1153  010C                     	;# 
  1154  010D                     	;# 
  1155  010E                     	;# 
  1156  0116                     	;# 
  1157  0117                     	;# 
  1158  011D                     	;# 
  1159  018C                     	;# 
  1160  018D                     	;# 
  1161  018E                     	;# 
  1162  0191                     	;# 
  1163  0191                     	;# 
  1164  0192                     	;# 
  1165  0193                     	;# 
  1166  0193                     	;# 
  1167  0194                     	;# 
  1168  0195                     	;# 
  1169  0196                     	;# 
  1170  0197                     	;# 
  1171  020C                     	;# 
  1172  020D                     	;# 
  1173  0391                     	;# 
  1174  0392                     	;# 
  1175  0393                     	;# 
  1176  0394                     	;# 
  1177  0395                     	;# 
  1178  0396                     	;# 
  1179  0498                     	;# 
  1180  0498                     	;# 
  1181  0499                     	;# 
  1182  049A                     	;# 
  1183  049B                     	;# 
  1184  049B                     	;# 
  1185  049C                     	;# 
  1186  049D                     	;# 
  1187  049E                     	;# 
  1188  049F                     	;# 
  1189  0611                     	;# 
  1190  0612                     	;# 
  1191  0613                     	;# 
  1192  0613                     	;# 
  1193  0614                     	;# 
  1194  0615                     	;# 
  1195  0616                     	;# 
  1196  0616                     	;# 
  1197  0617                     	;# 
  1198  0618                     	;# 
  1199  0619                     	;# 
  1200  0619                     	;# 
  1201  061A                     	;# 
  1202  061B                     	;# 
  1203  061C                     	;# 
  1204  061C                     	;# 
  1205  0691                     	;# 
  1206  0692                     	;# 
  1207  0693                     	;# 
  1208  0694                     	;# 
  1209  0695                     	;# 
  1210  0F0F                     	;# 
  1211  0F10                     	;# 
  1212  0F11                     	;# 
  1213  0F12                     	;# 
  1214  0F13                     	;# 
  1215  0F14                     	;# 
  1216  0F15                     	;# 
  1217  0F16                     	;# 
  1218  0F17                     	;# 
  1219  0F18                     	;# 
  1220  0F19                     	;# 
  1221  0F1A                     	;# 
  1222  0F1B                     	;# 
  1223  0F1C                     	;# 
  1224  0F1D                     	;# 
  1225  0F1E                     	;# 
  1226  0F1F                     	;# 
  1227  0FE3                     	;# 
  1228  0FE4                     	;# 
  1229  0FE5                     	;# 
  1230  0FE6                     	;# 
  1231  0FE7                     	;# 
  1232  0FE8                     	;# 
  1233  0FE9                     	;# 
  1234  0FEA                     	;# 
  1235  0FEB                     	;# 
  1236  0FED                     	;# 
  1237  0FEE                     	;# 
  1238  0FEF                     	;# 
  1239                           
  1240                           	psect	idataCOMMON
  1241  0418                     __pidataCOMMON:	
  1242                           
  1243                           ;initializer for _ledBitMap
  1244  0418  34FF               	retlw	255
  1245  0419  3407               	retlw	7
  1246                           
  1247                           	psect	idataBANK0
  1248  041A                     __pidataBANK0:	
  1249                           
  1250                           ;initializer for main@channel
  1251  041A  340A               	retlw	10
  1252                           
  1253                           	psect	nvBANK0
  1254  002C                     __pnvBANK0:	
  1255  002C                     _TMR0_InterruptHandler:	
  1256  002C                     	ds	2
  1257  002E                     _timer0ReloadVal:	
  1258  002E                     	ds	1
  1259  000C                     _PORTAbits	set	12
  1260  000B                     _INTCONbits	set	11
  1261  0015                     _TMR0	set	21
  1262  001C                     _T2CONbits	set	28
  1263  001C                     _T2CON	set	28
  1264  0011                     _PIR1bits	set	17
  1265  001A                     _TMR2	set	26
  1266  001B                     _PR2	set	27
  1267  0095                     _OPTION_REG	set	149
  1268  0095                     _OPTION_REGbits	set	149
  1269  008E                     _TRISC	set	142
  1270  008D                     _TRISB	set	141
  1271  008C                     _TRISA	set	140
  1272  0097                     _WDTCON	set	151
  1273  0099                     _OSCCON	set	153
  1274  009D                     _ADCON0bits	set	157
  1275  009C                     _ADRESH	set	156
  1276  009B                     _ADRESL	set	155
  1277  009F                     _ADCON2	set	159
  1278  009E                     _ADCON1	set	158
  1279  009D                     _ADCON0	set	157
  1280  010D                     _LATBbits	set	269
  1281  010E                     _LATCbits	set	270
  1282  011D                     _APFCON	set	285
  1283  010E                     _LATC	set	270
  1284  010D                     _LATB	set	269
  1285  010C                     _LATA	set	268
  1286  0116                     _BORCON	set	278
  1287  0196                     _PMCON2	set	406
  1288  0193                     _PMDATL	set	403
  1289  0194                     _PMDATH	set	404
  1290  0195                     _PMCON1bits	set	405
  1291  0192                     _PMADRH	set	402
  1292  0191                     _PMADRL	set	401
  1293  018C                     _ANSELA	set	396
  1294  018D                     _ANSELB	set	397
  1295  018E                     _ANSELC	set	398
  1296  020C                     _WPUA	set	524
  1297  020D                     _WPUB	set	525
  1298  0617                     _PWM3DCL	set	1559
  1299  0618                     _PWM3DCH	set	1560
  1300  0619                     _PWM3CON	set	1561
  1301                           
  1302                           ; #config settings
  1303  0000                     
  1304                           	psect	cinit
  1305  0014                     start_initialization:	
  1306  0014                     __initialization:	
  1307                           
  1308                           ; Initialize objects allocated to COMMON
  1309  0014  3184  2418  3180   	fcall	__pidataCOMMON	;fetch initializer
  1310  0017  00FA               	movwf	__pdataCOMMON& (0+127)
  1311  0018  3184  2419  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  1312  001B  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  1313                           
  1314                           ; Initialize objects allocated to BANK0
  1315  001C  3184  241A  3180   	fcall	__pidataBANK0	;fetch initializer
  1316  001F  00B1               	movwf	__pdataBANK0& (0+127)
  1317                           
  1318                           ; Clear objects allocated to COMMON
  1319  0020  01F8               	clrf	__pbssCOMMON& (0+127)
  1320  0021  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1321                           
  1322                           ; Clear objects allocated to BANK0
  1323  0022  01A0               	clrf	__pbssBANK0& (0+127)
  1324  0023  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1325  0024  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1326  0025  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1327  0026  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1328  0027  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1329  0028  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1330  0029  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1331  002A  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  1332  002B  01A9               	clrf	(__pbssBANK0+9)& (0+127)
  1333  002C  01AA               	clrf	(__pbssBANK0+10)& (0+127)
  1334  002D  01AB               	clrf	(__pbssBANK0+11)& (0+127)
  1335  002E                     end_of_initialization:	
  1336                           ;End of C runtime variable initialization code
  1337                           
  1338  002E                     __end_of__initialization:	
  1339  002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1340  002F  0020               	movlb	0
  1341  0030  2831               	ljmp	_main	;jump to C main() function
  1342                           
  1343                           	psect	bssCOMMON
  1344  0078                     __pbssCOMMON:	
  1345  0078                     _ledBitIndex:	
  1346  0078                     	ds	1
  1347  0079                     _doToggle:	
  1348  0079                     	ds	1
  1349                           
  1350                           	psect	dataCOMMON
  1351  007A                     __pdataCOMMON:	
  1352  007A                     _ledBitMap:	
  1353  007A                     	ds	2
  1354                           
  1355                           	psect	bssBANK0
  1356  0020                     __pbssBANK0:	
  1357  0020                     _msTick:	
  1358  0020                     	ds	4
  1359  0024                     _i:	
  1360  0024                     	ds	4
  1361  0028                     _ADC_InterruptHandler:	
  1362  0028                     	ds	2
  1363  002A                     _currentState:	
  1364  002A                     	ds	1
  1365  002B                     _doButtonAction:	
  1366  002B                     	ds	1
  1367                           
  1368                           	psect	dataBANK0
  1369  0031                     __pdataBANK0:	
  1370  0031                     main@channel:	
  1371  0031                     	ds	1
  1372                           
  1373                           	psect	cstackCOMMON
  1374  0070                     __pcstackCOMMON:	
  1375  0070                     ?_PIN_MANAGER_Initialize:	
  1376  0070                     ?_OSCILLATOR_Initialize:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ?_WDT_Initialize:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_PWM3_Initialize:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?_TMR2_Initialize:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_TMR0_Initialize:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_TMR0_DefaultInterruptHandler:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ??_TMR0_DefaultInterruptHandler:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_TMR0_CallBack:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_ADC_Initialize:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_SYSTEM_Initialize:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_TMR2_StartTimer:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_TMR0_ISR:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_INTERRUPT_InterruptManager:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_timer0CallBack:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ??_timer0CallBack:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_setState:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_main:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427                           
  1428                           ; 1 bytes @ 0x0
  1429  0070                     	ds	2
  1430  0072                     ??_PIN_MANAGER_Initialize:	
  1431  0072                     ??_OSCILLATOR_Initialize:	
  1432                           ; 1 bytes @ 0x2
  1433                           
  1434  0072                     ??_WDT_Initialize:	
  1435                           ; 1 bytes @ 0x2
  1436                           
  1437  0072                     ??_PWM3_Initialize:	
  1438                           ; 1 bytes @ 0x2
  1439                           
  1440  0072                     ??_TMR2_Initialize:	
  1441                           ; 1 bytes @ 0x2
  1442                           
  1443  0072                     ?_TMR0_SetInterruptHandler:	
  1444                           ; 1 bytes @ 0x2
  1445                           
  1446  0072                     ??_TMR0_CallBack:	
  1447                           ; 1 bytes @ 0x2
  1448                           
  1449  0072                     ??_ADC_Initialize:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  0072                     ?_PWM3_LoadDutyValue:	
  1453                           ; 1 bytes @ 0x2
  1454                           
  1455  0072                     ??_TMR2_StartTimer:	
  1456                           ; 1 bytes @ 0x2
  1457                           
  1458  0072                     ??_TMR0_ISR:	
  1459                           ; 1 bytes @ 0x2
  1460                           
  1461  0072                     ??_INTERRUPT_InterruptManager:	
  1462                           ; 1 bytes @ 0x2
  1463                           
  1464  0072                     ??_setState:	
  1465                           ; 1 bytes @ 0x2
  1466                           
  1467  0072                     ?_ADC_GetConversion:	
  1468                           ; 1 bytes @ 0x2
  1469                           
  1470  0072                     PWM3_LoadDutyValue@dutyValue:	
  1471                           ; 2 bytes @ 0x2
  1472                           
  1473  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  1474                           ; 2 bytes @ 0x2
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0x2
  1478  0072                     	ds	2
  1479  0074                     ??_TMR0_Initialize:	
  1480  0074                     ??_TMR0_SetInterruptHandler:	
  1481                           ; 1 bytes @ 0x4
  1482                           
  1483  0074                     ??_ADC_GetConversion:	
  1484                           ; 1 bytes @ 0x4
  1485                           
  1486  0074                     ??_PWM3_LoadDutyValue:	
  1487                           ; 1 bytes @ 0x4
  1488                           
  1489  0074                     setState@newState:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492                           
  1493                           ; 1 bytes @ 0x4
  1494  0074                     	ds	1
  1495  0075                     ??_SYSTEM_Initialize:	
  1496  0075                     ADC_GetConversion@channel:	
  1497                           ; 1 bytes @ 0x5
  1498                           
  1499                           
  1500                           ; 1 bytes @ 0x5
  1501  0075                     	ds	1
  1502  0076                     ??_main:	
  1503                           
  1504                           ; 1 bytes @ 0x6
  1505  0076                     	ds	2
  1506                           
  1507                           	psect	cstackBANK0
  1508  002F                     __pcstackBANK0:	
  1509  002F                     main@adcValue:	
  1510                           
  1511                           ; 2 bytes @ 0x0
  1512  002F                     	ds	2
  1513                           
  1514                           	psect	maintext
  1515  0031                     __pmaintext:	
  1516 ;;
  1517 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1518 ;;
  1519 ;; *************** function _main *****************
  1520 ;; Defined at:
  1521 ;;		line 188 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  adcValue        2    0[BANK0 ] unsigned short 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : B1F/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1
  1535 ;;      Params:         0       0       0
  1536 ;;      Locals:         0       2       0
  1537 ;;      Temps:          2       0       0
  1538 ;;      Totals:         2       2       0
  1539 ;;Total ram usage:        4 bytes
  1540 ;; Hardware stack levels required when called:    7
  1541 ;; This function calls:
  1542 ;;		_ADC_GetConversion
  1543 ;;		_PWM3_LoadDutyValue
  1544 ;;		_SYSTEM_Initialize
  1545 ;;		_TMR0_SetInterruptHandler
  1546 ;;		_TMR2_StartTimer
  1547 ;;		_setState
  1548 ;; This function is called by:
  1549 ;;		Startup code after reset
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _main
  1555  0031                     _main:	
  1556  0031                     l2349:	
  1557                           ;incstack = 0
  1558                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1559                           
  1560                           
  1561                           ;main.c: 191:     SYSTEM_Initialize();
  1562  0031  3183  2395  3180   	fcall	_SYSTEM_Initialize
  1563  0034                     l2351:	
  1564                           
  1565                           ;main.c: 197:     (INTCONbits.GIE = 1);
  1566  0034  178B               	bsf	11,7	;volatile
  1567  0035                     l2353:	
  1568                           
  1569                           ;main.c: 208:     setState(STATE_NORMAL);
  1570  0035  3000               	movlw	0
  1571  0036  3183  2312  3180   	fcall	_setState
  1572  0039                     l2355:	
  1573                           
  1574                           ;main.c: 212:     TMR0_SetInterruptHandler(timer0CallBack);
  1575  0039  30A8               	movlw	low _timer0CallBack
  1576  003A  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1577  003B  3002               	movlw	high _timer0CallBack
  1578  003C  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1579  003D  3184  2405  3180   	fcall	_TMR0_SetInterruptHandler
  1580  0040                     l2357:	
  1581                           
  1582                           ;main.c: 214:     TMR2_StartTimer();
  1583  0040  3184  2415  3180   	fcall	_TMR2_StartTimer
  1584  0043                     l2359:	
  1585                           
  1586                           ;main.c: 224:     {;main.c: 225:         static adc_channel_t channel = channelBrightnes
      +                          s;;main.c: 228:         channel = (channel == channelRudder) ? channelBrightness : chann
      +                          elRudder;
  1587  0043  3003               	movlw	3
  1588  0044  0020               	movlb	0	; select bank0
  1589  0045  0631               	xorwf	main@channel,w
  1590  0046  1903               	btfsc	3,2
  1591  0047  2849               	goto	u1091
  1592  0048  284A               	goto	u1090
  1593  0049                     u1091:	
  1594  0049  284F               	goto	l2363
  1595  004A                     u1090:	
  1596  004A                     l2361:	
  1597  004A  3003               	movlw	3
  1598  004B  00F6               	movwf	??_main
  1599  004C  0876               	movf	??_main,w
  1600  004D  00B1               	movwf	main@channel
  1601  004E  2853               	goto	l2365
  1602  004F                     l2363:	
  1603  004F  300A               	movlw	10
  1604  0050  00F6               	movwf	??_main
  1605  0051  0876               	movf	??_main,w
  1606  0052  00B1               	movwf	main@channel
  1607  0053                     l2365:	
  1608                           
  1609                           ;main.c: 231:         uint16_t adcValue = ADC_GetConversion(channel);
  1610  0053  0831               	movf	main@channel,w
  1611  0054  3183  2363  3180   	fcall	_ADC_GetConversion
  1612  0057  0873               	movf	?_ADC_GetConversion+1,w
  1613  0058  0020               	movlb	0	; select bank0
  1614  0059  00B0               	movwf	main@adcValue+1
  1615  005A  0872               	movf	?_ADC_GetConversion,w
  1616  005B  00AF               	movwf	main@adcValue
  1617  005C                     l2367:	
  1618                           
  1619                           ;main.c: 236:         if(!PORTAbits.RA5 )
  1620  005C  1A8C               	btfsc	12,5	;volatile
  1621  005D  285F               	goto	u1101
  1622  005E  2860               	goto	u1100
  1623  005F                     u1101:	
  1624  005F  2865               	goto	l401
  1625  0060                     u1100:	
  1626  0060                     l2369:	
  1627                           
  1628                           ;main.c: 237:         {;main.c: 238:             setState(STATE_BLINK);
  1629  0060  3003               	movlw	3
  1630  0061  3183  2312  3180   	fcall	_setState
  1631                           
  1632                           ;main.c: 247:         }
  1633  0064  2867               	goto	l2371
  1634  0065                     l401:	
  1635                           ;main.c: 249:         {;main.c: 251:             do { LATCbits.LATC5 = 0; } while(0);
  1636                           
  1637  0065  0022               	movlb	2	; select bank2
  1638  0066  128E               	bcf	14,5	;volatile
  1639  0067                     l2371:	
  1640                           
  1641                           ;main.c: 256:         if(doButtonAction)
  1642  0067  0020               	movlb	0	; select bank0
  1643  0068  082B               	movf	_doButtonAction,w	;volatile
  1644  0069  1903               	btfsc	3,2
  1645  006A  286C               	goto	u1111
  1646  006B  286D               	goto	u1110
  1647  006C                     u1111:	
  1648  006C  2A91               	goto	l2449
  1649  006D                     u1110:	
  1650  006D                     l404:	
  1651                           ;main.c: 260:             {;main.c: 262:             }
  1652                           
  1653                           
  1654                           ;main.c: 259:             while(!PORTAbits.RA5)
  1655  006D  1E8C               	btfss	12,5	;volatile
  1656  006E  2870               	goto	u1121
  1657  006F  2871               	goto	u1120
  1658  0070                     u1121:	
  1659  0070  286D               	goto	l404
  1660  0071                     u1120:	
  1661  0071  2881               	goto	l2383
  1662  0072                     l2375:	
  1663                           
  1664                           ;main.c: 267:                     setState(STATE_TEACH_LEFT);
  1665  0072  3001               	movlw	1
  1666  0073  3183  2312  3180   	fcall	_setState
  1667                           
  1668                           ;main.c: 268:                     break;
  1669  0076  2894               	goto	l2385
  1670  0077                     l2377:	
  1671                           
  1672                           ;main.c: 271:                     setState(STATE_TEACH_RIGHT);
  1673  0077  3002               	movlw	2
  1674  0078  3183  2312  3180   	fcall	_setState
  1675                           
  1676                           ;main.c: 272:                     break;
  1677  007B  2894               	goto	l2385
  1678  007C                     l2379:	
  1679                           
  1680                           ;main.c: 275:                     setState(STATE_NORMAL);
  1681  007C  3000               	movlw	0
  1682  007D  3183  2312  3180   	fcall	_setState
  1683                           
  1684                           ;main.c: 276:                     break;
  1685  0080  2894               	goto	l2385
  1686  0081                     l2383:	
  1687  0081  082A               	movf	_currentState,w
  1688  0082  00F6               	movwf	??_main
  1689  0083  01F7               	clrf	??_main+1
  1690                           
  1691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1692                           ; Switch size 1, requested type "simple"
  1693                           ; Number of cases is 1, Range of values is 0 to 0
  1694                           ; switch strategies available:
  1695                           ; Name         Instructions Cycles
  1696                           ; simple_byte            4     3 (average)
  1697                           ; direct_byte            8     6 (fixed)
  1698                           ; jumptable            260     6 (fixed)
  1699                           ;	Chosen strategy is simple_byte
  1700  0084  0877               	movf	??_main+1,w
  1701  0085  3A00               	xorlw	0	; case 0
  1702  0086  1903               	skipnz
  1703  0087  2889               	goto	l2573
  1704  0088  2894               	goto	l2385
  1705  0089                     l2573:	
  1706                           
  1707                           ; Switch size 1, requested type "simple"
  1708                           ; Number of cases is 3, Range of values is 0 to 2
  1709                           ; switch strategies available:
  1710                           ; Name         Instructions Cycles
  1711                           ; simple_byte           10     6 (average)
  1712                           ; direct_byte           12     6 (fixed)
  1713                           ; jumptable            260     6 (fixed)
  1714                           ;	Chosen strategy is simple_byte
  1715  0089  0876               	movf	??_main,w
  1716  008A  3A00               	xorlw	0	; case 0
  1717  008B  1903               	skipnz
  1718  008C  2872               	goto	l2375
  1719  008D  3A01               	xorlw	1	; case 1
  1720  008E  1903               	skipnz
  1721  008F  2877               	goto	l2377
  1722  0090  3A03               	xorlw	3	; case 2
  1723  0091  1903               	skipnz
  1724  0092  287C               	goto	l2379
  1725  0093  2894               	goto	l2385
  1726  0094                     l2385:	
  1727                           
  1728                           ;main.c: 281:             doButtonAction = 0;
  1729  0094  0020               	movlb	0	; select bank0
  1730  0095  01AB               	clrf	_doButtonAction	;volatile
  1731  0096  2A91               	goto	l2449
  1732  0097                     l2387:	
  1733                           
  1734                           ;main.c: 289:                 if(doToggle)
  1735  0097  0879               	movf	_doToggle,w	;volatile
  1736  0098  1903               	btfsc	3,2
  1737  0099  289B               	goto	u1131
  1738  009A  289C               	goto	u1130
  1739  009B                     u1131:	
  1740  009B  2843               	goto	l2359
  1741  009C                     u1130:	
  1742  009C                     l415:	
  1743                           ;main.c: 290:                 {;main.c: 291:                     do { LATCbits.LATC0 = 1
      +                          ; } while(0);
  1744                           
  1745  009C  0022               	movlb	2	; select bank2
  1746  009D  140E               	bsf	14,0	;volatile
  1747  009E                     l417:	
  1748                           ;main.c: 292:                     do { LATCbits.LATC1 = 0; } while(0);
  1749                           
  1750  009E  108E               	bcf	14,1	;volatile
  1751  009F                     l419:	
  1752                           ;main.c: 293:                     do { LATCbits.LATC2 = 0; } while(0);
  1753                           
  1754  009F  110E               	bcf	14,2	;volatile
  1755  00A0                     l421:	
  1756                           ;main.c: 294:                     do { LATCbits.LATC3 = 0; } while(0);
  1757                           
  1758  00A0  118E               	bcf	14,3	;volatile
  1759  00A1                     l423:	
  1760                           ;main.c: 295:                     do { LATCbits.LATC4 = 0; } while(0);
  1761                           
  1762  00A1  120E               	bcf	14,4	;volatile
  1763  00A2                     l425:	
  1764                           ;main.c: 296:                     do { LATCbits.LATC5 = 1; } while(0);
  1765                           
  1766  00A2  168E               	bsf	14,5	;volatile
  1767  00A3                     l427:	
  1768                           ;main.c: 297:                     do { LATCbits.LATC6 = 0; } while(0);
  1769                           
  1770  00A3  130E               	bcf	14,6	;volatile
  1771  00A4                     l429:	
  1772                           ;main.c: 298:                     do { LATCbits.LATC7 = 0; } while(0);
  1773                           
  1774  00A4  138E               	bcf	14,7	;volatile
  1775  00A5                     l431:	
  1776                           ;main.c: 299:                     do { LATBbits.LATB5 = 0; } while(0);
  1777                           
  1778  00A5  128D               	bcf	13,5	;volatile
  1779  00A6                     l433:	
  1780                           ;main.c: 300:                     do { LATBbits.LATB6 = 0; } while(0);
  1781                           
  1782  00A6  130D               	bcf	13,6	;volatile
  1783  00A7                     l435:	
  1784                           ;main.c: 301:                     do { LATBbits.LATB7 = 0; } while(0);
  1785                           
  1786  00A7  138D               	bcf	13,7	;volatile
  1787  00A8  2843               	goto	l2359
  1788  00A9                     l2389:	
  1789                           
  1790                           ;main.c: 309:                 if(channel == channelBrightness)
  1791  00A9  300A               	movlw	10
  1792  00AA  0631               	xorwf	main@channel,w
  1793  00AB  1D03               	btfss	3,2
  1794  00AC  28AE               	goto	u1141
  1795  00AD  28AF               	goto	u1140
  1796  00AE                     u1141:	
  1797  00AE  28B7               	goto	l2393
  1798  00AF                     u1140:	
  1799  00AF                     l2391:	
  1800                           
  1801                           ;main.c: 310:                 {;main.c: 311:                     PWM3_LoadDutyValue(msTi
      +                          ck);
  1802  00AF  0821               	movf	_msTick+1,w	;volatile
  1803  00B0  00F3               	movwf	PWM3_LoadDutyValue@dutyValue+1
  1804  00B1  0820               	movf	_msTick,w	;volatile
  1805  00B2  00F2               	movwf	PWM3_LoadDutyValue@dutyValue
  1806  00B3  3183  23C1  3180   	fcall	_PWM3_LoadDutyValue
  1807                           
  1808                           ;main.c: 312:                 }
  1809  00B6  2843               	goto	l2359
  1810  00B7                     l2393:	
  1811                           
  1812                           ;main.c: 314:                 {;main.c: 317:                     i++;
  1813  00B7  3001               	movlw	1
  1814  00B8  07A4               	addwf	_i,f
  1815  00B9  3000               	movlw	0
  1816  00BA  3DA5               	addwfc	_i+1,f
  1817  00BB  3000               	movlw	0
  1818  00BC  3DA6               	addwfc	_i+2,f
  1819  00BD  3000               	movlw	0
  1820  00BE  3DA7               	addwfc	_i+3,f
  1821                           
  1822                           ;main.c: 326:                     if(adcValue < 54)
  1823  00BF  3000               	movlw	0
  1824  00C0  0230               	subwf	main@adcValue+1,w
  1825  00C1  3036               	movlw	54
  1826  00C2  1903               	skipnz
  1827  00C3  022F               	subwf	main@adcValue,w
  1828  00C4  1803               	skipnc
  1829  00C5  28C7               	goto	u1151
  1830  00C6  28C8               	goto	u1150
  1831  00C7                     u1151:	
  1832  00C7  28CD               	goto	l2397
  1833  00C8                     u1150:	
  1834  00C8                     l2395:	
  1835                           
  1836                           ;main.c: 327:                     {;main.c: 328:                         ledBitMap = 0b0
      +                          0000100001;
  1837  00C8  3021               	movlw	33
  1838  00C9  00FA               	movwf	_ledBitMap	;volatile
  1839  00CA  3000               	movlw	0
  1840  00CB  00FB               	movwf	_ledBitMap+1	;volatile
  1841                           
  1842                           ;main.c: 329:                     }
  1843  00CC  2843               	goto	l2359
  1844  00CD                     l2397:	
  1845  00CD  3000               	movlw	0
  1846  00CE  0230               	subwf	main@adcValue+1,w
  1847  00CF  306C               	movlw	108
  1848  00D0  1903               	skipnz
  1849  00D1  022F               	subwf	main@adcValue,w
  1850  00D2  1803               	skipnc
  1851  00D3  28D5               	goto	u1161
  1852  00D4  28D6               	goto	u1160
  1853  00D5                     u1161:	
  1854  00D5  28DB               	goto	l2401
  1855  00D6                     u1160:	
  1856  00D6                     l2399:	
  1857                           
  1858                           ;main.c: 331:                     {;main.c: 332:                         ledBitMap = 0b0
      +                          0000100011;
  1859  00D6  3023               	movlw	35
  1860  00D7  00FA               	movwf	_ledBitMap	;volatile
  1861  00D8  3000               	movlw	0
  1862  00D9  00FB               	movwf	_ledBitMap+1	;volatile
  1863                           
  1864                           ;main.c: 333:                     }
  1865  00DA  2843               	goto	l2359
  1866  00DB                     l2401:	
  1867  00DB  3000               	movlw	0
  1868  00DC  0230               	subwf	main@adcValue+1,w
  1869  00DD  30A2               	movlw	162
  1870  00DE  1903               	skipnz
  1871  00DF  022F               	subwf	main@adcValue,w
  1872  00E0  1803               	skipnc
  1873  00E1  28E3               	goto	u1171
  1874  00E2  28E4               	goto	u1170
  1875  00E3                     u1171:	
  1876  00E3  28E5               	goto	l2405
  1877  00E4                     u1170:	
  1878  00E4  28D6               	goto	l2399
  1879  00E5                     l2405:	
  1880  00E5  3000               	movlw	0
  1881  00E6  0230               	subwf	main@adcValue+1,w
  1882  00E7  30D7               	movlw	215
  1883  00E8  1903               	skipnz
  1884  00E9  022F               	subwf	main@adcValue,w
  1885  00EA  1803               	skipnc
  1886  00EB  28ED               	goto	u1181
  1887  00EC  28EE               	goto	u1180
  1888  00ED                     u1181:	
  1889  00ED  28FB               	goto	l2407
  1890  00EE                     u1180:	
  1891  00EE                     l448:	
  1892                           ;main.c: 339:                     {;main.c: 340:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  1893                           
  1894  00EE  0022               	movlb	2	; select bank2
  1895  00EF  100E               	bcf	14,0	;volatile
  1896  00F0                     l450:	
  1897                           ;main.c: 341:                         do { LATCbits.LATC1 = 1; } while(0);
  1898                           
  1899  00F0  148E               	bsf	14,1	;volatile
  1900  00F1                     l452:	
  1901                           ;main.c: 342:                         do { LATCbits.LATC2 = 1; } while(0);
  1902                           
  1903  00F1  150E               	bsf	14,2	;volatile
  1904  00F2                     l454:	
  1905                           ;main.c: 343:                         do { LATCbits.LATC3 = 0; } while(0);
  1906                           
  1907  00F2  118E               	bcf	14,3	;volatile
  1908  00F3                     l456:	
  1909                           ;main.c: 344:                         do { LATCbits.LATC4 = 0; } while(0);
  1910                           
  1911  00F3  120E               	bcf	14,4	;volatile
  1912  00F4                     l458:	
  1913                           ;main.c: 345:                         do { LATCbits.LATC5 = 1; } while(0);
  1914                           
  1915  00F4  168E               	bsf	14,5	;volatile
  1916  00F5                     l460:	
  1917                           ;main.c: 346:                         do { LATCbits.LATC6 = 0; } while(0);
  1918                           
  1919  00F5  130E               	bcf	14,6	;volatile
  1920  00F6                     l462:	
  1921                           ;main.c: 347:                         do { LATCbits.LATC7 = 0; } while(0);
  1922                           
  1923  00F6  138E               	bcf	14,7	;volatile
  1924  00F7                     l464:	
  1925                           ;main.c: 348:                         do { LATBbits.LATB5 = 0; } while(0);
  1926                           
  1927  00F7  128D               	bcf	13,5	;volatile
  1928  00F8                     l466:	
  1929                           ;main.c: 349:                         do { LATBbits.LATB6 = 0; } while(0);
  1930                           
  1931  00F8  130D               	bcf	13,6	;volatile
  1932  00F9                     l468:	
  1933                           ;main.c: 350:                         do { LATBbits.LATB7 = 0; } while(0);
  1934                           
  1935  00F9  138D               	bcf	13,7	;volatile
  1936  00FA  2843               	goto	l2359
  1937  00FB                     l2407:	
  1938  00FB  3001               	movlw	1
  1939  00FC  0230               	subwf	main@adcValue+1,w
  1940  00FD  300D               	movlw	13
  1941  00FE  1903               	skipnz
  1942  00FF  022F               	subwf	main@adcValue,w
  1943  0100  1803               	skipnc
  1944  0101  2903               	goto	u1191
  1945  0102  2904               	goto	u1190
  1946  0103                     u1191:	
  1947  0103  2911               	goto	l2409
  1948  0104                     u1190:	
  1949  0104                     l472:	
  1950                           ;main.c: 353:                     {;main.c: 354:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  1951                           
  1952  0104  0022               	movlb	2	; select bank2
  1953  0105  100E               	bcf	14,0	;volatile
  1954  0106                     l474:	
  1955                           ;main.c: 355:                         do { LATCbits.LATC1 = 0; } while(0);
  1956                           
  1957  0106  108E               	bcf	14,1	;volatile
  1958  0107                     l476:	
  1959                           ;main.c: 356:                         do { LATCbits.LATC2 = 1; } while(0);
  1960                           
  1961  0107  150E               	bsf	14,2	;volatile
  1962  0108                     l478:	
  1963                           ;main.c: 357:                         do { LATCbits.LATC3 = 0; } while(0);
  1964                           
  1965  0108  118E               	bcf	14,3	;volatile
  1966  0109                     l480:	
  1967                           ;main.c: 358:                         do { LATCbits.LATC4 = 0; } while(0);
  1968                           
  1969  0109  120E               	bcf	14,4	;volatile
  1970  010A                     l482:	
  1971                           ;main.c: 359:                         do { LATCbits.LATC5 = 1; } while(0);
  1972                           
  1973  010A  168E               	bsf	14,5	;volatile
  1974  010B                     l484:	
  1975                           ;main.c: 360:                         do { LATCbits.LATC6 = 0; } while(0);
  1976                           
  1977  010B  130E               	bcf	14,6	;volatile
  1978  010C                     l486:	
  1979                           ;main.c: 361:                         do { LATCbits.LATC7 = 0; } while(0);
  1980                           
  1981  010C  138E               	bcf	14,7	;volatile
  1982  010D                     l488:	
  1983                           ;main.c: 362:                         do { LATBbits.LATB5 = 0; } while(0);
  1984                           
  1985  010D  128D               	bcf	13,5	;volatile
  1986  010E                     l490:	
  1987                           ;main.c: 363:                         do { LATBbits.LATB6 = 0; } while(0);
  1988                           
  1989  010E  130D               	bcf	13,6	;volatile
  1990  010F                     l492:	
  1991                           ;main.c: 364:                         do { LATBbits.LATB7 = 0; } while(0);
  1992                           
  1993  010F  138D               	bcf	13,7	;volatile
  1994  0110  2843               	goto	l2359
  1995  0111                     l2409:	
  1996  0111  3001               	movlw	1
  1997  0112  0230               	subwf	main@adcValue+1,w
  1998  0113  3043               	movlw	67
  1999  0114  1903               	skipnz
  2000  0115  022F               	subwf	main@adcValue,w
  2001  0116  1803               	skipnc
  2002  0117  2919               	goto	u1201
  2003  0118  291A               	goto	u1200
  2004  0119                     u1201:	
  2005  0119  2927               	goto	l2411
  2006  011A                     u1200:	
  2007  011A                     l496:	
  2008                           ;main.c: 367:                     {;main.c: 368:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2009                           
  2010  011A  0022               	movlb	2	; select bank2
  2011  011B  100E               	bcf	14,0	;volatile
  2012  011C                     l498:	
  2013                           ;main.c: 369:                         do { LATCbits.LATC1 = 0; } while(0);
  2014                           
  2015  011C  108E               	bcf	14,1	;volatile
  2016  011D                     l500:	
  2017                           ;main.c: 370:                         do { LATCbits.LATC2 = 1; } while(0);
  2018                           
  2019  011D  150E               	bsf	14,2	;volatile
  2020  011E                     l502:	
  2021                           ;main.c: 371:                         do { LATCbits.LATC3 = 1; } while(0);
  2022                           
  2023  011E  158E               	bsf	14,3	;volatile
  2024  011F                     l504:	
  2025                           ;main.c: 372:                         do { LATCbits.LATC4 = 0; } while(0);
  2026                           
  2027  011F  120E               	bcf	14,4	;volatile
  2028  0120                     l506:	
  2029                           ;main.c: 373:                         do { LATCbits.LATC5 = 1; } while(0);
  2030                           
  2031  0120  168E               	bsf	14,5	;volatile
  2032  0121                     l508:	
  2033                           ;main.c: 374:                         do { LATCbits.LATC6 = 0; } while(0);
  2034                           
  2035  0121  130E               	bcf	14,6	;volatile
  2036  0122                     l510:	
  2037                           ;main.c: 375:                         do { LATCbits.LATC7 = 0; } while(0);
  2038                           
  2039  0122  138E               	bcf	14,7	;volatile
  2040  0123                     l512:	
  2041                           ;main.c: 376:                         do { LATBbits.LATB5 = 0; } while(0);
  2042                           
  2043  0123  128D               	bcf	13,5	;volatile
  2044  0124                     l514:	
  2045                           ;main.c: 377:                         do { LATBbits.LATB6 = 0; } while(0);
  2046                           
  2047  0124  130D               	bcf	13,6	;volatile
  2048  0125                     l516:	
  2049                           ;main.c: 378:                         do { LATBbits.LATB7 = 0; } while(0);
  2050                           
  2051  0125  138D               	bcf	13,7	;volatile
  2052  0126  2843               	goto	l2359
  2053  0127                     l2411:	
  2054  0127  3001               	movlw	1
  2055  0128  0230               	subwf	main@adcValue+1,w
  2056  0129  3079               	movlw	121
  2057  012A  1903               	skipnz
  2058  012B  022F               	subwf	main@adcValue,w
  2059  012C  1803               	skipnc
  2060  012D  292F               	goto	u1211
  2061  012E  2930               	goto	u1210
  2062  012F                     u1211:	
  2063  012F  293D               	goto	l2413
  2064  0130                     u1210:	
  2065  0130                     l520:	
  2066                           ;main.c: 381:                     {;main.c: 382:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2067                           
  2068  0130  0022               	movlb	2	; select bank2
  2069  0131  100E               	bcf	14,0	;volatile
  2070  0132                     l522:	
  2071                           ;main.c: 383:                         do { LATCbits.LATC1 = 0; } while(0);
  2072                           
  2073  0132  108E               	bcf	14,1	;volatile
  2074  0133                     l524:	
  2075                           ;main.c: 384:                         do { LATCbits.LATC2 = 0; } while(0);
  2076                           
  2077  0133  110E               	bcf	14,2	;volatile
  2078  0134                     l526:	
  2079                           ;main.c: 385:                         do { LATCbits.LATC3 = 1; } while(0);
  2080                           
  2081  0134  158E               	bsf	14,3	;volatile
  2082  0135                     l528:	
  2083                           ;main.c: 386:                         do { LATCbits.LATC4 = 0; } while(0);
  2084                           
  2085  0135  120E               	bcf	14,4	;volatile
  2086  0136                     l530:	
  2087                           ;main.c: 387:                         do { LATCbits.LATC5 = 1; } while(0);
  2088                           
  2089  0136  168E               	bsf	14,5	;volatile
  2090  0137                     l532:	
  2091                           ;main.c: 388:                         do { LATCbits.LATC6 = 0; } while(0);
  2092                           
  2093  0137  130E               	bcf	14,6	;volatile
  2094  0138                     l534:	
  2095                           ;main.c: 389:                         do { LATCbits.LATC7 = 0; } while(0);
  2096                           
  2097  0138  138E               	bcf	14,7	;volatile
  2098  0139                     l536:	
  2099                           ;main.c: 390:                         do { LATBbits.LATB5 = 0; } while(0);
  2100                           
  2101  0139  128D               	bcf	13,5	;volatile
  2102  013A                     l538:	
  2103                           ;main.c: 391:                         do { LATBbits.LATB6 = 0; } while(0);
  2104                           
  2105  013A  130D               	bcf	13,6	;volatile
  2106  013B                     l540:	
  2107                           ;main.c: 392:                         do { LATBbits.LATB7 = 0; } while(0);
  2108                           
  2109  013B  138D               	bcf	13,7	;volatile
  2110  013C  2843               	goto	l2359
  2111  013D                     l2413:	
  2112  013D  3001               	movlw	1
  2113  013E  0230               	subwf	main@adcValue+1,w
  2114  013F  30AF               	movlw	175
  2115  0140  1903               	skipnz
  2116  0141  022F               	subwf	main@adcValue,w
  2117  0142  1803               	skipnc
  2118  0143  2945               	goto	u1221
  2119  0144  2946               	goto	u1220
  2120  0145                     u1221:	
  2121  0145  2953               	goto	l2415
  2122  0146                     u1220:	
  2123  0146                     l544:	
  2124                           ;main.c: 395:                     {;main.c: 396:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2125                           
  2126  0146  0022               	movlb	2	; select bank2
  2127  0147  100E               	bcf	14,0	;volatile
  2128  0148                     l546:	
  2129                           ;main.c: 397:                         do { LATCbits.LATC1 = 0; } while(0);
  2130                           
  2131  0148  108E               	bcf	14,1	;volatile
  2132  0149                     l548:	
  2133                           ;main.c: 398:                         do { LATCbits.LATC2 = 0; } while(0);
  2134                           
  2135  0149  110E               	bcf	14,2	;volatile
  2136  014A                     l550:	
  2137                           ;main.c: 399:                         do { LATCbits.LATC3 = 1; } while(0);
  2138                           
  2139  014A  158E               	bsf	14,3	;volatile
  2140  014B                     l552:	
  2141                           ;main.c: 400:                         do { LATCbits.LATC4 = 1; } while(0);
  2142                           
  2143  014B  160E               	bsf	14,4	;volatile
  2144  014C                     l554:	
  2145                           ;main.c: 401:                         do { LATCbits.LATC5 = 1; } while(0);
  2146                           
  2147  014C  168E               	bsf	14,5	;volatile
  2148  014D                     l556:	
  2149                           ;main.c: 402:                         do { LATCbits.LATC6 = 0; } while(0);
  2150                           
  2151  014D  130E               	bcf	14,6	;volatile
  2152  014E                     l558:	
  2153                           ;main.c: 403:                         do { LATCbits.LATC7 = 0; } while(0);
  2154                           
  2155  014E  138E               	bcf	14,7	;volatile
  2156  014F                     l560:	
  2157                           ;main.c: 404:                         do { LATBbits.LATB5 = 0; } while(0);
  2158                           
  2159  014F  128D               	bcf	13,5	;volatile
  2160  0150                     l562:	
  2161                           ;main.c: 405:                         do { LATBbits.LATB6 = 0; } while(0);
  2162                           
  2163  0150  130D               	bcf	13,6	;volatile
  2164  0151                     l564:	
  2165                           ;main.c: 406:                         do { LATBbits.LATB7 = 0; } while(0);
  2166                           
  2167  0151  138D               	bcf	13,7	;volatile
  2168  0152  2843               	goto	l2359
  2169  0153                     l2415:	
  2170  0153  3001               	movlw	1
  2171  0154  0230               	subwf	main@adcValue+1,w
  2172  0155  30E5               	movlw	229
  2173  0156  1903               	skipnz
  2174  0157  022F               	subwf	main@adcValue,w
  2175  0158  1803               	skipnc
  2176  0159  295B               	goto	u1231
  2177  015A  295C               	goto	u1230
  2178  015B                     u1231:	
  2179  015B  2969               	goto	l2417
  2180  015C                     u1230:	
  2181  015C                     l568:	
  2182                           ;main.c: 409:                     {;main.c: 410:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2183                           
  2184  015C  0022               	movlb	2	; select bank2
  2185  015D  100E               	bcf	14,0	;volatile
  2186  015E                     l570:	
  2187                           ;main.c: 411:                         do { LATCbits.LATC1 = 0; } while(0);
  2188                           
  2189  015E  108E               	bcf	14,1	;volatile
  2190  015F                     l572:	
  2191                           ;main.c: 412:                         do { LATCbits.LATC2 = 0; } while(0);
  2192                           
  2193  015F  110E               	bcf	14,2	;volatile
  2194  0160                     l574:	
  2195                           ;main.c: 413:                         do { LATCbits.LATC3 = 0; } while(0);
  2196                           
  2197  0160  118E               	bcf	14,3	;volatile
  2198  0161                     l576:	
  2199                           ;main.c: 414:                         do { LATCbits.LATC4 = 1; } while(0);
  2200                           
  2201  0161  160E               	bsf	14,4	;volatile
  2202  0162                     l578:	
  2203                           ;main.c: 415:                         do { LATCbits.LATC5 = 1; } while(0);
  2204                           
  2205  0162  168E               	bsf	14,5	;volatile
  2206  0163                     l580:	
  2207                           ;main.c: 416:                         do { LATCbits.LATC6 = 0; } while(0);
  2208                           
  2209  0163  130E               	bcf	14,6	;volatile
  2210  0164                     l582:	
  2211                           ;main.c: 417:                         do { LATCbits.LATC7 = 0; } while(0);
  2212                           
  2213  0164  138E               	bcf	14,7	;volatile
  2214  0165                     l584:	
  2215                           ;main.c: 418:                         do { LATBbits.LATB5 = 0; } while(0);
  2216                           
  2217  0165  128D               	bcf	13,5	;volatile
  2218  0166                     l586:	
  2219                           ;main.c: 419:                         do { LATBbits.LATB6 = 0; } while(0);
  2220                           
  2221  0166  130D               	bcf	13,6	;volatile
  2222  0167                     l588:	
  2223                           ;main.c: 420:                         do { LATBbits.LATB7 = 0; } while(0);
  2224                           
  2225  0167  138D               	bcf	13,7	;volatile
  2226  0168  2843               	goto	l2359
  2227  0169                     l2417:	
  2228  0169  3002               	movlw	2
  2229  016A  0230               	subwf	main@adcValue+1,w
  2230  016B  301A               	movlw	26
  2231  016C  1903               	skipnz
  2232  016D  022F               	subwf	main@adcValue,w
  2233  016E  1803               	skipnc
  2234  016F  2971               	goto	u1241
  2235  0170  2972               	goto	u1240
  2236  0171                     u1241:	
  2237  0171  297F               	goto	l2419
  2238  0172                     u1240:	
  2239  0172                     l592:	
  2240                           ;main.c: 423:                     {;main.c: 424:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2241                           
  2242  0172  0022               	movlb	2	; select bank2
  2243  0173  100E               	bcf	14,0	;volatile
  2244  0174                     l594:	
  2245                           ;main.c: 425:                         do { LATCbits.LATC1 = 0; } while(0);
  2246                           
  2247  0174  108E               	bcf	14,1	;volatile
  2248  0175                     l596:	
  2249                           ;main.c: 426:                         do { LATCbits.LATC2 = 0; } while(0);
  2250                           
  2251  0175  110E               	bcf	14,2	;volatile
  2252  0176                     l598:	
  2253                           ;main.c: 427:                         do { LATCbits.LATC3 = 0; } while(0);
  2254                           
  2255  0176  118E               	bcf	14,3	;volatile
  2256  0177                     l600:	
  2257                           ;main.c: 428:                         do { LATCbits.LATC4 = 0; } while(0);
  2258                           
  2259  0177  120E               	bcf	14,4	;volatile
  2260  0178                     l602:	
  2261                           ;main.c: 429:                         do { LATCbits.LATC5 = 1; } while(0);
  2262                           
  2263  0178  168E               	bsf	14,5	;volatile
  2264  0179                     l604:	
  2265                           ;main.c: 430:                         do { LATCbits.LATC6 = 0; } while(0);
  2266                           
  2267  0179  130E               	bcf	14,6	;volatile
  2268  017A                     l606:	
  2269                           ;main.c: 431:                         do { LATCbits.LATC7 = 0; } while(0);
  2270                           
  2271  017A  138E               	bcf	14,7	;volatile
  2272  017B                     l608:	
  2273                           ;main.c: 432:                         do { LATBbits.LATB5 = 0; } while(0);
  2274                           
  2275  017B  128D               	bcf	13,5	;volatile
  2276  017C                     l610:	
  2277                           ;main.c: 433:                         do { LATBbits.LATB6 = 0; } while(0);
  2278                           
  2279  017C  130D               	bcf	13,6	;volatile
  2280  017D                     l612:	
  2281                           ;main.c: 434:                         do { LATBbits.LATB7 = 0; } while(0);
  2282                           
  2283  017D  138D               	bcf	13,7	;volatile
  2284  017E  2843               	goto	l2359
  2285  017F                     l2419:	
  2286  017F  3002               	movlw	2
  2287  0180  0230               	subwf	main@adcValue+1,w
  2288  0181  3050               	movlw	80
  2289  0182  1903               	skipnz
  2290  0183  022F               	subwf	main@adcValue,w
  2291  0184  1803               	skipnc
  2292  0185  2987               	goto	u1251
  2293  0186  2988               	goto	u1250
  2294  0187                     u1251:	
  2295  0187  2995               	goto	l2421
  2296  0188                     u1250:	
  2297  0188                     l616:	
  2298                           ;main.c: 437:                     {;main.c: 438:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2299                           
  2300  0188  0022               	movlb	2	; select bank2
  2301  0189  100E               	bcf	14,0	;volatile
  2302  018A                     l618:	
  2303                           ;main.c: 439:                         do { LATCbits.LATC1 = 0; } while(0);
  2304                           
  2305  018A  108E               	bcf	14,1	;volatile
  2306  018B                     l620:	
  2307                           ;main.c: 440:                         do { LATCbits.LATC2 = 0; } while(0);
  2308                           
  2309  018B  110E               	bcf	14,2	;volatile
  2310  018C                     l622:	
  2311                           ;main.c: 441:                         do { LATCbits.LATC3 = 0; } while(0);
  2312                           
  2313  018C  118E               	bcf	14,3	;volatile
  2314  018D                     l624:	
  2315                           ;main.c: 442:                         do { LATCbits.LATC4 = 0; } while(0);
  2316                           
  2317  018D  120E               	bcf	14,4	;volatile
  2318  018E                     l626:	
  2319                           ;main.c: 443:                         do { LATCbits.LATC5 = 1; } while(0);
  2320                           
  2321  018E  168E               	bsf	14,5	;volatile
  2322  018F                     l628:	
  2323                           ;main.c: 444:                         do { LATCbits.LATC6 = 1; } while(0);
  2324                           
  2325  018F  170E               	bsf	14,6	;volatile
  2326  0190                     l630:	
  2327                           ;main.c: 445:                         do { LATCbits.LATC7 = 0; } while(0);
  2328                           
  2329  0190  138E               	bcf	14,7	;volatile
  2330  0191                     l632:	
  2331                           ;main.c: 446:                         do { LATBbits.LATB5 = 0; } while(0);
  2332                           
  2333  0191  128D               	bcf	13,5	;volatile
  2334  0192                     l634:	
  2335                           ;main.c: 447:                         do { LATBbits.LATB6 = 0; } while(0);
  2336                           
  2337  0192  130D               	bcf	13,6	;volatile
  2338  0193                     l636:	
  2339                           ;main.c: 448:                         do { LATBbits.LATB7 = 0; } while(0);
  2340                           
  2341  0193  138D               	bcf	13,7	;volatile
  2342  0194  2843               	goto	l2359
  2343  0195                     l2421:	
  2344  0195  3002               	movlw	2
  2345  0196  0230               	subwf	main@adcValue+1,w
  2346  0197  3086               	movlw	134
  2347  0198  1903               	skipnz
  2348  0199  022F               	subwf	main@adcValue,w
  2349  019A  1803               	skipnc
  2350  019B  299D               	goto	u1261
  2351  019C  299E               	goto	u1260
  2352  019D                     u1261:	
  2353  019D  29AB               	goto	l2423
  2354  019E                     u1260:	
  2355  019E                     l640:	
  2356                           ;main.c: 451:                     {;main.c: 452:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2357                           
  2358  019E  0022               	movlb	2	; select bank2
  2359  019F  100E               	bcf	14,0	;volatile
  2360  01A0                     l642:	
  2361                           ;main.c: 453:                         do { LATCbits.LATC1 = 0; } while(0);
  2362                           
  2363  01A0  108E               	bcf	14,1	;volatile
  2364  01A1                     l644:	
  2365                           ;main.c: 454:                         do { LATCbits.LATC2 = 0; } while(0);
  2366                           
  2367  01A1  110E               	bcf	14,2	;volatile
  2368  01A2                     l646:	
  2369                           ;main.c: 455:                         do { LATCbits.LATC3 = 0; } while(0);
  2370                           
  2371  01A2  118E               	bcf	14,3	;volatile
  2372  01A3                     l648:	
  2373                           ;main.c: 456:                         do { LATCbits.LATC4 = 0; } while(0);
  2374                           
  2375  01A3  120E               	bcf	14,4	;volatile
  2376  01A4                     l650:	
  2377                           ;main.c: 457:                         do { LATCbits.LATC5 = 1; } while(0);
  2378                           
  2379  01A4  168E               	bsf	14,5	;volatile
  2380  01A5                     l652:	
  2381                           ;main.c: 458:                         do { LATCbits.LATC6 = 1; } while(0);
  2382                           
  2383  01A5  170E               	bsf	14,6	;volatile
  2384  01A6                     l654:	
  2385                           ;main.c: 459:                         do { LATCbits.LATC7 = 1; } while(0);
  2386                           
  2387  01A6  178E               	bsf	14,7	;volatile
  2388  01A7                     l656:	
  2389                           ;main.c: 460:                         do { LATBbits.LATB5 = 0; } while(0);
  2390                           
  2391  01A7  128D               	bcf	13,5	;volatile
  2392  01A8                     l658:	
  2393                           ;main.c: 461:                         do { LATBbits.LATB6 = 0; } while(0);
  2394                           
  2395  01A8  130D               	bcf	13,6	;volatile
  2396  01A9                     l660:	
  2397                           ;main.c: 462:                         do { LATBbits.LATB7 = 0; } while(0);
  2398                           
  2399  01A9  138D               	bcf	13,7	;volatile
  2400  01AA  2843               	goto	l2359
  2401  01AB                     l2423:	
  2402  01AB  3002               	movlw	2
  2403  01AC  0230               	subwf	main@adcValue+1,w
  2404  01AD  30BC               	movlw	188
  2405  01AE  1903               	skipnz
  2406  01AF  022F               	subwf	main@adcValue,w
  2407  01B0  1803               	skipnc
  2408  01B1  29B3               	goto	u1271
  2409  01B2  29B4               	goto	u1270
  2410  01B3                     u1271:	
  2411  01B3  29C1               	goto	l2425
  2412  01B4                     u1270:	
  2413  01B4                     l664:	
  2414                           ;main.c: 465:                     {;main.c: 466:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2415                           
  2416  01B4  0022               	movlb	2	; select bank2
  2417  01B5  100E               	bcf	14,0	;volatile
  2418  01B6                     l666:	
  2419                           ;main.c: 467:                         do { LATCbits.LATC1 = 0; } while(0);
  2420                           
  2421  01B6  108E               	bcf	14,1	;volatile
  2422  01B7                     l668:	
  2423                           ;main.c: 468:                         do { LATCbits.LATC2 = 0; } while(0);
  2424                           
  2425  01B7  110E               	bcf	14,2	;volatile
  2426  01B8                     l670:	
  2427                           ;main.c: 469:                         do { LATCbits.LATC3 = 0; } while(0);
  2428                           
  2429  01B8  118E               	bcf	14,3	;volatile
  2430  01B9                     l672:	
  2431                           ;main.c: 470:                         do { LATCbits.LATC4 = 0; } while(0);
  2432                           
  2433  01B9  120E               	bcf	14,4	;volatile
  2434  01BA                     l674:	
  2435                           ;main.c: 471:                         do { LATCbits.LATC5 = 1; } while(0);
  2436                           
  2437  01BA  168E               	bsf	14,5	;volatile
  2438  01BB                     l676:	
  2439                           ;main.c: 472:                         do { LATCbits.LATC6 = 0; } while(0);
  2440                           
  2441  01BB  130E               	bcf	14,6	;volatile
  2442  01BC                     l678:	
  2443                           ;main.c: 473:                         do { LATCbits.LATC7 = 1; } while(0);
  2444                           
  2445  01BC  178E               	bsf	14,7	;volatile
  2446  01BD                     l680:	
  2447                           ;main.c: 474:                         do { LATBbits.LATB5 = 0; } while(0);
  2448                           
  2449  01BD  128D               	bcf	13,5	;volatile
  2450  01BE                     l682:	
  2451                           ;main.c: 475:                         do { LATBbits.LATB6 = 0; } while(0);
  2452                           
  2453  01BE  130D               	bcf	13,6	;volatile
  2454  01BF                     l684:	
  2455                           ;main.c: 476:                         do { LATBbits.LATB7 = 0; } while(0);
  2456                           
  2457  01BF  138D               	bcf	13,7	;volatile
  2458  01C0  2843               	goto	l2359
  2459  01C1                     l2425:	
  2460  01C1  3002               	movlw	2
  2461  01C2  0230               	subwf	main@adcValue+1,w
  2462  01C3  30F2               	movlw	242
  2463  01C4  1903               	skipnz
  2464  01C5  022F               	subwf	main@adcValue,w
  2465  01C6  1803               	skipnc
  2466  01C7  29C9               	goto	u1281
  2467  01C8  29CA               	goto	u1280
  2468  01C9                     u1281:	
  2469  01C9  29D7               	goto	l2427
  2470  01CA                     u1280:	
  2471  01CA                     l688:	
  2472                           ;main.c: 479:                     {;main.c: 480:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2473                           
  2474  01CA  0022               	movlb	2	; select bank2
  2475  01CB  100E               	bcf	14,0	;volatile
  2476  01CC                     l690:	
  2477                           ;main.c: 481:                         do { LATCbits.LATC1 = 0; } while(0);
  2478                           
  2479  01CC  108E               	bcf	14,1	;volatile
  2480  01CD                     l692:	
  2481                           ;main.c: 482:                         do { LATCbits.LATC2 = 0; } while(0);
  2482                           
  2483  01CD  110E               	bcf	14,2	;volatile
  2484  01CE                     l694:	
  2485                           ;main.c: 483:                         do { LATCbits.LATC3 = 0; } while(0);
  2486                           
  2487  01CE  118E               	bcf	14,3	;volatile
  2488  01CF                     l696:	
  2489                           ;main.c: 484:                         do { LATCbits.LATC4 = 0; } while(0);
  2490                           
  2491  01CF  120E               	bcf	14,4	;volatile
  2492  01D0                     l698:	
  2493                           ;main.c: 485:                         do { LATCbits.LATC5 = 1; } while(0);
  2494                           
  2495  01D0  168E               	bsf	14,5	;volatile
  2496  01D1                     l700:	
  2497                           ;main.c: 486:                         do { LATCbits.LATC6 = 0; } while(0);
  2498                           
  2499  01D1  130E               	bcf	14,6	;volatile
  2500  01D2                     l702:	
  2501                           ;main.c: 487:                         do { LATCbits.LATC7 = 1; } while(0);
  2502                           
  2503  01D2  178E               	bsf	14,7	;volatile
  2504  01D3                     l704:	
  2505                           ;main.c: 488:                         do { LATBbits.LATB5 = 1; } while(0);
  2506                           
  2507  01D3  168D               	bsf	13,5	;volatile
  2508  01D4                     l706:	
  2509                           ;main.c: 489:                         do { LATBbits.LATB6 = 0; } while(0);
  2510                           
  2511  01D4  130D               	bcf	13,6	;volatile
  2512  01D5                     l708:	
  2513                           ;main.c: 490:                         do { LATBbits.LATB7 = 0; } while(0);
  2514                           
  2515  01D5  138D               	bcf	13,7	;volatile
  2516  01D6  2843               	goto	l2359
  2517  01D7                     l2427:	
  2518  01D7  3003               	movlw	3
  2519  01D8  0230               	subwf	main@adcValue+1,w
  2520  01D9  3028               	movlw	40
  2521  01DA  1903               	skipnz
  2522  01DB  022F               	subwf	main@adcValue,w
  2523  01DC  1803               	skipnc
  2524  01DD  29DF               	goto	u1291
  2525  01DE  29E0               	goto	u1290
  2526  01DF                     u1291:	
  2527  01DF  29ED               	goto	l2429
  2528  01E0                     u1290:	
  2529  01E0                     l712:	
  2530                           ;main.c: 493:                     {;main.c: 494:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2531                           
  2532  01E0  0022               	movlb	2	; select bank2
  2533  01E1  100E               	bcf	14,0	;volatile
  2534  01E2                     l714:	
  2535                           ;main.c: 495:                         do { LATCbits.LATC1 = 0; } while(0);
  2536                           
  2537  01E2  108E               	bcf	14,1	;volatile
  2538  01E3                     l716:	
  2539                           ;main.c: 496:                         do { LATCbits.LATC2 = 0; } while(0);
  2540                           
  2541  01E3  110E               	bcf	14,2	;volatile
  2542  01E4                     l718:	
  2543                           ;main.c: 497:                         do { LATCbits.LATC3 = 0; } while(0);
  2544                           
  2545  01E4  118E               	bcf	14,3	;volatile
  2546  01E5                     l720:	
  2547                           ;main.c: 498:                         do { LATCbits.LATC4 = 0; } while(0);
  2548                           
  2549  01E5  120E               	bcf	14,4	;volatile
  2550  01E6                     l722:	
  2551                           ;main.c: 499:                         do { LATCbits.LATC5 = 1; } while(0);
  2552                           
  2553  01E6  168E               	bsf	14,5	;volatile
  2554  01E7                     l724:	
  2555                           ;main.c: 500:                         do { LATCbits.LATC6 = 0; } while(0);
  2556                           
  2557  01E7  130E               	bcf	14,6	;volatile
  2558  01E8                     l726:	
  2559                           ;main.c: 501:                         do { LATCbits.LATC7 = 0; } while(0);
  2560                           
  2561  01E8  138E               	bcf	14,7	;volatile
  2562  01E9                     l728:	
  2563                           ;main.c: 502:                         do { LATBbits.LATB5 = 1; } while(0);
  2564                           
  2565  01E9  168D               	bsf	13,5	;volatile
  2566  01EA                     l730:	
  2567                           ;main.c: 503:                         do { LATBbits.LATB6 = 0; } while(0);
  2568                           
  2569  01EA  130D               	bcf	13,6	;volatile
  2570  01EB                     l732:	
  2571                           ;main.c: 504:                         do { LATBbits.LATB7 = 0; } while(0);
  2572                           
  2573  01EB  138D               	bcf	13,7	;volatile
  2574  01EC  2843               	goto	l2359
  2575  01ED                     l2429:	
  2576  01ED  3003               	movlw	3
  2577  01EE  0230               	subwf	main@adcValue+1,w
  2578  01EF  305D               	movlw	93
  2579  01F0  1903               	skipnz
  2580  01F1  022F               	subwf	main@adcValue,w
  2581  01F2  1803               	skipnc
  2582  01F3  29F5               	goto	u1301
  2583  01F4  29F6               	goto	u1300
  2584  01F5                     u1301:	
  2585  01F5  2A03               	goto	l2431
  2586  01F6                     u1300:	
  2587  01F6                     l736:	
  2588                           ;main.c: 507:                     {;main.c: 508:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2589                           
  2590  01F6  0022               	movlb	2	; select bank2
  2591  01F7  100E               	bcf	14,0	;volatile
  2592  01F8                     l738:	
  2593                           ;main.c: 509:                         do { LATCbits.LATC1 = 0; } while(0);
  2594                           
  2595  01F8  108E               	bcf	14,1	;volatile
  2596  01F9                     l740:	
  2597                           ;main.c: 510:                         do { LATCbits.LATC2 = 0; } while(0);
  2598                           
  2599  01F9  110E               	bcf	14,2	;volatile
  2600  01FA                     l742:	
  2601                           ;main.c: 511:                         do { LATCbits.LATC3 = 0; } while(0);
  2602                           
  2603  01FA  118E               	bcf	14,3	;volatile
  2604  01FB                     l744:	
  2605                           ;main.c: 512:                         do { LATCbits.LATC4 = 0; } while(0);
  2606                           
  2607  01FB  120E               	bcf	14,4	;volatile
  2608  01FC                     l746:	
  2609                           ;main.c: 513:                         do { LATCbits.LATC5 = 1; } while(0);
  2610                           
  2611  01FC  168E               	bsf	14,5	;volatile
  2612  01FD                     l748:	
  2613                           ;main.c: 514:                         do { LATCbits.LATC6 = 0; } while(0);
  2614                           
  2615  01FD  130E               	bcf	14,6	;volatile
  2616  01FE                     l750:	
  2617                           ;main.c: 515:                         do { LATCbits.LATC7 = 0; } while(0);
  2618                           
  2619  01FE  138E               	bcf	14,7	;volatile
  2620  01FF                     l752:	
  2621                           ;main.c: 516:                         do { LATBbits.LATB5 = 1; } while(0);
  2622                           
  2623  01FF  168D               	bsf	13,5	;volatile
  2624  0200                     l754:	
  2625                           ;main.c: 517:                         do { LATBbits.LATB6 = 1; } while(0);
  2626                           
  2627  0200  170D               	bsf	13,6	;volatile
  2628  0201                     l756:	
  2629                           ;main.c: 518:                         do { LATBbits.LATB7 = 0; } while(0);
  2630                           
  2631  0201  138D               	bcf	13,7	;volatile
  2632  0202  2843               	goto	l2359
  2633  0203                     l2431:	
  2634  0203  3003               	movlw	3
  2635  0204  0230               	subwf	main@adcValue+1,w
  2636  0205  3093               	movlw	147
  2637  0206  1903               	skipnz
  2638  0207  022F               	subwf	main@adcValue,w
  2639  0208  1803               	skipnc
  2640  0209  2A0B               	goto	u1311
  2641  020A  2A0C               	goto	u1310
  2642  020B                     u1311:	
  2643  020B  2A19               	goto	l2433
  2644  020C                     u1310:	
  2645  020C                     l760:	
  2646                           ;main.c: 521:                     {;main.c: 522:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2647                           
  2648  020C  0022               	movlb	2	; select bank2
  2649  020D  100E               	bcf	14,0	;volatile
  2650  020E                     l762:	
  2651                           ;main.c: 523:                         do { LATCbits.LATC1 = 0; } while(0);
  2652                           
  2653  020E  108E               	bcf	14,1	;volatile
  2654  020F                     l764:	
  2655                           ;main.c: 524:                         do { LATCbits.LATC2 = 0; } while(0);
  2656                           
  2657  020F  110E               	bcf	14,2	;volatile
  2658  0210                     l766:	
  2659                           ;main.c: 525:                         do { LATCbits.LATC3 = 0; } while(0);
  2660                           
  2661  0210  118E               	bcf	14,3	;volatile
  2662  0211                     l768:	
  2663                           ;main.c: 526:                         do { LATCbits.LATC4 = 0; } while(0);
  2664                           
  2665  0211  120E               	bcf	14,4	;volatile
  2666  0212                     l770:	
  2667                           ;main.c: 527:                         do { LATCbits.LATC5 = 1; } while(0);
  2668                           
  2669  0212  168E               	bsf	14,5	;volatile
  2670  0213                     l772:	
  2671                           ;main.c: 528:                         do { LATCbits.LATC6 = 0; } while(0);
  2672                           
  2673  0213  130E               	bcf	14,6	;volatile
  2674  0214                     l774:	
  2675                           ;main.c: 529:                         do { LATCbits.LATC7 = 0; } while(0);
  2676                           
  2677  0214  138E               	bcf	14,7	;volatile
  2678  0215                     l776:	
  2679                           ;main.c: 530:                         do { LATBbits.LATB5 = 0; } while(0);
  2680                           
  2681  0215  128D               	bcf	13,5	;volatile
  2682  0216                     l778:	
  2683                           ;main.c: 531:                         do { LATBbits.LATB6 = 1; } while(0);
  2684                           
  2685  0216  170D               	bsf	13,6	;volatile
  2686  0217                     l780:	
  2687                           ;main.c: 532:                         do { LATBbits.LATB7 = 0; } while(0);
  2688                           
  2689  0217  138D               	bcf	13,7	;volatile
  2690  0218  2843               	goto	l2359
  2691  0219                     l2433:	
  2692  0219  3003               	movlw	3
  2693  021A  0230               	subwf	main@adcValue+1,w
  2694  021B  30C9               	movlw	201
  2695  021C  1903               	skipnz
  2696  021D  022F               	subwf	main@adcValue,w
  2697  021E  1803               	skipnc
  2698  021F  2A21               	goto	u1321
  2699  0220  2A22               	goto	u1320
  2700  0221                     u1321:	
  2701  0221  2A2F               	goto	l807
  2702  0222                     u1320:	
  2703  0222                     l784:	
  2704                           ;main.c: 535:                     {;main.c: 536:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2705                           
  2706  0222  0022               	movlb	2	; select bank2
  2707  0223  100E               	bcf	14,0	;volatile
  2708  0224                     l786:	
  2709                           ;main.c: 537:                         do { LATCbits.LATC1 = 0; } while(0);
  2710                           
  2711  0224  108E               	bcf	14,1	;volatile
  2712  0225                     l788:	
  2713                           ;main.c: 538:                         do { LATCbits.LATC2 = 0; } while(0);
  2714                           
  2715  0225  110E               	bcf	14,2	;volatile
  2716  0226                     l790:	
  2717                           ;main.c: 539:                         do { LATCbits.LATC3 = 0; } while(0);
  2718                           
  2719  0226  118E               	bcf	14,3	;volatile
  2720  0227                     l792:	
  2721                           ;main.c: 540:                         do { LATCbits.LATC4 = 0; } while(0);
  2722                           
  2723  0227  120E               	bcf	14,4	;volatile
  2724  0228                     l794:	
  2725                           ;main.c: 541:                         do { LATCbits.LATC5 = 1; } while(0);
  2726                           
  2727  0228  168E               	bsf	14,5	;volatile
  2728  0229                     l796:	
  2729                           ;main.c: 542:                         do { LATCbits.LATC6 = 0; } while(0);
  2730                           
  2731  0229  130E               	bcf	14,6	;volatile
  2732  022A                     l798:	
  2733                           ;main.c: 543:                         do { LATCbits.LATC7 = 0; } while(0);
  2734                           
  2735  022A  138E               	bcf	14,7	;volatile
  2736  022B                     l800:	
  2737                           ;main.c: 544:                         do { LATBbits.LATB5 = 0; } while(0);
  2738                           
  2739  022B  128D               	bcf	13,5	;volatile
  2740  022C                     l802:	
  2741                           ;main.c: 545:                         do { LATBbits.LATB6 = 1; } while(0);
  2742                           
  2743  022C  170D               	bsf	13,6	;volatile
  2744  022D                     l804:	
  2745                           ;main.c: 546:                         do { LATBbits.LATB7 = 1; } while(0);
  2746                           
  2747  022D  178D               	bsf	13,7	;volatile
  2748  022E  2843               	goto	l2359
  2749  022F                     l807:	
  2750                           ;main.c: 549:                     {;main.c: 550:                         do { LATCbits.L
      +                          ATC0 = 0; } while(0);
  2751                           
  2752  022F  0022               	movlb	2	; select bank2
  2753  0230  100E               	bcf	14,0	;volatile
  2754  0231                     l809:	
  2755                           ;main.c: 551:                         do { LATCbits.LATC1 = 0; } while(0);
  2756                           
  2757  0231  108E               	bcf	14,1	;volatile
  2758  0232                     l811:	
  2759                           ;main.c: 552:                         do { LATCbits.LATC2 = 0; } while(0);
  2760                           
  2761  0232  110E               	bcf	14,2	;volatile
  2762  0233                     l813:	
  2763                           ;main.c: 553:                         do { LATCbits.LATC3 = 0; } while(0);
  2764                           
  2765  0233  118E               	bcf	14,3	;volatile
  2766  0234                     l815:	
  2767                           ;main.c: 554:                         do { LATCbits.LATC4 = 0; } while(0);
  2768                           
  2769  0234  120E               	bcf	14,4	;volatile
  2770  0235                     l817:	
  2771                           ;main.c: 555:                         do { LATCbits.LATC5 = 1; } while(0);
  2772                           
  2773  0235  168E               	bsf	14,5	;volatile
  2774  0236                     l819:	
  2775                           ;main.c: 556:                         do { LATCbits.LATC6 = 0; } while(0);
  2776                           
  2777  0236  130E               	bcf	14,6	;volatile
  2778  0237                     l821:	
  2779                           ;main.c: 557:                         do { LATCbits.LATC7 = 0; } while(0);
  2780                           
  2781  0237  138E               	bcf	14,7	;volatile
  2782  0238                     l823:	
  2783                           ;main.c: 558:                         do { LATBbits.LATB5 = 0; } while(0);
  2784                           
  2785  0238  128D               	bcf	13,5	;volatile
  2786  0239                     l825:	
  2787                           ;main.c: 559:                         do { LATBbits.LATB6 = 0; } while(0);
  2788                           
  2789  0239  130D               	bcf	13,6	;volatile
  2790  023A                     l827:	
  2791                           ;main.c: 560:                         do { LATBbits.LATB7 = 1; } while(0);
  2792                           
  2793  023A  178D               	bsf	13,7	;volatile
  2794  023B  2843               	goto	l2359
  2795  023C                     l2435:	
  2796                           
  2797                           ;main.c: 568:                 if(doToggle)
  2798  023C  0879               	movf	_doToggle,w	;volatile
  2799  023D  1903               	btfsc	3,2
  2800  023E  2A40               	goto	u1331
  2801  023F  2A41               	goto	u1330
  2802  0240                     u1331:	
  2803  0240  2843               	goto	l2359
  2804  0241                     u1330:	
  2805  0241                     l2437:	
  2806  0241  1003               	clrc
  2807  0242  0022               	movlb	2	; select bank2
  2808  0243  1C0E               	btfss	14,0	;volatile
  2809  0244  1403               	setc
  2810  0245  1803               	btfsc	3,0
  2811  0246  2A48               	goto	u1341
  2812  0247  2A4B               	goto	u1340
  2813  0248                     u1341:	
  2814  0248  0022               	movlb	2	; select bank2
  2815  0249  140E               	bsf	14,0	;volatile
  2816  024A  2A4D               	goto	u1354
  2817  024B                     u1340:	
  2818  024B  0022               	movlb	2	; select bank2
  2819  024C  100E               	bcf	14,0	;volatile
  2820  024D                     u1354:	
  2821  024D                     l833:	
  2822                           ;main.c: 571:                     do { LATCbits.LATC1 = ~LATCbits.LATC1; } while(0);
  2823                           
  2824  024D  1003               	clrc
  2825  024E  1C8E               	btfss	14,1	;volatile
  2826  024F  1403               	setc
  2827  0250  1803               	btfsc	3,0
  2828  0251  2A53               	goto	u1361
  2829  0252  2A56               	goto	u1360
  2830  0253                     u1361:	
  2831  0253  0022               	movlb	2	; select bank2
  2832  0254  148E               	bsf	14,1	;volatile
  2833  0255  2A58               	goto	u1374
  2834  0256                     u1360:	
  2835  0256  0022               	movlb	2	; select bank2
  2836  0257  108E               	bcf	14,1	;volatile
  2837  0258                     u1374:	
  2838  0258                     l835:	
  2839                           ;main.c: 572:                     do { LATCbits.LATC2 = ~LATCbits.LATC2; } while(0);
  2840                           
  2841  0258  1003               	clrc
  2842  0259  1D0E               	btfss	14,2	;volatile
  2843  025A  1403               	setc
  2844  025B  1803               	btfsc	3,0
  2845  025C  2A5E               	goto	u1381
  2846  025D  2A61               	goto	u1380
  2847  025E                     u1381:	
  2848  025E  0022               	movlb	2	; select bank2
  2849  025F  150E               	bsf	14,2	;volatile
  2850  0260  2A63               	goto	u1394
  2851  0261                     u1380:	
  2852  0261  0022               	movlb	2	; select bank2
  2853  0262  110E               	bcf	14,2	;volatile
  2854  0263                     u1394:	
  2855  0263                     l837:	
  2856                           ;main.c: 573:                     do { LATCbits.LATC3 = ~LATCbits.LATC3; } while(0);
  2857                           
  2858  0263  1003               	clrc
  2859  0264  1D8E               	btfss	14,3	;volatile
  2860  0265  1403               	setc
  2861  0266  1803               	btfsc	3,0
  2862  0267  2A69               	goto	u1401
  2863  0268  2A6C               	goto	u1400
  2864  0269                     u1401:	
  2865  0269  0022               	movlb	2	; select bank2
  2866  026A  158E               	bsf	14,3	;volatile
  2867  026B  2A6E               	goto	u1414
  2868  026C                     u1400:	
  2869  026C  0022               	movlb	2	; select bank2
  2870  026D  118E               	bcf	14,3	;volatile
  2871  026E                     u1414:	
  2872  026E                     l839:	
  2873                           ;main.c: 574:                     do { LATCbits.LATC4 = ~LATCbits.LATC4; } while(0);
  2874                           
  2875  026E  1003               	clrc
  2876  026F  1E0E               	btfss	14,4	;volatile
  2877  0270  1403               	setc
  2878  0271  1803               	btfsc	3,0
  2879  0272  2A74               	goto	u1421
  2880  0273  2A77               	goto	u1420
  2881  0274                     u1421:	
  2882  0274  0022               	movlb	2	; select bank2
  2883  0275  160E               	bsf	14,4	;volatile
  2884  0276  2A79               	goto	u1434
  2885  0277                     u1420:	
  2886  0277  0022               	movlb	2	; select bank2
  2887  0278  120E               	bcf	14,4	;volatile
  2888  0279                     u1434:	
  2889  0279                     l2439:	
  2890                           
  2891                           ;main.c: 575:                     doToggle = 0;
  2892  0279  01F9               	clrf	_doToggle	;volatile
  2893  027A  2843               	goto	l2359
  2894  027B                     l2441:	
  2895                           
  2896                           ;main.c: 580:                 if(doToggle)
  2897  027B  0879               	movf	_doToggle,w	;volatile
  2898  027C  1903               	btfsc	3,2
  2899  027D  2A7F               	goto	u1441
  2900  027E  2A80               	goto	u1440
  2901  027F                     u1441:	
  2902  027F  2843               	goto	l2359
  2903  0280                     u1440:	
  2904  0280                     l843:	
  2905                           ;main.c: 581:                 {;main.c: 582:                     do { LATCbits.LATC6 = 1
      +                          ; } while(0);
  2906                           
  2907  0280  0022               	movlb	2	; select bank2
  2908  0281  170E               	bsf	14,6	;volatile
  2909  0282                     l845:	
  2910                           ;main.c: 583:                     do { LATCbits.LATC7 = 1; } while(0);
  2911                           
  2912  0282  178E               	bsf	14,7	;volatile
  2913  0283                     l847:	
  2914                           ;main.c: 584:                     do { LATBbits.LATB5 = 1; } while(0);
  2915                           
  2916  0283  168D               	bsf	13,5	;volatile
  2917  0284                     l849:	
  2918                           ;main.c: 585:                     do { LATBbits.LATB6 = 1; } while(0);
  2919                           
  2920  0284  170D               	bsf	13,6	;volatile
  2921  0285                     l2443:	
  2922  0285  1003               	clrc
  2923  0286  1F8D               	btfss	13,7	;volatile
  2924  0287  1403               	setc
  2925  0288  1803               	btfsc	3,0
  2926  0289  2A8B               	goto	u1451
  2927  028A  2A8E               	goto	u1450
  2928  028B                     u1451:	
  2929  028B  0022               	movlb	2	; select bank2
  2930  028C  178D               	bsf	13,7	;volatile
  2931  028D  2A90               	goto	u1464
  2932  028E                     u1450:	
  2933  028E  0022               	movlb	2	; select bank2
  2934  028F  138D               	bcf	13,7	;volatile
  2935  0290                     u1464:	
  2936  0290  2A79               	goto	l2439
  2937  0291                     l2449:	
  2938  0291  082A               	movf	_currentState,w
  2939  0292  00F6               	movwf	??_main
  2940  0293  01F7               	clrf	??_main+1
  2941                           
  2942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2943                           ; Switch size 1, requested type "simple"
  2944                           ; Number of cases is 1, Range of values is 0 to 0
  2945                           ; switch strategies available:
  2946                           ; Name         Instructions Cycles
  2947                           ; simple_byte            4     3 (average)
  2948                           ; direct_byte            8     6 (fixed)
  2949                           ; jumptable            260     6 (fixed)
  2950                           ;	Chosen strategy is simple_byte
  2951  0294  0877               	movf	??_main+1,w
  2952  0295  3A00               	xorlw	0	; case 0
  2953  0296  1903               	skipnz
  2954  0297  2A99               	goto	l2575
  2955  0298  2843               	goto	l2359
  2956  0299                     l2575:	
  2957                           
  2958                           ; Switch size 1, requested type "simple"
  2959                           ; Number of cases is 4, Range of values is 0 to 3
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte           13     7 (average)
  2963                           ; direct_byte           14     6 (fixed)
  2964                           ; jumptable            260     6 (fixed)
  2965                           ;	Chosen strategy is simple_byte
  2966  0299  0876               	movf	??_main,w
  2967  029A  3A00               	xorlw	0	; case 0
  2968  029B  1903               	skipnz
  2969  029C  28A9               	goto	l2389
  2970  029D  3A01               	xorlw	1	; case 1
  2971  029E  1903               	skipnz
  2972  029F  2A3C               	goto	l2435
  2973  02A0  3A03               	xorlw	3	; case 2
  2974  02A1  1903               	skipnz
  2975  02A2  2A7B               	goto	l2441
  2976  02A3  3A01               	xorlw	1	; case 3
  2977  02A4  1903               	skipnz
  2978  02A5  2897               	goto	l2387
  2979  02A6  2843               	goto	l2359
  2980  02A7  2813               	ljmp	start
  2981  02A8                     __end_of_main:	
  2982                           
  2983                           	psect	text1
  2984  0312                     __ptext1:	
  2985 ;; *************** function _setState *****************
  2986 ;; Defined at:
  2987 ;;		line 126 in file "main.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  newState        1    wreg     enum E2406
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  newState        1    4[COMMON] enum E2406
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1
  3001 ;;      Params:         0       0       0
  3002 ;;      Locals:         1       0       0
  3003 ;;      Temps:          2       0       0
  3004 ;;      Totals:         3       0       0
  3005 ;;Total ram usage:        3 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    4
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_main
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function _setState
  3017  0312                     _setState:	
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in _setState: [wreg-fsr0h+status,2+status,0]
  3021                           ;setState@newState stored from wreg
  3022  0312  00F4               	movwf	setState@newState
  3023  0313                     l2335:	
  3024                           
  3025                           ;main.c: 126: void setState(state_t newState);main.c: 127: {;main.c: 128:     if(newStat
      +                          e == currentState)
  3026  0313  0874               	movf	setState@newState,w
  3027  0314  0020               	movlb	0	; select bank0
  3028  0315  062A               	xorwf	_currentState,w
  3029  0316  1D03               	skipz
  3030  0317  2B19               	goto	u1081
  3031  0318  2B1A               	goto	u1080
  3032  0319                     u1081:	
  3033  0319  2B42               	goto	l2341
  3034  031A                     u1080:	
  3035  031A  2B62               	goto	l316
  3036  031B                     l319:	
  3037                           ;main.c: 138:             do { LATCbits.LATC0 = 0; } while(0);
  3038                           
  3039  031B  0022               	movlb	2	; select bank2
  3040  031C  100E               	bcf	14,0	;volatile
  3041  031D                     l321:	
  3042                           ;main.c: 139:             do { LATCbits.LATC1 = 0; } while(0);
  3043                           
  3044  031D  108E               	bcf	14,1	;volatile
  3045  031E                     l323:	
  3046                           ;main.c: 140:             do { LATCbits.LATC2 = 0; } while(0);
  3047                           
  3048  031E  110E               	bcf	14,2	;volatile
  3049  031F                     l325:	
  3050                           ;main.c: 141:             do { LATCbits.LATC3 = 0; } while(0);
  3051                           
  3052  031F  118E               	bcf	14,3	;volatile
  3053  0320                     l327:	
  3054                           ;main.c: 142:             do { LATCbits.LATC4 = 0; } while(0);
  3055                           
  3056  0320  120E               	bcf	14,4	;volatile
  3057  0321                     l329:	
  3058                           ;main.c: 143:             do { LATCbits.LATC5 = 1; } while(0);
  3059                           
  3060  0321  168E               	bsf	14,5	;volatile
  3061  0322                     l331:	
  3062                           ;main.c: 144:             do { LATCbits.LATC6 = 0; } while(0);
  3063                           
  3064  0322  130E               	bcf	14,6	;volatile
  3065  0323                     l333:	
  3066                           ;main.c: 145:             do { LATCbits.LATC7 = 0; } while(0);
  3067                           
  3068  0323  138E               	bcf	14,7	;volatile
  3069  0324                     l335:	
  3070                           ;main.c: 146:             do { LATBbits.LATB5 = 0; } while(0);
  3071                           
  3072  0324  128D               	bcf	13,5	;volatile
  3073  0325                     l337:	
  3074                           ;main.c: 147:             do { LATBbits.LATB6 = 0; } while(0);
  3075                           
  3076  0325  130D               	bcf	13,6	;volatile
  3077  0326                     l339:	
  3078                           ;main.c: 148:             do { LATBbits.LATB7 = 0; } while(0);
  3079                           
  3080  0326  138D               	bcf	13,7	;volatile
  3081  0327  2B55               	goto	l2343
  3082  0328                     l343:	
  3083                           ;main.c: 152:             do { LATCbits.LATC0 = 1; } while(0);
  3084                           
  3085  0328  0022               	movlb	2	; select bank2
  3086  0329  140E               	bsf	14,0	;volatile
  3087  032A                     l345:	
  3088                           ;main.c: 153:             do { LATCbits.LATC1 = 0; } while(0);
  3089                           
  3090  032A  108E               	bcf	14,1	;volatile
  3091  032B                     l347:	
  3092                           ;main.c: 154:             do { LATCbits.LATC2 = 0; } while(0);
  3093                           
  3094  032B  110E               	bcf	14,2	;volatile
  3095  032C                     l349:	
  3096                           ;main.c: 155:             do { LATCbits.LATC3 = 0; } while(0);
  3097                           
  3098  032C  118E               	bcf	14,3	;volatile
  3099  032D                     l351:	
  3100                           ;main.c: 156:             do { LATCbits.LATC4 = 0; } while(0);
  3101                           
  3102  032D  120E               	bcf	14,4	;volatile
  3103  032E                     l353:	
  3104                           ;main.c: 157:             do { LATCbits.LATC5 = 0; } while(0);
  3105                           
  3106  032E  128E               	bcf	14,5	;volatile
  3107  032F                     l355:	
  3108                           ;main.c: 158:             do { LATCbits.LATC6 = 0; } while(0);
  3109                           
  3110  032F  130E               	bcf	14,6	;volatile
  3111  0330                     l357:	
  3112                           ;main.c: 159:             do { LATCbits.LATC7 = 0; } while(0);
  3113                           
  3114  0330  138E               	bcf	14,7	;volatile
  3115  0331                     l359:	
  3116                           ;main.c: 160:             do { LATBbits.LATB5 = 0; } while(0);
  3117                           
  3118  0331  128D               	bcf	13,5	;volatile
  3119  0332                     l361:	
  3120                           ;main.c: 161:             do { LATBbits.LATB6 = 0; } while(0);
  3121                           
  3122  0332  130D               	bcf	13,6	;volatile
  3123  0333                     l363:	
  3124                           ;main.c: 162:             do { LATBbits.LATB7 = 0; } while(0);
  3125                           
  3126  0333  138D               	bcf	13,7	;volatile
  3127  0334  2B55               	goto	l2343
  3128  0335                     l366:	
  3129                           ;main.c: 166:             do { LATCbits.LATC0 = 0; } while(0);
  3130                           
  3131  0335  0022               	movlb	2	; select bank2
  3132  0336  100E               	bcf	14,0	;volatile
  3133  0337                     l368:	
  3134                           ;main.c: 167:             do { LATCbits.LATC1 = 0; } while(0);
  3135                           
  3136  0337  108E               	bcf	14,1	;volatile
  3137  0338                     l370:	
  3138                           ;main.c: 168:             do { LATCbits.LATC2 = 0; } while(0);
  3139                           
  3140  0338  110E               	bcf	14,2	;volatile
  3141  0339                     l372:	
  3142                           ;main.c: 169:             do { LATCbits.LATC3 = 0; } while(0);
  3143                           
  3144  0339  118E               	bcf	14,3	;volatile
  3145  033A                     l374:	
  3146                           ;main.c: 170:             do { LATCbits.LATC4 = 0; } while(0);
  3147                           
  3148  033A  120E               	bcf	14,4	;volatile
  3149  033B                     l376:	
  3150                           ;main.c: 171:             do { LATCbits.LATC5 = 1; } while(0);
  3151                           
  3152  033B  168E               	bsf	14,5	;volatile
  3153  033C                     l378:	
  3154                           ;main.c: 172:             do { LATCbits.LATC6 = 1; } while(0);
  3155                           
  3156  033C  170E               	bsf	14,6	;volatile
  3157  033D                     l380:	
  3158                           ;main.c: 173:             do { LATCbits.LATC7 = 1; } while(0);
  3159                           
  3160  033D  178E               	bsf	14,7	;volatile
  3161  033E                     l382:	
  3162                           ;main.c: 174:             do { LATBbits.LATB5 = 1; } while(0);
  3163                           
  3164  033E  168D               	bsf	13,5	;volatile
  3165  033F                     l384:	
  3166                           ;main.c: 175:             do { LATBbits.LATB6 = 1; } while(0);
  3167                           
  3168  033F  170D               	bsf	13,6	;volatile
  3169  0340                     l386:	
  3170                           ;main.c: 176:             do { LATBbits.LATB7 = 1; } while(0);
  3171                           
  3172  0340  178D               	bsf	13,7	;volatile
  3173  0341  2B55               	goto	l2343
  3174  0342                     l2341:	
  3175  0342  0874               	movf	setState@newState,w
  3176  0343  00F2               	movwf	??_setState
  3177  0344  01F3               	clrf	??_setState+1
  3178                           
  3179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3180                           ; Switch size 1, requested type "simple"
  3181                           ; Number of cases is 1, Range of values is 0 to 0
  3182                           ; switch strategies available:
  3183                           ; Name         Instructions Cycles
  3184                           ; simple_byte            4     3 (average)
  3185                           ; direct_byte            8     6 (fixed)
  3186                           ; jumptable            260     6 (fixed)
  3187                           ;	Chosen strategy is simple_byte
  3188  0345  0873               	movf	??_setState+1,w
  3189  0346  3A00               	xorlw	0	; case 0
  3190  0347  1903               	skipnz
  3191  0348  2B4A               	goto	l2577
  3192  0349  2B55               	goto	l2343
  3193  034A                     l2577:	
  3194                           
  3195                           ; Switch size 1, requested type "simple"
  3196                           ; Number of cases is 3, Range of values is 0 to 2
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte           10     6 (average)
  3200                           ; direct_byte           12     6 (fixed)
  3201                           ; jumptable            260     6 (fixed)
  3202                           ;	Chosen strategy is simple_byte
  3203  034A  0872               	movf	??_setState,w
  3204  034B  3A00               	xorlw	0	; case 0
  3205  034C  1903               	skipnz
  3206  034D  2B1B               	goto	l319
  3207  034E  3A01               	xorlw	1	; case 1
  3208  034F  1903               	skipnz
  3209  0350  2B28               	goto	l343
  3210  0351  3A03               	xorlw	3	; case 2
  3211  0352  1903               	skipnz
  3212  0353  2B35               	goto	l366
  3213  0354  2B55               	goto	l2343
  3214  0355                     l2343:	
  3215                           
  3216                           ;main.c: 182:     msTick = 0;
  3217  0355  3000               	movlw	0
  3218  0356  0020               	movlb	0	; select bank0
  3219  0357  00A3               	movwf	_msTick+3	;volatile
  3220  0358  3000               	movlw	0
  3221  0359  00A2               	movwf	_msTick+2	;volatile
  3222  035A  3000               	movlw	0
  3223  035B  00A1               	movwf	_msTick+1	;volatile
  3224  035C  3000               	movlw	0
  3225  035D  00A0               	movwf	_msTick	;volatile
  3226                           
  3227                           ;main.c: 184:     currentState = newState;
  3228  035E  0874               	movf	setState@newState,w
  3229  035F  00F2               	movwf	??_setState
  3230  0360  0872               	movf	??_setState,w
  3231  0361  00AA               	movwf	_currentState
  3232  0362                     l316:	
  3233  0362  0008               	return
  3234  0363                     __end_of_setState:	
  3235                           
  3236                           	psect	text2
  3237  0415                     __ptext2:	
  3238 ;; *************** function _TMR2_StartTimer *****************
  3239 ;; Defined at:
  3240 ;;		line 79 in file "mcc_generated_files/tmr2.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		None
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1
  3254 ;;      Params:         0       0       0
  3255 ;;      Locals:         0       0       0
  3256 ;;      Temps:          0       0       0
  3257 ;;      Totals:         0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    4
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _TMR2_StartTimer
  3270  0415                     _TMR2_StartTimer:	
  3271  0415                     l2333:	
  3272                           ;incstack = 0
  3273                           ; Regs used in _TMR2_StartTimer: []
  3274                           
  3275                           
  3276                           ;mcc_generated_files/tmr2.c: 82:     T2CONbits.TMR2ON = 1;
  3277  0415  0020               	movlb	0	; select bank0
  3278  0416  151C               	bsf	28,2	;volatile
  3279  0417                     l129:	
  3280  0417  0008               	return
  3281  0418                     __end_of_TMR2_StartTimer:	
  3282                           
  3283                           	psect	text3
  3284  0395                     __ptext3:	
  3285 ;; *************** function _SYSTEM_Initialize *****************
  3286 ;; Defined at:
  3287 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1
  3301 ;;      Params:         0       0       0
  3302 ;;      Locals:         0       0       0
  3303 ;;      Temps:          0       0       0
  3304 ;;      Totals:         0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    6
  3308 ;; This function calls:
  3309 ;;		_ADC_Initialize
  3310 ;;		_OSCILLATOR_Initialize
  3311 ;;		_PIN_MANAGER_Initialize
  3312 ;;		_PWM3_Initialize
  3313 ;;		_TMR0_Initialize
  3314 ;;		_TMR2_Initialize
  3315 ;;		_WDT_Initialize
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           
  3322                           ;psect for function _SYSTEM_Initialize
  3323  0395                     _SYSTEM_Initialize:	
  3324  0395                     l2329:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3327                           
  3328                           
  3329                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3330  0395  3183  237D  3183   	fcall	_PIN_MANAGER_Initialize
  3331                           
  3332                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3333  0398  3184  240B  3183   	fcall	_OSCILLATOR_Initialize
  3334                           
  3335                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3336  039B  3184  2411  3183   	fcall	_WDT_Initialize
  3337                           
  3338                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3339  039E  3183  23E4  3183   	fcall	_ADC_Initialize
  3340                           
  3341                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  3342  03A1  3183  23F5  3183   	fcall	_PWM3_Initialize
  3343                           
  3344                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3345  03A4  3183  23ED  3183   	fcall	_TMR2_Initialize
  3346                           
  3347                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  3348  03A7  3183  23AB  3183   	fcall	_TMR0_Initialize
  3349  03AA                     l63:	
  3350  03AA  0008               	return
  3351  03AB                     __end_of_SYSTEM_Initialize:	
  3352                           
  3353                           	psect	text4
  3354  0411                     __ptext4:	
  3355 ;; *************** function _WDT_Initialize *****************
  3356 ;; Defined at:
  3357 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1
  3371 ;;      Params:         0       0       0
  3372 ;;      Locals:         0       0       0
  3373 ;;      Temps:          0       0       0
  3374 ;;      Totals:         0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    4
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_SYSTEM_Initialize
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function _WDT_Initialize
  3387  0411                     _WDT_Initialize:	
  3388  0411                     l2293:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _WDT_Initialize: [wreg]
  3391                           
  3392                           
  3393                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  3394  0411  3016               	movlw	22
  3395  0412  0021               	movlb	1	; select bank1
  3396  0413  0097               	movwf	23	;volatile
  3397  0414                     l69:	
  3398  0414  0008               	return
  3399  0415                     __end_of_WDT_Initialize:	
  3400                           
  3401                           	psect	text5
  3402  03ED                     __ptext5:	
  3403 ;; *************** function _TMR2_Initialize *****************
  3404 ;; Defined at:
  3405 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1
  3419 ;;      Params:         0       0       0
  3420 ;;      Locals:         0       0       0
  3421 ;;      Temps:          0       0       0
  3422 ;;      Totals:         0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    4
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_SYSTEM_Initialize
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function _TMR2_Initialize
  3435  03ED                     _TMR2_Initialize:	
  3436  03ED                     l2297:	
  3437                           ;incstack = 0
  3438                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3439                           
  3440                           
  3441                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  3442  03ED  30FF               	movlw	255
  3443  03EE  0020               	movlb	0	; select bank0
  3444  03EF  009B               	movwf	27	;volatile
  3445  03F0                     l2299:	
  3446                           
  3447                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3448  03F0  019A               	clrf	26	;volatile
  3449  03F1                     l2301:	
  3450                           
  3451                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3452  03F1  1091               	bcf	17,1	;volatile
  3453  03F2                     l2303:	
  3454                           
  3455                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x3C;
  3456  03F2  303C               	movlw	60
  3457  03F3  009C               	movwf	28	;volatile
  3458  03F4                     l126:	
  3459  03F4  0008               	return
  3460  03F5                     __end_of_TMR2_Initialize:	
  3461                           
  3462                           	psect	text6
  3463  03AB                     __ptext6:	
  3464 ;; *************** function _TMR0_Initialize *****************
  3465 ;; Defined at:
  3466 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1
  3480 ;;      Params:         0       0       0
  3481 ;;      Locals:         0       0       0
  3482 ;;      Temps:          1       0       0
  3483 ;;      Totals:         1       0       0
  3484 ;;Total ram usage:        1 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    5
  3487 ;; This function calls:
  3488 ;;		_TMR0_SetInterruptHandler
  3489 ;; This function is called by:
  3490 ;;		_SYSTEM_Initialize
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           
  3495                           ;psect for function _TMR0_Initialize
  3496  03AB                     _TMR0_Initialize:	
  3497  03AB                     l2305:	
  3498                           ;incstack = 0
  3499                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3500                           
  3501                           
  3502                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  3503  03AB  0021               	movlb	1	; select bank1
  3504  03AC  0815               	movf	21,w	;volatile
  3505  03AD  39C0               	andlw	192
  3506  03AE  3812               	iorlw	18
  3507  03AF  0095               	movwf	21	;volatile
  3508  03B0                     l2307:	
  3509                           
  3510                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x45;
  3511  03B0  3045               	movlw	69
  3512  03B1  0020               	movlb	0	; select bank0
  3513  03B2  0095               	movwf	21	;volatile
  3514  03B3                     l2309:	
  3515                           
  3516                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 69;
  3517  03B3  3045               	movlw	69
  3518  03B4  00F4               	movwf	??_TMR0_Initialize
  3519  03B5  0874               	movf	??_TMR0_Initialize,w
  3520  03B6  00AE               	movwf	_timer0ReloadVal	;volatile
  3521  03B7                     l2311:	
  3522                           
  3523                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3524  03B7  110B               	bcf	11,2	;volatile
  3525  03B8                     l2313:	
  3526                           
  3527                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  3528  03B8  168B               	bsf	11,5	;volatile
  3529  03B9                     l2315:	
  3530                           
  3531                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3532  03B9  301B               	movlw	low _TMR0_DefaultInterruptHandler
  3533  03BA  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3534  03BB  3004               	movlw	high _TMR0_DefaultInterruptHandler
  3535  03BC  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3536  03BD  3184  2405  3183   	fcall	_TMR0_SetInterruptHandler
  3537  03C0                     l164:	
  3538  03C0  0008               	return
  3539  03C1                     __end_of_TMR0_Initialize:	
  3540                           
  3541                           	psect	text7
  3542  0405                     __ptext7:	
  3543 ;; *************** function _TMR0_SetInterruptHandler *****************
  3544 ;; Defined at:
  3545 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3548 ;;		 -> timer0CallBack(1), TMR0_DefaultInterruptHandler(1), 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1
  3560 ;;      Params:         2       0       0
  3561 ;;      Locals:         0       0       0
  3562 ;;      Temps:          0       0       0
  3563 ;;      Totals:         2       0       0
  3564 ;;Total ram usage:        2 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    4
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_TMR0_Initialize
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _TMR0_SetInterruptHandler
  3577  0405                     _TMR0_SetInterruptHandler:	
  3578  0405                     l2267:	
  3579                           ;incstack = 0
  3580                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3581                           
  3582                           
  3583                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  3584  0405  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3585  0406  0020               	movlb	0	; select bank0
  3586  0407  00AD               	movwf	_TMR0_InterruptHandler+1
  3587  0408  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3588  0409  00AC               	movwf	_TMR0_InterruptHandler
  3589  040A                     l183:	
  3590  040A  0008               	return
  3591  040B                     __end_of_TMR0_SetInterruptHandler:	
  3592                           
  3593                           	psect	text8
  3594  03F5                     __ptext8:	
  3595 ;; *************** function _PWM3_Initialize *****************
  3596 ;; Defined at:
  3597 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1
  3611 ;;      Params:         0       0       0
  3612 ;;      Locals:         0       0       0
  3613 ;;      Temps:          0       0       0
  3614 ;;      Totals:         0       0       0
  3615 ;;Total ram usage:        0 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    4
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_SYSTEM_Initialize
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _PWM3_Initialize
  3627  03F5                     _PWM3_Initialize:	
  3628  03F5                     l2295:	
  3629                           ;incstack = 0
  3630                           ; Regs used in _PWM3_Initialize: [wreg]
  3631                           
  3632                           
  3633                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0xC0;
  3634  03F5  30C0               	movlw	192
  3635  03F6  002C               	movlb	12	; select bank12
  3636  03F7  0099               	movwf	25	;volatile
  3637                           
  3638                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0xFF;
  3639  03F8  30FF               	movlw	255
  3640  03F9  0098               	movwf	24	;volatile
  3641                           
  3642                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  3643  03FA  30C0               	movlw	192
  3644  03FB  0097               	movwf	23	;volatile
  3645  03FC                     l110:	
  3646  03FC  0008               	return
  3647  03FD                     __end_of_PWM3_Initialize:	
  3648                           
  3649                           	psect	text9
  3650  037D                     __ptext9:	
  3651 ;; *************** function _PIN_MANAGER_Initialize *****************
  3652 ;; Defined at:
  3653 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1
  3667 ;;      Params:         0       0       0
  3668 ;;      Locals:         0       0       0
  3669 ;;      Temps:          0       0       0
  3670 ;;      Totals:         0       0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    4
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_SYSTEM_Initialize
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function _PIN_MANAGER_Initialize
  3683  037D                     _PIN_MANAGER_Initialize:	
  3684  037D                     l2277:	
  3685                           ;incstack = 0
  3686                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3687                           
  3688                           
  3689                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3690  037D  0022               	movlb	2	; select bank2
  3691  037E  018C               	clrf	12	;volatile
  3692                           
  3693                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3694  037F  018D               	clrf	13	;volatile
  3695                           
  3696                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3697  0380  018E               	clrf	14	;volatile
  3698  0381                     l2279:	
  3699                           
  3700                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3B;
  3701  0381  303B               	movlw	59
  3702  0382  0021               	movlb	1	; select bank1
  3703  0383  008C               	movwf	12	;volatile
  3704  0384                     l2281:	
  3705                           
  3706                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x10;
  3707  0384  3010               	movlw	16
  3708  0385  008D               	movwf	13	;volatile
  3709                           
  3710                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  3711  0386  018E               	clrf	14	;volatile
  3712                           
  3713                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  3714  0387  0023               	movlb	3	; select bank3
  3715  0388  018E               	clrf	14	;volatile
  3716  0389                     l2283:	
  3717                           
  3718                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
  3719  0389  3030               	movlw	48
  3720  038A  008D               	movwf	13	;volatile
  3721  038B                     l2285:	
  3722                           
  3723                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x13;
  3724  038B  3013               	movlw	19
  3725  038C  008C               	movwf	12	;volatile
  3726                           
  3727                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3728  038D  0024               	movlb	4	; select bank4
  3729  038E  018D               	clrf	13	;volatile
  3730                           
  3731                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3732  038F  018C               	clrf	12	;volatile
  3733  0390                     l2287:	
  3734                           
  3735                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  3736  0390  0021               	movlb	1	; select bank1
  3737  0391  1795               	bsf	21,7	;volatile
  3738                           
  3739                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  3740  0392  0022               	movlb	2	; select bank2
  3741  0393  019D               	clrf	29	;volatile
  3742  0394                     l98:	
  3743  0394  0008               	return
  3744  0395                     __end_of_PIN_MANAGER_Initialize:	
  3745                           
  3746                           	psect	text10
  3747  040B                     __ptext10:	
  3748 ;; *************** function _OSCILLATOR_Initialize *****************
  3749 ;; Defined at:
  3750 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1
  3764 ;;      Params:         0       0       0
  3765 ;;      Locals:         0       0       0
  3766 ;;      Temps:          0       0       0
  3767 ;;      Totals:         0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    4
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_SYSTEM_Initialize
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           
  3779                           ;psect for function _OSCILLATOR_Initialize
  3780  040B                     _OSCILLATOR_Initialize:	
  3781  040B                     l2289:	
  3782                           ;incstack = 0
  3783                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3784                           
  3785                           
  3786                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x6A;
  3787  040B  306A               	movlw	106
  3788  040C  0021               	movlb	1	; select bank1
  3789  040D  0099               	movwf	25	;volatile
  3790  040E                     l2291:	
  3791                           
  3792                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3793  040E  0022               	movlb	2	; select bank2
  3794  040F  0196               	clrf	22	;volatile
  3795  0410                     l66:	
  3796  0410  0008               	return
  3797  0411                     __end_of_OSCILLATOR_Initialize:	
  3798                           
  3799                           	psect	text11
  3800  03E4                     __ptext11:	
  3801 ;; *************** function _ADC_Initialize *****************
  3802 ;; Defined at:
  3803 ;;		line 67 in file "mcc_generated_files/adc.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1
  3817 ;;      Params:         0       0       0
  3818 ;;      Locals:         0       0       0
  3819 ;;      Temps:          0       0       0
  3820 ;;      Totals:         0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    4
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_SYSTEM_Initialize
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           
  3832                           ;psect for function _ADC_Initialize
  3833  03E4                     _ADC_Initialize:	
  3834  03E4                     l2269:	
  3835                           ;incstack = 0
  3836                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3837                           
  3838                           
  3839                           ;mcc_generated_files/adc.c: 72:     ADCON0 = 0x01;
  3840  03E4  3001               	movlw	1
  3841  03E5  0021               	movlb	1	; select bank1
  3842  03E6  009D               	movwf	29	;volatile
  3843                           
  3844                           ;mcc_generated_files/adc.c: 75:     ADCON1 = 0xC0;
  3845  03E7  30C0               	movlw	192
  3846  03E8  009E               	movwf	30	;volatile
  3847  03E9                     l2271:	
  3848                           
  3849                           ;mcc_generated_files/adc.c: 78:     ADCON2 = 0x00;
  3850  03E9  019F               	clrf	31	;volatile
  3851  03EA                     l2273:	
  3852                           
  3853                           ;mcc_generated_files/adc.c: 81:     ADRESL = 0x00;
  3854  03EA  019B               	clrf	27	;volatile
  3855  03EB                     l2275:	
  3856                           
  3857                           ;mcc_generated_files/adc.c: 84:     ADRESH = 0x00;
  3858  03EB  019C               	clrf	28	;volatile
  3859  03EC                     l19:	
  3860  03EC  0008               	return
  3861  03ED                     __end_of_ADC_Initialize:	
  3862                           
  3863                           	psect	text12
  3864  03C1                     __ptext12:	
  3865 ;; *************** function _PWM3_LoadDutyValue *****************
  3866 ;; Defined at:
  3867 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  dutyValue       2    2[COMMON] unsigned short 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1
  3881 ;;      Params:         2       0       0
  3882 ;;      Locals:         0       0       0
  3883 ;;      Temps:          2       0       0
  3884 ;;      Totals:         4       0       0
  3885 ;;Total ram usage:        4 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    4
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_main
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           
  3896                           ;psect for function _PWM3_LoadDutyValue
  3897  03C1                     _PWM3_LoadDutyValue:	
  3898  03C1                     l2331:	
  3899                           ;incstack = 0
  3900                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  3901                           
  3902                           
  3903                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3904  03C1  0873               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  3905  03C2  00F5               	movwf	??_PWM3_LoadDutyValue+1
  3906  03C3  0872               	movf	PWM3_LoadDutyValue@dutyValue,w
  3907  03C4  00F4               	movwf	??_PWM3_LoadDutyValue
  3908  03C5  36F5               	lsrf	??_PWM3_LoadDutyValue+1,f
  3909  03C6  0CF4               	rrf	??_PWM3_LoadDutyValue,f
  3910  03C7  36F5               	lsrf	??_PWM3_LoadDutyValue+1,f
  3911  03C8  0CF4               	rrf	??_PWM3_LoadDutyValue,f
  3912  03C9  0874               	movf	??_PWM3_LoadDutyValue,w
  3913  03CA  002C               	movlb	12	; select bank12
  3914  03CB  0098               	movwf	24	;volatile
  3915                           
  3916                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  3917  03CC  0872               	movf	PWM3_LoadDutyValue@dutyValue,w
  3918  03CD  3903               	andlw	3
  3919  03CE  00F4               	movwf	??_PWM3_LoadDutyValue
  3920  03CF  3005               	movlw	5
  3921  03D0                     u1075:	
  3922  03D0  35F4               	lslf	??_PWM3_LoadDutyValue,f
  3923  03D1  3EFF               	addlw	-1
  3924  03D2  1D03               	skipz
  3925  03D3  2BD0               	goto	u1075
  3926  03D4  3574               	lslf	??_PWM3_LoadDutyValue,w
  3927  03D5  0097               	movwf	23	;volatile
  3928  03D6                     l113:	
  3929  03D6  0008               	return
  3930  03D7                     __end_of_PWM3_LoadDutyValue:	
  3931                           
  3932                           	psect	text13
  3933  0363                     __ptext13:	
  3934 ;; *************** function _ADC_GetConversion *****************
  3935 ;; Defined at:
  3936 ;;		line 115 in file "mcc_generated_files/adc.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  channel         1    wreg     enum E2336
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  channel         1    5[COMMON] enum E2336
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  2    2[COMMON] unsigned short 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1
  3950 ;;      Params:         2       0       0
  3951 ;;      Locals:         1       0       0
  3952 ;;      Temps:          1       0       0
  3953 ;;      Totals:         4       0       0
  3954 ;;Total ram usage:        4 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    4
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_main
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           
  3965                           ;psect for function _ADC_GetConversion
  3966  0363                     _ADC_GetConversion:	
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3970                           ;ADC_GetConversion@channel stored from wreg
  3971  0363  00F5               	movwf	ADC_GetConversion@channel
  3972  0364                     l2317:	
  3973                           
  3974                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  3975  0364  0875               	movf	ADC_GetConversion@channel,w
  3976  0365  00F4               	movwf	??_ADC_GetConversion
  3977  0366  0DF4               	rlf	??_ADC_GetConversion,f
  3978  0367  0DF4               	rlf	??_ADC_GetConversion,f
  3979  0368  0021               	movlb	1	; select bank1
  3980  0369  081D               	movf	29,w	;volatile
  3981  036A  0674               	xorwf	??_ADC_GetConversion,w
  3982  036B  3983               	andlw	-125
  3983  036C  0674               	xorwf	??_ADC_GetConversion,w
  3984  036D  009D               	movwf	29	;volatile
  3985  036E                     l2319:	
  3986                           
  3987                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  3988  036E  141D               	bsf	29,0	;volatile
  3989  036F                     l2321:	
  3990                           
  3991                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3992  036F  3200               	nop2	;2 cycle nop
  3993  0370  3200               	nop2	;2 cycle nop
  3994  0371  0000               	nop
  3995  0372                     l2323:	
  3996                           
  3997                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  3998  0372  0021               	movlb	1	; select bank1
  3999  0373  149D               	bsf	29,1	;volatile
  4000  0374                     l34:	
  4001                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  4002                           
  4003                           
  4004                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  4005  0374  189D               	btfsc	29,1	;volatile
  4006  0375  2B77               	goto	u1061
  4007  0376  2B78               	goto	u1060
  4008  0377                     u1061:	
  4009  0377  2B74               	goto	l34
  4010  0378                     u1060:	
  4011  0378                     l2325:	
  4012                           
  4013                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4014  0378  081C               	movf	28,w	;volatile
  4015  0379  00F3               	movwf	?_ADC_GetConversion+1
  4016  037A  081B               	movf	27,w	;volatile
  4017  037B  00F2               	movwf	?_ADC_GetConversion
  4018  037C                     l37:	
  4019  037C  0008               	return
  4020  037D                     __end_of_ADC_GetConversion:	
  4021                           
  4022                           	psect	intentry
  4023  0004                     __pintentry:	
  4024 ;; *************** function _INTERRUPT_InterruptManager *****************
  4025 ;; Defined at:
  4026 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1
  4040 ;;      Params:         0       0       0
  4041 ;;      Locals:         0       0       0
  4042 ;;      Temps:          0       0       0
  4043 ;;      Totals:         0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    3
  4047 ;; This function calls:
  4048 ;;		_TMR0_ISR
  4049 ;; This function is called by:
  4050 ;;		Interrupt level 1
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054  0004                     _INTERRUPT_InterruptManager:	
  4055                           
  4056                           ;incstack = 0
  4057  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4058                           
  4059                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4060  0005  3180               	pagesel	$
  4061  0006                     i1l2037:	
  4062                           
  4063                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4064  0006  1E8B               	btfss	11,5	;volatile
  4065  0007  2809               	goto	u66_21
  4066  0008  280A               	goto	u66_20
  4067  0009                     u66_21:	
  4068  0009  2811               	goto	i1l197
  4069  000A                     u66_20:	
  4070  000A                     i1l2039:	
  4071  000A  1D0B               	btfss	11,2	;volatile
  4072  000B  280D               	goto	u67_21
  4073  000C  280E               	goto	u67_20
  4074  000D                     u67_21:	
  4075  000D  2811               	goto	i1l197
  4076  000E                     u67_20:	
  4077  000E                     i1l2041:	
  4078                           
  4079                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4080  000E  3183  23FD  3180   	fcall	_TMR0_ISR
  4081  0011                     i1l197:	
  4082                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4083                           
  4084  0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4085  0012  0009               	retfie
  4086  0013                     __end_of_INTERRUPT_InterruptManager:	
  4087                           
  4088                           	psect	text15
  4089  03FD                     __ptext15:	
  4090 ;; *************** function _TMR0_ISR *****************
  4091 ;; Defined at:
  4092 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1
  4106 ;;      Params:         0       0       0
  4107 ;;      Locals:         0       0       0
  4108 ;;      Temps:          0       0       0
  4109 ;;      Totals:         0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    2
  4113 ;; This function calls:
  4114 ;;		_TMR0_CallBack
  4115 ;; This function is called by:
  4116 ;;		_INTERRUPT_InterruptManager
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _TMR0_ISR
  4122  03FD                     _TMR0_ISR:	
  4123  03FD                     i1l2015:	
  4124                           ;incstack = 0
  4125                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4126                           
  4127                           
  4128                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  4129  03FD  110B               	bcf	11,2	;volatile
  4130  03FE                     i1l2017:	
  4131                           
  4132                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  4133  03FE  0020               	movlb	0	; select bank0
  4134  03FF  082E               	movf	_timer0ReloadVal,w	;volatile
  4135  0400  0095               	movwf	21	;volatile
  4136  0401                     i1l2019:	
  4137                           
  4138                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
  4139  0401  3183  23D7  3183   	fcall	_TMR0_CallBack
  4140  0404                     i1l176:	
  4141  0404  0008               	return
  4142  0405                     __end_of_TMR0_ISR:	
  4143                           
  4144                           	psect	text16
  4145  03D7                     __ptext16:	
  4146 ;; *************** function _TMR0_CallBack *****************
  4147 ;; Defined at:
  4148 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1
  4162 ;;      Params:         0       0       0
  4163 ;;      Locals:         0       0       0
  4164 ;;      Temps:          0       0       0
  4165 ;;      Totals:         0       0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    1
  4169 ;; This function calls:
  4170 ;;		Absolute function
  4171 ;;		_TMR0_DefaultInterruptHandler
  4172 ;;		_timer0CallBack
  4173 ;; This function is called by:
  4174 ;;		_TMR0_ISR
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _TMR0_CallBack
  4180  03D7                     _TMR0_CallBack:	
  4181  03D7                     i1l1993:	
  4182                           ;incstack = 0
  4183                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4184                           
  4185                           
  4186                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
  4187  03D7  0020               	movlb	0	; select bank0
  4188  03D8  082C               	movf	_TMR0_InterruptHandler,w
  4189  03D9  042D               	iorwf	_TMR0_InterruptHandler+1,w
  4190  03DA  1903               	btfsc	3,2
  4191  03DB  2BDD               	goto	u62_21
  4192  03DC  2BDE               	goto	u62_20
  4193  03DD                     u62_21:	
  4194  03DD  2BE3               	goto	i1l180
  4195  03DE                     u62_20:	
  4196  03DE                     i1l1995:	
  4197                           
  4198                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
  4199  03DE  082D               	movf	_TMR0_InterruptHandler+1,w
  4200  03DF  008A               	movwf	10
  4201  03E0  082C               	movf	_TMR0_InterruptHandler,w
  4202  03E1  000A               	callw
  4203  03E2  3183               	pagesel	$
  4204  03E3                     i1l180:	
  4205  03E3  0008               	return
  4206  03E4                     __end_of_TMR0_CallBack:	
  4207                           
  4208                           	psect	text17
  4209  041B                     __ptext17:	
  4210 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4211 ;; Defined at:
  4212 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		None
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1
  4226 ;;      Params:         0       0       0
  4227 ;;      Locals:         0       0       0
  4228 ;;      Temps:          0       0       0
  4229 ;;      Totals:         0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_TMR0_Initialize
  4236 ;;		_TMR0_CallBack
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           
  4241                           ;psect for function _TMR0_DefaultInterruptHandler
  4242  041B                     _TMR0_DefaultInterruptHandler:	
  4243  041B                     i1l186:	
  4244                           ;incstack = 0
  4245                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4246                           
  4247  041B  0008               	return
  4248  041C                     __end_of_TMR0_DefaultInterruptHandler:	
  4249                           
  4250                           	psect	text18
  4251  02A8                     __ptext18:	
  4252 ;; *************** function _timer0CallBack *****************
  4253 ;; Defined at:
  4254 ;;		line 70 in file "main.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1
  4268 ;;      Params:         0       0       0
  4269 ;;      Locals:         0       0       0
  4270 ;;      Temps:          2       0       0
  4271 ;;      Totals:         2       0       0
  4272 ;;Total ram usage:        2 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_main
  4278 ;;		_TMR0_CallBack
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _timer0CallBack
  4284  02A8                     _timer0CallBack:	
  4285  02A8                     i1l1901:	
  4286                           ;incstack = 0
  4287                           ; Regs used in _timer0CallBack: [wreg-fsr0h+status,2+status,0]
  4288                           
  4289                           
  4290                           ;main.c: 73:     msTick++;
  4291  02A8  3001               	movlw	1
  4292  02A9  0020               	movlb	0	; select bank0
  4293  02AA  07A0               	addwf	_msTick,f	;volatile
  4294  02AB  3000               	movlw	0
  4295  02AC  3DA1               	addwfc	_msTick+1,f	;volatile
  4296  02AD  3000               	movlw	0
  4297  02AE  3DA2               	addwfc	_msTick+2,f	;volatile
  4298  02AF  3000               	movlw	0
  4299  02B0  3DA3               	addwfc	_msTick+3,f	;volatile
  4300  02B1                     i1l1903:	
  4301                           
  4302                           ;main.c: 75:     if(msTick > 1023)
  4303  02B1  0823               	movf	_msTick+3,w	;volatile
  4304  02B2  1D03               	btfss	3,2
  4305  02B3  2ABF               	goto	u56_20
  4306  02B4  0822               	movf	_msTick+2,w	;volatile
  4307  02B5  1D03               	btfss	3,2
  4308  02B6  2ABF               	goto	u56_20
  4309  02B7  3000               	movlw	0
  4310  02B8  0220               	subwf	_msTick,w	;volatile
  4311  02B9  3004               	movlw	4
  4312  02BA  3B21               	subwfb	_msTick+1,w	;volatile
  4313  02BB  1C03               	btfss	3,0
  4314  02BC  2ABE               	goto	u56_21
  4315  02BD  2ABF               	goto	u56_20
  4316  02BE                     u56_21:	
  4317  02BE  2ACB               	goto	i1l1907
  4318  02BF                     u56_20:	
  4319  02BF                     i1l1905:	
  4320                           
  4321                           ;main.c: 76:     {;main.c: 77:         doToggle = 1;
  4322  02BF  3001               	movlw	1
  4323  02C0  00F0               	movwf	??_timer0CallBack
  4324  02C1  0870               	movf	??_timer0CallBack,w
  4325  02C2  00F9               	movwf	_doToggle	;volatile
  4326                           
  4327                           ;main.c: 78:         msTick = 0;
  4328  02C3  3000               	movlw	0
  4329  02C4  00A3               	movwf	_msTick+3	;volatile
  4330  02C5  3000               	movlw	0
  4331  02C6  00A2               	movwf	_msTick+2	;volatile
  4332  02C7  3000               	movlw	0
  4333  02C8  00A1               	movwf	_msTick+1	;volatile
  4334  02C9  3000               	movlw	0
  4335  02CA  00A0               	movwf	_msTick	;volatile
  4336  02CB                     i1l1907:	
  4337  02CB  0022               	movlb	2	; select bank2
  4338  02CC  100E               	bcf	14,0	;volatile
  4339  02CD                     i1l1909:	
  4340  02CD  108E               	bcf	14,1	;volatile
  4341  02CE                     i1l1911:	
  4342  02CE  110E               	bcf	14,2	;volatile
  4343  02CF                     i1l1913:	
  4344  02CF  118E               	bcf	14,3	;volatile
  4345  02D0                     i1l1915:	
  4346  02D0  120E               	bcf	14,4	;volatile
  4347  02D1                     i1l1917:	
  4348  02D1  128E               	bcf	14,5	;volatile
  4349  02D2                     i1l1919:	
  4350  02D2  130E               	bcf	14,6	;volatile
  4351  02D3                     i1l1921:	
  4352  02D3  138E               	bcf	14,7	;volatile
  4353  02D4                     i1l1923:	
  4354  02D4  128D               	bcf	13,5	;volatile
  4355  02D5                     i1l1925:	
  4356  02D5  130D               	bcf	13,6	;volatile
  4357  02D6                     i1l1927:	
  4358  02D6  138D               	bcf	13,7	;volatile
  4359  02D7  2AF0               	goto	i1l1931
  4360  02D8                     i1l294:	
  4361                           ;main.c: 95:     {;main.c: 96:         case 0:
  4362                           
  4363                           
  4364                           ;main.c: 97:             if(ledBitMap & 0b00000000001)
  4365  02D8  1C7A               	btfss	_ledBitMap,0	;volatile
  4366  02D9  2ADB               	goto	u57_21
  4367  02DA  2ADC               	goto	u57_20
  4368  02DB                     u57_21:	
  4369  02DB  2B06               	goto	i1l1933
  4370  02DC                     u57_20:	
  4371  02DC                     i1l296:	
  4372                           ;main.c: 98:                 do { LATCbits.LATC0 = 1; } while(0);
  4373                           
  4374  02DC  140E               	bsf	14,0	;volatile
  4375  02DD  2B06               	goto	i1l1933
  4376  02DE                     i1l299:	
  4377                           ;main.c: 101:         case 1:
  4378                           
  4379                           
  4380                           ;main.c: 102:             if(ledBitMap & 0b00000000010)
  4381  02DE  1CFA               	btfss	_ledBitMap,1	;volatile
  4382  02DF  2AE1               	goto	u58_21
  4383  02E0  2AE2               	goto	u58_20
  4384  02E1                     u58_21:	
  4385  02E1  2B06               	goto	i1l1933
  4386  02E2                     u58_20:	
  4387  02E2                     i1l301:	
  4388                           ;main.c: 103:                 do { LATCbits.LATC1 = 1; } while(0);
  4389                           
  4390  02E2  148E               	bsf	14,1	;volatile
  4391  02E3  2B06               	goto	i1l1933
  4392  02E4                     i1l303:	
  4393                           ;main.c: 106:         case 2:
  4394                           
  4395                           
  4396                           ;main.c: 107:             if(ledBitMap & 0b00000000100)
  4397  02E4  1D7A               	btfss	_ledBitMap,2	;volatile
  4398  02E5  2AE7               	goto	u59_21
  4399  02E6  2AE8               	goto	u59_20
  4400  02E7                     u59_21:	
  4401  02E7  2B06               	goto	i1l1933
  4402  02E8                     u59_20:	
  4403  02E8                     i1l305:	
  4404                           ;main.c: 108:                 do { LATCbits.LATC2 = 1; } while(0);
  4405                           
  4406  02E8  150E               	bsf	14,2	;volatile
  4407  02E9  2B06               	goto	i1l1933
  4408  02EA                     i1l307:	
  4409                           ;main.c: 111:         case 3:
  4410                           
  4411                           
  4412                           ;main.c: 112:             if(ledBitMap & 0b00000001000)
  4413  02EA  1DFA               	btfss	_ledBitMap,3	;volatile
  4414  02EB  2AED               	goto	u60_21
  4415  02EC  2AEE               	goto	u60_20
  4416  02ED                     u60_21:	
  4417  02ED  2B06               	goto	i1l1933
  4418  02EE                     u60_20:	
  4419  02EE                     i1l309:	
  4420                           ;main.c: 113:                 do { LATCbits.LATC3 = 1; } while(0);
  4421                           
  4422  02EE  158E               	bsf	14,3	;volatile
  4423  02EF  2B06               	goto	i1l1933
  4424  02F0                     i1l1931:	
  4425  02F0  0878               	movf	_ledBitIndex,w	;volatile
  4426  02F1  00F0               	movwf	??_timer0CallBack
  4427  02F2  01F1               	clrf	??_timer0CallBack+1
  4428                           
  4429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4430                           ; Switch size 1, requested type "simple"
  4431                           ; Number of cases is 1, Range of values is 0 to 0
  4432                           ; switch strategies available:
  4433                           ; Name         Instructions Cycles
  4434                           ; simple_byte            4     3 (average)
  4435                           ; direct_byte            8     6 (fixed)
  4436                           ; jumptable            260     6 (fixed)
  4437                           ;	Chosen strategy is simple_byte
  4438  02F3  0871               	movf	??_timer0CallBack+1,w
  4439  02F4  3A00               	xorlw	0	; case 0
  4440  02F5  1903               	skipnz
  4441  02F6  2AF8               	goto	i1l2579
  4442  02F7  2B06               	goto	i1l1933
  4443  02F8                     i1l2579:	
  4444                           
  4445                           ; Switch size 1, requested type "simple"
  4446                           ; Number of cases is 4, Range of values is 0 to 3
  4447                           ; switch strategies available:
  4448                           ; Name         Instructions Cycles
  4449                           ; simple_byte           13     7 (average)
  4450                           ; direct_byte           14     6 (fixed)
  4451                           ; jumptable            260     6 (fixed)
  4452                           ;	Chosen strategy is simple_byte
  4453  02F8  0870               	movf	??_timer0CallBack,w
  4454  02F9  3A00               	xorlw	0	; case 0
  4455  02FA  1903               	skipnz
  4456  02FB  2AD8               	goto	i1l294
  4457  02FC  3A01               	xorlw	1	; case 1
  4458  02FD  1903               	skipnz
  4459  02FE  2ADE               	goto	i1l299
  4460  02FF  3A03               	xorlw	3	; case 2
  4461  0300  1903               	skipnz
  4462  0301  2AE4               	goto	i1l303
  4463  0302  3A01               	xorlw	1	; case 3
  4464  0303  1903               	skipnz
  4465  0304  2AEA               	goto	i1l307
  4466  0305  2B06               	goto	i1l1933
  4467  0306                     i1l1933:	
  4468                           
  4469                           ;main.c: 117:     ledBitIndex++;
  4470  0306  3001               	movlw	1
  4471  0307  00F0               	movwf	??_timer0CallBack
  4472  0308  0870               	movf	??_timer0CallBack,w
  4473  0309  07F8               	addwf	_ledBitIndex,f	;volatile
  4474  030A                     i1l1935:	
  4475                           
  4476                           ;main.c: 119:     if(ledBitIndex > 10)
  4477  030A  300B               	movlw	11
  4478  030B  0278               	subwf	_ledBitIndex,w	;volatile
  4479  030C  1C03               	skipc
  4480  030D  2B0F               	goto	u61_21
  4481  030E  2B10               	goto	u61_20
  4482  030F                     u61_21:	
  4483  030F  2B11               	goto	i1l312
  4484  0310                     u61_20:	
  4485  0310                     i1l1937:	
  4486                           
  4487                           ;main.c: 120:     {;main.c: 121:         ledBitIndex = 0;
  4488  0310  01F8               	clrf	_ledBitIndex	;volatile
  4489  0311                     i1l312:	
  4490  0311  0008               	return
  4491  0312                     __end_of_timer0CallBack:	
  4492  007E                     btemp	set	126	;btemp
  4493  007E                     int$flags	set	126
  4494  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         14
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      2      18
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0CallBack(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0CallBack(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _main->_PWM3_LoadDutyValue
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_CallBack->_timer0CallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1259
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR2_StartTimer
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             3     3      0      93
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     152
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _timer0CallBack *
 ---------------------------------------------------------------------------------
 (7) _timer0CallBack                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR2_StartTimer
   _setState

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _timer0CallBack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      12       6       22.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      1E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 13 22:17:20 2020

                                       _i 0024                               __CFG_CP$OFF 0000  
                                      l34 0374                                        l19 03EC  
                                      l37 037C                                        l63 03AA  
                                      l66 0410                                        l69 0414  
                                      l98 0394                           _timer0ReloadVal 002E  
                                     l110 03FC                                       l113 03D6  
                                     l126 03F4                                       l129 0417  
                                     l321 031D                                       l401 0065  
                                     l331 0322                                       l323 031E  
                                     l164 03C0                                       l316 0362  
                                     l500 011D                                       l404 006D  
                                     l333 0323                                       l325 031F  
                                     l421 00A0                                       l510 0122  
                                     l502 011E                                       l183 040A  
                                     l351 032D                                       l343 0328  
                                     l335 0324                                       l327 0320  
                                     l319 031B                                       l431 00A5  
                                     l423 00A1                                       l415 009C  
                                     l600 0177                                       l520 0130  
                                     l512 0123                                       l504 011F  
                                     l361 0332                                       l353 032E  
                                     l345 032A                                       l337 0325  
                                     l329 0321                                       l433 00A6  
                                     l425 00A2                                       l417 009E  
                                     l370 0338                                       l610 017C  
                                     l602 0178                                       l530 0136  
                                     l522 0132                                       l514 0124  
                                     l506 0120                                       l450 00F0  
                                     l363 0333                                       l355 032F  
                                     l347 032B                                       l339 0326  
                                     l435 00A7                                       l427 00A3  
                                     l419 009F                                       l380 033D  
                                     l372 0339                                       l700 01D1  
                                     l620 018B                                       l612 017D  
                                     l604 0179                                       l540 013B  
                                     l532 0137                                       l524 0133  
                                     l516 0125                                       l508 0121  
                                     l460 00F5                                       l452 00F1  
                                     l357 0330                                       l349 032C  
                                     l429 00A4                                       l382 033E  
                                     l374 033A                                       l366 0335  
                                     l702 01D2                                       l630 0190  
                                     l622 018C                                       l606 017A  
                                     l550 014A                                       l534 0138  
                                     l526 0134                                       l462 00F6  
                                     l454 00F2                                       l359 0331  
                                     l384 033F                                       l376 033B  
                                     l368 0337                                       l800 022B  
                                     l720 01E5                                       l712 01E0  
                                     l704 01D3                                       l640 019E  
                                     l632 0191                                       l624 018D  
                                     l616 0188                                       l608 017B  
                                     l560 014F                                       l552 014B  
                                     l544 0146                                       l536 0139  
                                     l528 0135                                       l480 0109  
                                     l472 0104                                       l464 00F7  
                                     l456 00F3                                       l448 00EE  
                                     l386 0340                                       l378 033C  
                                     l802 022C                                       l730 01EA  
                                     l722 01E6                                       l714 01E2  
                                     l706 01D4                                       l650 01A4  
                                     l642 01A0                                       l634 0192  
                                     l626 018E                                       l618 018A  
                                     l570 015E                                       l562 0150  
                                     l554 014C                                       l546 0148  
                                     l538 013A                                       l490 010E  
                                     l482 010A                                       l474 0106  
                                     l466 00F8                                       l458 00F4  
                                     l811 0232                                       l804 022D  
                                     l740 01F9                                       l732 01EB  
                                     l724 01E7                                       l716 01E3  
                                     l708 01D5                                       l660 01A9  
                                     l652 01A5                                       l644 01A1  
                                     l636 0193                                       l628 018F  
                                     l580 0163                                       l572 015F  
                                     l564 0151                                       l556 014D  
                                     l548 0149                                       l492 010F  
                                     l484 010B                                       l476 0107  
                                     l468 00F9                                       l821 0237  
                                     l813 0233                                       l750 01FE  
                                     l742 01FA                                       l726 01E8  
                                     l718 01E4                                       l670 01B8  
                                     l654 01A6                                       l646 01A2  
                                     l582 0164                                       l574 0160  
                                     l558 014E                                       l486 010C  
                                     l478 0108                                       l823 0238  
                                     l815 0234                                       l807 022F  
                                     l760 020C                                       l752 01FF  
                                     l744 01FB                                       l736 01F6  
                                     l728 01E9                                       l680 01BD  
                                     l672 01B9                                       l664 01B4  
                                     l656 01A7                                       l648 01A3  
                                     l592 0172                                       l584 0165  
                                     l576 0161                                       l568 015C  
                                     l496 011A                                       l488 010D  
                                     l833 024D                                       l825 0239  
                                     l817 0235                                       l809 0231  
                                     l770 0212                                       l762 020E  
                                     l754 0200                                       l746 01FC  
                                     l738 01F8                                       l690 01CC  
                                     l682 01BE                                       l674 01BA  
                                     l666 01B6                                       l658 01A8  
                                     l594 0174                                       l586 0166  
                                     l578 0162                                       l498 011C  
                                     l843 0280                                       l835 0258  
                                     l827 023A                                       l819 0236  
                                     l780 0217                                       l772 0213  
                                     l764 020F                                       l756 0201  
                                     l748 01FD                                       l692 01CD  
                                     l684 01BF                                       l676 01BB  
                                     l668 01B7                                       l596 0175  
                                     l588 0167                                       l845 0282  
                                     l837 0263                                       l790 0226  
                                     l774 0214                                       l766 0210  
                                     l694 01CE                                       l678 01BC  
                                     l598 0176                                       l847 0283  
                                     l839 026E                                       l792 0227  
                                     l784 0222                                       l776 0215  
                                     l768 0211                                       l696 01CF  
                                     l688 01CA                                       l849 0284  
                                     l794 0228                                       l786 0224  
                                     l778 0216                                       l698 01D0  
                                     l796 0229                                       l788 0225  
                                     l798 022A                                       _PR2 001B  
                         _TMR2_Initialize 03ED                              __CFG_BORV$LO 0000  
                             main@channel 0031                              __CFG_LVP$OFF 0000  
                                    l2301 03F1                                      l2311 03B7  
                                    l2303 03F2                                      l2321 036F  
                                    l2313 03B8                                      l2305 03AB  
                                    l2401 00DB                                      l2323 0372  
                                    l2331 03C1                                      l2315 03B9  
                                    l2307 03B0                                      l2411 0127  
                                    l2325 0378                                      l2317 0364  
                                    l2309 03B3                                      l2333 0415  
                                    l2341 0342                                      l2421 0195  
                                    l2413 013D                                      l2405 00E5  
                                    l2319 036E                                      l2271 03E9  
                                    l2343 0355                                      l2335 0313  
                                    l2431 0203                                      l2423 01AB  
                                    l2415 0153                                      l2407 00FB  
                                    l2351 0034                                      l2273 03EA  
                                    l2281 0384                                      l2329 0395  
                                    l2441 027B                                      l2433 0219  
                                    l2425 01C1                                      l2417 0169  
                                    l2409 0111                                      l2361 004A  
                                    l2353 0035                                      l2275 03EB  
                                    l2291 040E                                      l2283 0389  
                                    l2267 0405                                      l2443 0285  
                                    l2435 023C                                      l2427 01D7  
                                    l2419 017F                                      l2371 0067  
                                    l2363 004F                                      l2355 0039  
                                    l2269 03E4                                      l2285 038B  
                                    l2277 037D                                      l2293 0411  
                                    l2437 0241                                      l2429 01ED  
                                    l2365 0053                                      l2357 0040  
                                    l2349 0031                                      l2287 0390  
                                    l2279 0381                                      l2295 03F5  
                                    l2439 0279                                      l2391 00AF  
                                    l2375 0072                                      l2383 0081  
                                    l2367 005C                                      l2359 0043  
                                    l2289 040B                                      l2297 03ED  
                                    l2393 00B7                                      l2377 0077  
                                    l2385 0094                                      l2449 0291  
                                    l2369 0060                                      l2299 03F0  
                                    l2395 00C8                                      l2387 0097  
                                    l2379 007C                                      l2397 00CD  
                                    l2389 00A9                                      l2573 0089  
                                    l2575 0299                                      l2399 00D6  
                                    l2577 034A                                      u1100 0060  
                                    u1101 005F                                      u1110 006D  
                                    u1111 006C                                      u1200 011A  
                                    u1120 0071                                      u1201 0119  
                                    u1121 0070                                      u1210 0130  
                                    u1130 009C                                      u1211 012F  
                                    u1131 009B                                      u1060 0378  
                                    u1300 01F6                                      u1220 0146  
                                    u1140 00AF                                      u1061 0377  
                                    u1301 01F5                                      u1221 0145  
                                    u1141 00AE                                      u1310 020C  
                                    u1230 015C                                      u1150 00C8  
                                    u1311 020B                                      u1231 015B  
                                    u1151 00C7                                      u1080 031A  
                                    u1400 026C                                      u1320 0222  
                                    u1240 0172                                      u1160 00D6  
                                    u1081 0319                                      u1401 0269  
                                    u1321 0221                                      u1241 0171  
                                    u1161 00D5                                      u1330 0241  
                                    u1250 0188                                      u1170 00E4  
                                    u1090 004A                                      u1075 03D0  
                                    u1331 0240                                      u1251 0187  
                                    u1171 00E3                                      u1091 0049  
                                    u1420 0277                                      u1340 024B  
                                    u1260 019E                                      u1180 00EE  
                                    u1421 0274                                      u1341 0248  
                                    u1261 019D                                      u1181 00ED  
                                    _LATA 010C                                      u1414 026E  
                                    u1270 01B4                                      u1190 0104  
                                    _LATB 010D                                      u1271 01B3  
                                    u1191 0103                                      _LATC 010E  
                                    u1440 0280                                      u1360 0256  
                                    u1280 01CA                                      u1441 027F  
                                    u1361 0253                                      u1281 01C9  
                                    u1450 028E                                      u1434 0279  
                                    u1354 024D                                      u1290 01E0  
                                    u1451 028B                                      u1291 01DF  
                                    u1380 0261                                      u1381 025E  
                                    u1374 0258                                      u1464 0290  
                                    u1394 0263                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUB 020D                              __CFG_WRT$OFF 0000  
                                    _main 0031                                      btemp 007E  
                           __CFG_BOREN$ON 0000                              main@adcValue 002F  
                                    start 0013                             __CFG_MCLRE$ON 0000  
                 __end_of_TMR0_Initialize 03C1            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0006             __end_of_OSCILLATOR_Initialize 0411  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                                   _T2CON 001C                                     i1l301 02E2  
                                   i1l303 02E4                                     i1l312 0311  
                                   i1l305 02E8                                     i1l307 02EA  
                                   i1l180 03E3                                     i1l309 02EE  
                                   i1l176 0404                                     i1l186 041B  
                                   i1l197 0011                                     i1l294 02D8  
                                   i1l296 02DC                                     i1l299 02DE  
                                   u60_20 02EE                                     u60_21 02ED  
                                   u61_20 0310                                     u61_21 030F  
                                   u62_20 03DE                                     u62_21 03DD  
                                   u56_20 02BF                                     u56_21 02BE  
                                   u57_20 02DC                                     u57_21 02DB  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     u58_20 02E2  
                                   u66_20 000A                                     u58_21 02E1  
                                   u66_21 0009                                     u59_20 02E8  
                                   u67_20 000E                                     u59_21 02E7  
                                   u67_21 000D         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0072                          __end_of_TMR0_ISR 0405  
                          _WDT_Initialize 0411                   __end_of_PWM3_Initialize 03FD  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 0415  
                         __initialization 0014                              __end_of_main 02A8  
                 __end_of_TMR2_Initialize 03F5                            __CFG_LPBOR$OFF 0000  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 0076  
                  __end_of_WDT_Initialize 0415                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _BORCON 0116                                    i1l2015 03FD  
                                  i1l2017 03FE                                    i1l2041 000E  
                                  i1l2019 0401                                    i1l2037 0006  
                                  i1l2039 000A                                    i1l1901 02A8  
                                  i1l1911 02CE                                    i1l1903 02B1  
                                  i1l1921 02D3                                    i1l1913 02CF  
                                  i1l1905 02BF                                    i1l1931 02F0  
                                  i1l1923 02D4                                    i1l1915 02D0  
                                  i1l1907 02CB                                    i1l1933 0306  
                                  i1l1925 02D5                                    i1l1917 02D1  
                                  i1l1909 02CD                                    i1l1935 030A  
                                  i1l1927 02D6                                    i1l1919 02D2  
                                  i1l1937 0310                                    i1l2579 02F8  
                                  i1l1993 03D7                                    i1l1995 03DE  
                                  _PMADRH 0192                                    _PMADRL 0191  
                                  _PMDATH 0194                                    _PMDATL 0193  
                                  _PMCON2 0196                                    _OSCCON 0099  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
             __size_of_PWM3_LoadDutyValue 0016                            __CFG_STVREN$ON 0000  
                                  _msTick 0020                          ?_TMR0_Initialize 0070  
                        __end_of_setState 0363                              __pdataCOMMON 007A  
                         ?_WDT_Initialize 0070                  ADC_GetConversion@channel 0075  
                   __end_of_TMR0_CallBack 03E4                   __end_of_TMR2_StartTimer 0418  
TMR0_SetInterruptHandler@InterruptHandler 0072                          ?_PWM3_Initialize 0070  
                       _SYSTEM_Initialize 0395                   __end_of__initialization 002E  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                 __size_of_timer0CallBack 006A                              __pidataBANK0 041A  
                     ??_SYSTEM_Initialize 0075                                 ?_TMR0_ISR 0070  
                        ?_TMR2_Initialize 0070                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 03AB                                __pbssBANK0 0020  
                              __pmaintext 0031          __end_of_TMR0_SetInterruptHandler 040B  
                              ??_TMR0_ISR 0072                                __pintentry 0004  
                 __size_of_ADC_Initialize 0009                                   _PWM3DCH 0618  
                                 _PWM3DCL 0617                                   _PWM3CON 0619  
                        ?_TMR2_StartTimer 0070                      _ADC_InterruptHandler 0028  
                               ?_setState 0070                                   __ptext1 0312  
                                 __ptext2 0415                                   __ptext3 0395  
                                 __ptext4 0411                                   __ptext5 03ED  
                                 __ptext6 03AB                                   __ptext7 0405  
                                 __ptext8 03F5                                   __ptext9 037D  
                   _OSCILLATOR_Initialize 040B                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0072                __size_of_SYSTEM_Initialize 0016  
                    end_of_initialization 002E                                ??_setState 0072  
                          _timer0CallBack 02A8                          ??_WDT_Initialize 0072  
                _TMR0_SetInterruptHandler 0405                                 _PORTAbits 000C  
                        __CFG_FOSC$INTOSC 0000                    __end_of_timer0CallBack 0312  
              __end_of_PWM3_LoadDutyValue 03D7                             __pidataCOMMON 0418  
                       __size_of_TMR0_ISR 0008                            _ADC_Initialize 03E4  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0014  
                __size_of_TMR0_Initialize 0016           __size_of_PIN_MANAGER_Initialize 0018  
                         ?_timer0CallBack 0070                  __size_of_PWM3_Initialize 0008  
                  __size_of_TMR0_CallBack 000D                    __end_of_ADC_Initialize 03ED  
                             __pdataBANK0 0031                               __pbssCOMMON 0078  
                               ___latbits 0000                             __pcstackBANK0 002F  
                __size_of_TMR2_Initialize 0008                          setState@newState 0074  
                            _currentState 002A                     _TMR0_InterruptHandler 002C  
                               __pnvBANK0 002C                    _PIN_MANAGER_Initialize 037D  
                               _ledBitMap 007A                         __size_of_setState 0051  
                         ?_ADC_Initialize 0070                               _ledBitIndex 0078  
            ??_INTERRUPT_InterruptManager 0072                             _TMR0_CallBack 03D7  
                       ??_TMR0_Initialize 0074                                  _LATBbits 010D  
                                _LATCbits 010E                  __size_of_TMR2_StartTimer 0003  
     __size_of_INTERRUPT_InterruptManager 000F                ??_TMR0_SetInterruptHandler 0074  
                                _PIR1bits 0011                                  _TMR0_ISR 03FD  
                       ??_PWM3_Initialize 0072                                _ADCON0bits 009D  
                          ?_TMR0_CallBack 0070                         ??_TMR2_Initialize 0072  
                       _ADC_GetConversion 0363                   ??_OSCILLATOR_Initialize 0072  
                      ?_ADC_GetConversion 0072                        _PWM3_LoadDutyValue 03C1  
                     ??_ADC_GetConversion 0074                                  _doToggle 0079  
                                __ptext10 040B                                  __ptext11 03E4  
                                __ptext12 03C1                                  __ptext13 0363  
                                __ptext15 03FD                                  __ptext16 03D7  
                                __ptext17 041B                                  __ptext18 02A8  
                     ?_PWM3_LoadDutyValue 0072                          ??_timer0CallBack 0070  
                           __size_of_main 0277      __end_of_TMR0_DefaultInterruptHandler 041C  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 041B  
               __end_of_ADC_GetConversion 037D                                  _setState 0312  
                    ??_PWM3_LoadDutyValue 0074                                  int$flags 007E  
                       ??_TMR2_StartTimer 0072        __end_of_INTERRUPT_InterruptManager 0013  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0072                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                            _doButtonAction 002B  
                              _PMCON1bits 0195                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                          ??_ADC_Initialize 0072  
           ?_TMR0_DefaultInterruptHandler 0070               PWM3_LoadDutyValue@dutyValue 0072  
                              _OPTION_REG 0095                           _TMR0_Initialize 03AB  
          __end_of_PIN_MANAGER_Initialize 0395                __size_of_ADC_GetConversion 001A  
                         _PWM3_Initialize 03F5  
